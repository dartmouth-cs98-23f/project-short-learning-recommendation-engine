welcome to the quantum dev room happy to see that many people found a room i want to introduce the first speaker of the day which is tomasz thomas holds two master degrees one in theoretical computer science and one in cyber security and hes one of the cofounders of the quantum open source foundation and the biotech startup protein cure and he has worked with most of the different quantum hardware architectures and deeply believes in the value of combining quantum computing and open source so please welcome the speaker with me all right guys can you can you hear me okay it seems like uh the volume is okay maybe a little bit too loud um all right first of all welcome to the room we ended up having a little bit um of an emergency reshuffling our original room got flooded by here so thats why were in this bigger space so this is this room is organized by the quantum open source foundation and we are happy to be at fosdem again um last year was our first year being here and we really enjoyed it so were really happy to be here again this time in uh in a bigger space um were gonna have 14 speakers today um and were trying to change the actual kind of theme of the of the room a little bit this year last year we had a lot of speakers from the quattrocoptic industry and were talking about many different uh quantum computing libraries this year we want to be more dynamic so were going to have shorter talks the length of talks ranges from 35 minutes to 25 minutes and well also be more project focused so were going to be speaking more about the projects in the quantum public space that some you know academic groups or individuals work on their free time on or as part of their job and last year we had a little bit of a problem we had capacity of roughly 90 people left i think in in the room and uh durham got really really packed uh we actually nobody could even like leave the room and have any hope of getting back uh throughout the day this year it seems like the situation is going to be a little bit little bit better um but since we since we moved and since many people are still probably coming in because they just just noticed that the room has changed locations uh if you see that people are coming in and theyre kind of like waiting on the sidelines and you have seats on on the sides and theres still space in them in the middle you know feel free to kind of compress and go into the middle rows such that people have no space to sit okay and now coming down to actually what i wanted to speak about which is introduction to quantum software development so im gonna gonna divide my talk into three parts in the first part im gonna talk about some parallels that we can find in quantum computing space right now um with the development of machine learning and how the field of machine learning has developed in a second part um im going to give you guys a little primer to quantum computing just a very quick rundown of different architectures and things you need to know about quantum computing to understand um the rest of the day and in the last part okay uh in the last part were going to speak about a little bit how you guys can help and how you know software engineers and computer scientists fit into the picture and you know how you can you know lead i guess hand out your hand and offer some help to do these projects so success of machine learning really falls down not only to machine learning scientists but also a lot of work that has been done around machine learning to kind of help foster the ease of adoption of of the tools and uh developments that are that are being produced uh one of the big things that helped people develop their own machine learning solutions are machine learning frameworks and here on this slide i list a couple of most popular ones im pretty sure that youre familiar with socket learn or tensorflow or at least heard about these libraries and really what these projects do well is that they have really nice welldocumented apis tutorials they have a really good basically foundation that they offer to anybody who wants to jump in into the field so if you want to start machine learning you dont need to you know implement your own machine learning algorithms from from scratch in c plus you can rely on all these libraries and existing frameworks to help you build your models and thats something that really helps people to jump into the field then theres a lot of tooling that has been developed that helps people to not only develop their models for example in the case of jupiter notebooks its a really great collaboration tool but also to you know share their models and deploy them into production so for example the aux framework over here is a tool that helps you you know share your model and provide an inference pipeline no matter what kind of framework you use to actually train the model itself so you can see that once again the theme repeats um you not only need the underlying algorithms but you also need to build a lot of tooling to bring this technology machine learning into the market and last but not least a lot of progress in machine learning has been really fueled by just going for bigger and bigger architectures theres this joke in the community that the bigger is is better and the bigger network solves everything and on this graph on the on the left you can you can see thats a logarithmic plot you can see how the different architectures that uh you know became really successful how much training they um actually need um per day and you can see that for off ago zero reaching like a thousand petaflops seconds per per day so once again basically this development is largely fueled by engineers working on large scale systems on the on the right you can see the pictures of the google tpu tensor processor processing unit um which kind of brings in the hardware engineers into the picture so you can really see that it is a effort of a whole range of diverse backgrounds that is kind of being combined here to produce the successes that we see today all right so now lets kind of you know just keep that in the back of our minds and lets jump into the part of the quantum computing primer um so i guess you guys are here because you have been hearing a lot about quantum computing and yeah theres like all these very um hyped up articles um you know if you scroll through your linkedin feeds um youre gonna see very various um sensational things being written about concocting so yeah the question is how is it going to actually change our lives and even more recently a couple of months ago quantum has sorry google has announced that they have reached this thing called quantum supremacy and uh yeah what does that even mean for us are we going to throw away our regular computers and everybodys going to just have a quantum computer now its its unclear so the hype is really really getting higher and higher this is the article that actually announced the quantum supremacy and you can see that they used a qpu with 53 qubits that can occupy a state space of two to the 53 because every qubit can occupy two basis states and you can see that if you were to simulate this uh this problem it would take you according to this estimate 10 000 years on a stateoftheart supercomputer so this this particular transition having demonstrated that we have solved the problem which is not necessarily of practical value right now this will be called but its its basically solved on a quantum computer whereas we cant efficiently do it on a classical computer thats what we call um quantum supremacy so it doesnt actually yet mean um that you know quantum computer has surpassed classical computers on a practical problem um and that terminology is uh something that uh you know is being fleshed out in the field actually will zang here in the audience is a nice blog post about uh um you know different terms we should use for achieving advantage and the quantum computing world with quantum computing architectures so yeah right now we are probably i would say somewhere around the peak i dont know how many people in the audience who are familiar with the field to agree with me and were going to see how the hype cycle evolves and what its going to do to the field but the impact of quantum computing um really shouldnt be that you know we shouldnt be thinking that its going to come here and its going to like replace all the methods that we already have to solve solve problems um rather what we should think about we should think about quantum computing helping us solve more problems so what are the things that quantum computers would be good at well these are problems like optimization problems you know classic example is this traveling salesman problem where you try to find a path through a city that is most efficient and visits all the nodes that you specified for example um you know encryption and cyber security we can hear a lot about quantum computers being thread to our cyber security systems because theyre going to break our encryption but we can also use quantum computers to develop better cyber security so um its its a twosided coin and then theres a big subfield of quantum computing called quantum machine learning where people are trying to figure out whether quantum computing can help us solve some of the bottlenecks of you know scaling machine learning that we kind of have have today um then one more i guess near term side um we can use quantum computers to do things that are much closer to what physical systems do so molecular drug design and kind of the design of um of different materials for example using organic batteries or solar cells um are fields where we expect that quantum computing is going to be you know probably providing some kind of advantage sooner than in some in some other domains now that was like a very brief introduction um im going to jump in this part of the talk a little bit into different paradigms of quantum computing and how does the kind of feel divide a little bit so theres three major kind of kind of areas theres quantum annealing discrete gate based quantum computing and continuous get based on computing and im going to jump into each of these individually all right so in quantum annealing were trying to find solutions to optimization problems and basically what we do we specify some sort of energy landscape so we define hyper parameters that define the energy landscape and quantum annealing is a process that in the hardware tries to find the minimum energy state of of the system so the system models this landscape that you can see on the left and the minimum energy state would be the deepest valley of of this diagram so um that corresponds to the conformation of these little proteins that has the lowest energy um and the biggest player in the field is the company called dwave theyre a canadian company and have been around for a while now more than decades trying to tackle this uh this problem if you look um at the hardware of quantum annealing um you might have seen the picture on the right thats uh how the dwave machine looks when its all uh closed up but in the middle um thats the actual i guess the chandelier of dilution refrigerators and you can see how the temperature is dropping all the way to um the processor on the bottom so the processor itself runs on a temperature that is colder than the temperature in the outer space to minimize all the all the noise and thermal fluctuations here you can see how you know the scaling of the of the size of the chips and the quantum mechanics kind of evolved um its kind of a selffulfilling prophecy the company is trying to achieve this uh this exponential leveling um pace that kind of reflects the moores law and right now actually even bigger chip is in development so the highest chip on this graph is 2000 qubit and i want to keep in mind that between the paradigms the number of qubits or other metrics dont really port so if i say this has 2 thousand qubits and in some other architecture we have on a different number of qubits thats not directly comparable here we can see that basically this is the architecture of the new generation vwave chip on the left we have this 2000 q called the chimera graph and on the right we have this new topology called pegasus and the lines here really depict the connections between qubits so this kind of kind of deter i guess yeah determines which qubits can actually interact in the equation that specifies the energy landscape so the more connected the better but making more connected graphs is more difficult in hardware so this is how you specify the energy landscape its a what we call quadratic unconstrained binary optimization problem because the variables here are quadratic oh sorry binary and the terms are at most quadratic um thats all you really need to know um i dont need to like deep dive deep into the details how we specify that equation but its actually not that difficult its basically we need to encode the constraints of your problem into some sort of energy penalties that if um are violated they no longer correspond to the lowest energy solution of that equation um you can see that the things arent perfect here on this graph you can see that some qubits are missing or some links are missing and theres a bunch of like more lower level problems connected with you know programming these devices because um we have to deal with things like finite resolutions were going from digital to to analog and we might not be able to represent you know for example floating point numbers with the precision we would like to have so there are things that you know kind of coming to the picture that you might not be used to because youre simply dealing with a technology that is more lower level than you know your regular um classical programming language these days here is an example of how you for example would um specify a problem so this encodes the energy landscape of a checkerboard and its lowest energy state is basically a state where the neighboring qubits are alternating in value so there you go 0 1 0 1 or 1 0 1 0 and you do that by imposing a very simple simple matrix of penalties here that is defined there over with the j matrix and its really only like a couple of lines of code using the dwave uh standard development libraries so the workflow in a quantum annealing world is really you define a problem you figure out how to you know encode that problem as this equation and as i mentioned you basically do that via imposing different penalties for situations that you dont like so for example in the previous case i would impose penalties for two qubits being the same value once you have the equation you try to in what we call embedded on the graph so youre going to make sure that the qubits that are talking to each other in your equation can talk to each other on a hardware and then you just solve the problem on the hardware and you read out your solution and if you want to guys play with it theres dwave leap its a platformer out of dwave that you can have one minute of free qp time to play with and some further resources um for you guys to look at okay the universal computing um im gonna speed up things a little bit um here we are constructing socalled quantum circuits so the big players are ibm google righty and theyre each are developing their own respective libraries that you know you can use to specify quantum circuits and run down the results uh fundamental building block of quantum computing in this paradigm is qubit and this is something that you might have seen previously um if not its completely fine qubit is basically specified by two amplitudes thats alpha and beta in this equation and those squared specify the probabilities of sampling each of these basis states either 0 or 1 and basically in order to program the device you construct a circuit so very much similar to you know classical circuit logic you specify quantum circuits uh you you basically have either operations that touch one two or multiple qubits and by imposing those operations you alter the state of the system we alter what we call the wave function and at the end of the computation you just read out the the result so for example one of the things that you can do you can basically introduce entanglement its one of the usual building blocks of quantum algorithms and you do that using a hadamard gate hadamard gate is nothing else a certain rotation of uh of the qubit because we can see the result of the rotation um here for two basis states another gate that you can use is a c not gate and if you were to combine the two you can actually reach this combination of states which kind of imposes that we can only get zero zero or one one out of the system which we call um entangled state or maximum integral state um so we would do this in uh um using the we get this library as described over here so you can again see that you know its a fairly simple way to specify the circuit actually it generates a circuit in a language called quill which is uh on the on the right um so its very much like assembler like in this particular sense and here the mo the workflow is again very similar um you go from your professional problem then you you know figure out the quantum algorithm you generate a quantum circuit for that algorithm and you compile it to the hardware so the hardware can only use certain operations so theres a step called compilation where you make sure that the gates that youre using are actually implemented on the on the hardware and then you run your thing on the quantum processor and read out the result okay another paradigm and the last one that i want to talk about this continuous variable quantum computing and here instead of having these you know two basis states you have a continuum of basis states so instead of qubit we call the computational building block the queue mode and uh for example one of the applications or one of the kind of building blocks of these systems is quantum boson sampling that you can use to you know sample from complex pros or distributions um its well suited for graph hormones for example um we wrote a paper on using gaussian blossom sampling for certain molecule docking problems so that was basically trying to find maximum clicks and certain certain graphs that we generated so its its really you can see that you can have to combine you know knowledge from quantum computing with knowledge from computer science in order to achieve useful results and the biggest player um in this field is xanadu and actually we have a speaker from xander here today so hes going to tell you more about this domain more resources if you guys are interested you can find us in a slide deck so at the end of the talk i want to kind of talk about a little bit about how can you become part of this and uh you know what are the things that you can actually do to um you know help the field out the nice thing about quantum computing is that um theres a big push um in the community for the things to happen in the open source way not only the research itself but also like all the underlying building blocks um the libraries are available open source and uh you know it really helps reproducibility but also it helps more people join the field so like all of these not all these many of these quantum hardware providers are also providing open source libraries to program their devices or play with their quantum virtual machines quantum simulators and that is that is really nice for us to be able to you know spread the knowledge the kind of implicit thing about the field is that it it comes from you know academia to to a degree and many people working on these open source projects are scientists um and theyre doing a great job but many of them are not software engineers by training and theres a huge potential in um you know more of software engineers being involved in helping you know scale and design apis and and just build this system in a way that follow the best practices of software engineering so theres a huge list of projects on our website the links are on the right that you can use to see a um you know quite exhausting list of different projects in different different areas and i want to mention some of those here so these are things like quantum compilers or quantum circuit optimization where you try to make sure that you modify the circuit in such a way that you lets say optimize the number of gates and at the same time you produce the same kind of a result at the end there are things like development of control systems so were actually going to have a speaker today speaking speaking about um a open source project for control systems and and quantum computing um we have things like quantum games or ide tools visualization tools so a lot of these things that need to be developed now we can draw the parallels that i was speaking about in the case of machine learning um a lot of work needs to be done for us to be able to like do research and really develop this field further and also that work is um you know fundamental software engineering uh basically waiting to be fulfilled so feel free to jump into any of those things um commute is very very open and uh im certain that they would love you know a helping hand from people that can you know tell them how to structure or package their python library better and put them put it on pipe because maybe right now its on github and its not even installable for wifi so there are a lot of opportunities like that if you guys want to jump into space and and learn more about the area and if you guys feel even more adventurous theres a incubator that is dedicated to quantum computing slash quantum machine learning actually sean is in the room sean is one of the people organizing it sean if you could wave your hand so that people know they could talk to you in in a break if theyre if theyre interested and uh thats actually where my company started so uh shout out to these guys and uh if you want to help with uh you know education and outreach you can speak to me and mark were running the quantum open source foundation you can join our slack channel if you want to become part of the community and to know more about the events and things that were organizing and yeah for that purpose you can also follow us on twitter or other social media accounts or just github or gitlab if you guys fancy that and with that i thank you for your attention also um oh yeah um and theres also a micro grand program from uh from will called dry funds so thats unitaryfund you can check out if you are interested in doing a project but you not sure if you could you know support yourself theres a way to get funding for that as well all right so that thanks thank you for the attention and lets uh wait for the next applause um 