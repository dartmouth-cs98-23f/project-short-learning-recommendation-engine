the dream job that you really want if you don’t   prepare data structures and algorithms there’s  a good chance that you will be rejected now   i am no love guru when it comes to  relationships but for coding interviews   i do have some expertise and to crack all these interviews the only course i have ever used is called data structures and algorithms and the best  part is that i did not master dsa sitting in   a classroom of a fancy university  i did it online all by myself   because i have no computer science degree  today i will share my entire journey in detail   so that you don’t repeat the same mistakes  that i made when i was struggling with dsa before we go too deep into how to  learn data structures and algorithms   we need to first understand what data structures  and algorithms means believe it or not   you might have already used data structures and  algorithms in your life for example i want you   to remember the time when the meaning of every new  word was not available on google and you had to   use an actual physical dictionary to look up the meaning of  a word to find a word let’s say “programming”   you would open the dictionary in the middle and look at  the words that are there on that page let’s   say you landed on a page with words starting  with “m” you know that “m” comes before the   “p” of programming so the word “programming”  must come after the page you just opened so   you start looking for “programming” in the right  half of the dictionary if you repeat this step   multiple times you will end up finding the  word programming the process or in other words   the algorithm that you just saw is called “binary  search and the way data is stored which   is “dictionary” in this case is called a data  structure  don’t confuse this “dictionary” with   the data structure “dictionary” that we might have seen in python because they are slightly different but why does a software engineer even need  data structures and algorithms imagine that   in the dictionary example i just gave you someone  starts from the beginning and keeps flipping one   page at a time to find the word  “programming”  it will take them many   minutes to find just this one word with “binary  search” you will find it in a matter of seconds   that’s the power of algorithms now imagine  that instead of giving you a dictionary where   the words are neatly organized in alphabetical  order i gave you a bag full of paper slips each   containing a word and its meaning how long do you think  it would take you to find the word “programming” at   least a few hours unless you are really lucky  that’s the power of ‘data structures i hope that this example makes you even more  excited about learning data structures and   algorithmsto make learning dsa easier for you  i recommend that you learn at least one object   oriented programming language before you start  dsa that’s because most online resources for   dsa will be using an object oriented programming language  you can pick any popular language like java   javascript c or python if you already  have a language that you are comfortable with   you can continue with that but if you don’t  i recommend that you pick python for dsa   that’s because python is less verbose and you  can write code really fast in python and in   an interview where you only have 45 minutes to  solve a question this would be really helpful now that we have that out of the way lets talk  about how i started my dsa journey if you have   seen any of my previous videos you know that  i am a strong advocate for “learning by doing”   unfortunately for dsa i don’t think there is  any good resource that you can jump   into and start learning by doing that’s because  dsa requires a good theoretical foundation before   you can actually apply it to any problems  that’s why i took the online course   route for dsa i used this course called algorithms by princeton university on coursera   this course is divided into 2 parts and is taught in java but if you are looking for a good dsa course in languages other  than java i do have some recommendations for   you later in the video professor sedgewick who  is one of the instructors of this course is   famous for taking the worst case space complexity  of quicksort from big o of n to big o of logn in   5 extra lines of code if you don’t know  what that means don’t worry about it the point   i am trying to make here is that this course is  taught by the best of the best the instructors   of this course have seen many algorithms come and  go during their career their book on algorithms   has been a bestseller since the 1980s that’s why  instead of just saying “here are data structures   and algorithms that exist” they are able to  provide a complete context of why a particular data   structure or algorithm exists and when to use  it and purely from a learning standpoint   this course make you fall in love with algorithms i can not recommend this course enough but there is one big issue when it comes to  learning dsa most people don’t know how much   is enough and where to draw the line and i  also made a same mistake here this is the first   of the 3 big mistakes i made on my journey i will share the other 2 later in the video the mistake i made was that i   i ended up completing both algorithms 1 and algorithms 2 i realized it much later in my journey that i did not need full   algorithms 2 for coding interviews if i could  go back in time i would skip the entire week 3   and everything after week 4 i am not saying that  these things are not useful it’s just that they   are rarely asked in the interviews and even if  there is some uncommon question that uses them   you would be able to solve it if you follow what  we are going to discuss in the rest of the video anyway if java is not your primary  language and you want to use c instead   there’s this course by ibm that you can  use if python is your language of choice   you can use this free course by google on  udacity this udacity course might not be   free in your country but it’s free in the us all  the links will be in the description by the way   in case you are wondering i do not  get paid anything if you use any of   the resources i am recommending today so the only  way to support us is by subscribing after finishing a course on dsa you will  become very powerful and you might start   believing that you can bend the entire  universe to get that dream job and that   would be the second big mistake that i made i  applied for many jobs after completing dsa but   it did not get me anywhere that’s because  knowing all these different algorithms and   actually applying them to a new problem  are very different things add the   interview time limit of 45 minutes on top of that  and it suddenly starts looking like an impossible   task for those who are having a hard time  finding a job even after learning dsa trust me   i have been in your place here is how i solved  this issue i went to leetcode and started solving   some interview questions there if you don’t  already know leetcode is pretty much the best   resource out there to practice dsa questions all the  questions are labeled easy medium or hard based   on difficulty level in the beginning you might  not be able to solve medium or hard problems so   stick to easy questions and when easy problems  really become easy for you move on to the mediums   and so on and when  mediums start feeling easy you are ready for   the coding interviews if you want me to make  a full video on how to use leetcode efficiently   let me know in the comments another resource that  i would like to mention here is “top 10 algorithms   in interview questions” on geeksforgeeks if you  have done your leetcoding well you would already   know most of the algorithms here but it’s still  a good place to revise what you have learnt but before you start applying for jobs it’s very  important to set your expectations right the   first few interviews are most likely going to be  a disaster and that’s perfectly fine that’s why   i recommend that you don’t start by applying  to your dream companies in the beginning do   some practice by applying for companies that  might not be your top choice and once you   are doing well there move on to the ones  that you really desire and always remember   that rejections are part of the process like  they say there are two ways to walk in life   the first is to walk like you are the king of  the world the second one is to walk like you don’t   give a fk who the king is choose the second  one and don’t let anyone’s opinion discourage   you from working towards your goal and  as always we are here to support you before i forget let me tell you the third  big mistake that i made i used to think   that mastering dsa will make sure that i can crack  any software engineer interview but in reality   dsa is not the endgame you still need  to impress the hiring managers and crack the behavioral interviews if you  want to know how to do that you can watch this video at the top my name is  sahil and i will see you in the next one 