code you can create something truly zero to one learning to code is one of the best things you can do if i could go back in time this is exactly how i would do it ill break up this video into three big chunks the mindset coding and the developer environment everything im gonna tell you is paralyzable which means theres no real order and if youre not in college or a boot camp great this video is tailored for you its definitely harder but if youre willing to put in the work you can definitely learn how to code by yourself in fact if i could go back i dont know if i would have gone to college lets get into it part one your mindset coders think differently we approach our lives and problems in a certain way and i can confidently say my daytoday life is different now than my software engineer step 11 adopt a coding mindset and what i mean by that is for every problem inefficiency annoyance in your life you need to think theres a solution for this i just need to find it it might take me minutes hours or even days but if i look hard enough if i try hard enough i will find it and that means google is your best friend your toaster is broken all right pull up youtube and start searching the internet modem is blinking yellow google the serial number and start investigating theres a spider on your house and you want to get rid of it yeah i dont know if google can help you there you might just have to move houses and what im saying might sound obvious but it took me years to realize not everyone is like this if you were ever wondering why your parents think youre it support well heres your answer your parents can google just as well as you can but they dont believe they can and to be a coder you need to believe you can as a fundamental truth because when its 4 am and youre working on a programming assignment and youve tried everything but you still cant figure out the bug the only thing thatll keep you going is knowing theres a solution you just need to find it and that brings me to the second part of the coding mindset humility trust me when i was in college at ta sessions id be yelling at the top of my lungs theres something wrong with my laptop the code is right i dont know whats going on i dont write buggy code the computer is never wrong and the second i realized that and truly internalized it was the day i started growing in my coding journey step 12 learn how to problem solve have you ever wondered how airlines decide which airports to fly from and how shipping providers decide what packages make it on the plane or how classes are scheduled even though there are only so many auditoriums well these are problems solved by algorithms that used to be done by hand i mean some pretty legendary woman got us to the moon with only chalk and blackboards but today the scale is just too massive it would take lifetimes to solve these problems by hand so we code at the end of the day coding is just a tool for problem solving the hard part is the actual problem solving being a good coder means being good at learning picking up new things and technologies quickly understanding that theres a lot out there that you dont know but you can learn it all with some time and patience at every one of my internships and jobs i had no experience with the languages they used c sharp at slumberg and microsoft ruby on rails at gusto and golang get bolt but i learned them all and at hackathons my teammates would want to use buzzwords like machine learning in the cloud and id have no idea what they were saying but id figure it out and yes you dont have to be a good computer scientist to be a good coder but you do have to be a decent problem solver and hands down the best free resource to improve your problem solving skills is cs50 harvards introductory computer science course that all incoming freshmen take you have an ivy league education one of the best intro computer science courses out there at your fingertips for free take advantage of it cs50 will give you a broad overview of computer science algorithms and data structures is it necessary to learn how to code no will it help you and accelerate your learning definitely the class is language agnostic youll be exposed to c sql python javascript html and css all while working on real world problems in biology cryptography finance forensics and gaming what you learn in this course will help you immensely with everything else im going to talk about at rice the first computer science class i took freshman year was comp 140 basically rices version of cs50 and it energized me to continue my coding journey part two learning how to code now that youve adopted the right mindset its time to learn how to code i cant say the journey will always be rosy but i promise it will be fulfilling step 21 learn one programming language deeply the language you use to learn programming doesnt have to be the same language you eventually use at work or even in your personal projects but its good to know one language really well like your goto if you took cs50 youve been exposed to a bunch of languages but for now id recommend python its the most beginner friendly language and for the most part it reads like english the data structures are really intuitive and its not verbose it isnt typed which isnt ideal but you can always use linters to optionally add typing and this is probably the language youll want to use for coding interviews so its good to get comfortable with it now to actually learn coding in python there are so many great resources out there for now youre going to want to focus on syntax and data structures so follow an online course or look up some tutorials on youtube make sure you learn about control flow so if else statements basic logic and or not loops foreign while loops and objects classes and other objectoriented programming principles in my opinion these are the highest yield topics and for data structures dont worry too much about crazy optimized red black trees and whatnot for now focus on hash maps and arrays once you have a basic command of python move on to the next step step 22 learn scripting sometimes therell be stuff youre doing that will feel really manual like data manipulation or renaming files or sometimes you just want to write code to produce code you can write scripts on your terminal through bash scripts but hopefully by this point you understand some python so you can leverage it to automate some of your daily tasks for example lets say you want to grab data from a csv file and generate an insert sql statement that you can copy paste into your database console and imagine there are no nice libraries that can help you do this it would take hours if you wanted to do this by hand but with a simple python script you can generate this entire command copy paste it into the database console and youre good to go you basically wrote python code to generate an sql query string thats awesome the great thing about scripting is you dont have to spin up a web app or worry about hosting your server you can just write python code and writing more and more python will make you better at it coupled with the coding mindset you now have a practical tool to solve some of your daily problems step 23 create a personal project the first thing i do is sign up for a hackathon in person is best but virtual is fine too this is much like signing up for a marathon so you feel motivated to go out there and train a hackathon will give you the chance to create a project youll learn a lot youll work with other people and itll give you a taste of what reallife software engineering feels like well except reallife software engineering projects arent completed in 48 hours and you actually have to test your code and youre not as sleepdeprived but you get my point youll get a chance to create something that you can deliver to customers in this case the judges ive said this many times in other videos the best way to learn programming is by doing and ideally you work on something youre passionate about so pick a topic youre interested in and build something there are a couple things i think are important here first youre going to want to pick a full stack project which means theres a front end a back end some api message passing layer and then a database to actually store the information you can do everything in python if you want through flask or django but id actually recommend learning and using javascript javascript is probably one of the most popular languages out there today and it has great support for front end and back end for the front end id recommend react and for the back end some framework around node express is a really popular one like python javascript is not tight so i highly recommend using typescript which is actually what industry uses so itd be a good precursor anyway the awesome thing here is that there are so many stacks you can use mirn is a really popular one but theres no wrong answers just pick one and dive deep for the message passing api layer probably start off with the rest protocol but if youre feeling extra bold give graphql a try and for the database id recommend using mongodb which is very javascripty and jsonlike or you can use a classic relational database like postgres for the backend server and database feel free to host everything locally but for bonus points see if you can set up your infrastructure in aws azure or some other cloud provider because thats how they do it in industry if youre not feeling particularly inspired heres a project i think gives you the most bang for your buck implement a stateful counter which means the front end will have a number a plus sign and a minus sign to increment and decrement the counter and maybe a reset button to set it back to zero and stateful means if you close the app and reopen it the count should continue from where it left off and this will force you to use a database to actually store the information these are called crud apps for create read update delete the four basic functionalities any feature can have by implementing this youll get experience across the stack and have a realworld project to show for your efforts step 24 practice for interviews if youre watching this video chances are at some point you want to get a fulltime software engineering job and that means youre gonna have to do coding interviews and remember when i said just focus on python syntax and hashmaps and arrays well i wasnt lying by now you have a good grasp of the fundamentals so youre ready to pick up an interview book and start practicing the classic book everyone knows is cracking the coding interview but its honestly not my favorite the solutions are in java which is completely unnecessary since java is such a verbose language id actually recommend elements of python programming since the solutions will be in python and youre already familiar with the language for interviews youll need to be familiar with strings arrays hash maps trees graphs queues stacks tries and heaps along with some basic algorithms like breadth first search depth first search and some other basic sorts and searches i know it sounds like a lot but you can get there with some practice chances youll use any of this at the actual job close to zero chances you see these concepts in interviews pretty high you should also learn recursion and practice it dont worry if you struggle i struggle to this day to truly prepare for interviews id recommend doing practice problems on league code and using these sites that allow you to mock interview other people and have them mock interview you part three your developer experience now this isnt technically coding but its almost impossible to code without a solid developer environment and remember theres a stark distinction between writing code just to pass a coding assignment and building something in the real world in a production environment so honestly i think getting comfortable with the tooling youre going to end up using every day is probably the best investment you can make step 31 learn the terminal youre going to code on your laptop right now you probably drag and drop things into windows and right click to find what you were trying to do and dont worry i was just like you but those days are gone or they should be gone if youre trying to seriously code just like command c is way better than right clicking and hitting copy navigating on your laptop through your terminal is way more efficient than using the user interface you know those hackers you see in movies coding really fast well all that is fake but the one thing they got right is that theyre using the terminal and i promise you sooner or later youre gonna have to get comfortable with the terminal so you might as well start now couple things here if youre on windows im just gonna say it the command line is not it the linux flavoring is way nicer so id highly recommend you get the bash subsystem for linux and if youre on mac id highly recommend using itunes ii its way nicer than the default terminal now you have a couple options you can use the default shell which is usually bash or you can use some wrapper like zish oh my zis or fish no hard opinions here but just pick one and learn it and if it makes a difference i personally use oh my zish get comfortable with the package manager and commands like sudo ls mv rm and so on and the best way to do this is to force yourself to only use the terminal to navigate on your laptop its like when righthanded people want to become ambidextrous they start brushing with their left hand lets say you want to move a bunch of files to a new directory and then open that folder in an editor cool you can do it on the terminal the terminal can be gnarly and you might have to google a bunch and resolve all these dependencies but thats great more practice step 32 learn your way around an editor im not a vim or emax power user and im not going to debate you on tabs versus spaces i mean i do not get why anyone would use spaces over tabs i mean why not just use vim over emacs i do use vim over emac oh god help us but trust me youre going to want to know your way around a coding editor my goto in college was sublime but honestly looking back hands down the best open source editor out there today is vs code so download it and start navigating around check out some extensions like prettier and eslint and browse through some themes and other settings and really just get comfortable with the whole environment id also recommend any jetbrains ide like intellij for java or goland for golang youre gonna have to buy a license but these editors are powerful and they can level up your coding ability step 33 learn git and become familiar with version control if youve gotten this far you probably know what git is you might have seen it while playing around in the terminal or used it in cs50 or used it during a personal project git is just a version control tool that allows you to save checkpoints of your work youll definitely use git or some other source control tool throughout your career i remember in my first hackathon we were all coding all night and then we were finally ready to integrate our work and merge all our changes together and we screwed up some git command and lost everything im not gonna lie im still not the most proficient with git but you really only have to know the basics get pull merge rebase commit push thats about it just remember git commit often and youll thank me later and while youre at it check out github either for your own personal project or just to check out an open source repository you can see issues pull requests and the entire code base which is pretty cool and this is just a nice to have but check out the readme because its usually written in markdown which is a pretty sweet language to format plain text congrats by this point youre well on your way to becoming a coder you think about things the right way you have the drive and patience to stick with it and you truly believe in your heart of hearts that you can do it and you know python and javascript you have some projects under your belt and you have a sound understanding of data structures and algorithms youre ready for interviews and whatever else the world throws at you i want to wish you good luck with everything that is to come and just like everything else in life its the journey that matters not the end result take a moment to see how far youve come im proud of you keep at it thats all i have for today until next time cheers music 