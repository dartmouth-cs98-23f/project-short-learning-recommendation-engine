what database system has been around for almost 50 years i guess you can guessed it by the topic of this video its a relational database hello my name is jamil spain developer advocate with the ibm cloud and brand technical specialists in the us financial services market and todays talk were going to dive a little bit into relational databases im going to get into some of the characteristics of the database model and also some benefits that it provides for you when making your decision that you want to use this for your next project to get started lets talk about the structure of a relational database system its going to pretty much map out your data points and bring out the relationships in that and the way that it accomplishes that is through the first thing is making tables which represents particular items or nouns or particular entities of your particular system that you want to actually prototype so lets say i have a bunch of books now this is going to be a table it accomplishes the attributes of these books by having columns and columns will be things like name date ok maybe author of course got to have a author for a book and every table is going to have an id feel some way to uniquely identify it each each row of this database table represents an actual record or an item a type of book thats how it really fulfills that ability to hold the database system there and then as you wait you kind of query out this particular system is through what we call a you will a structured query language and its a particular system you can say select all the books and give me all this data out for me to use now we have one particular item here books but where it really comes you really see the power of a relational database lets say now i want to show the authors and the way that relational databases can really provide the structure of relating these two entities together is by describing them through a particular entity or relationships you have one that youre here about where books can have multiple authors so maybe a one to many you can have a one to one and just a couple of relationships you can you can kind of mirror within the database system so one way that i can have this kind of a normalized structure is to say definitely the authors is going to have its own particular id and name any any any any particular order of attributes that i want to describe there but i can also one of these fields can be an actual number that actually relates to the id of this feel and this is whats known as a foreign key and of course there will be a name there so when i do my query the next query i do i can reference both these tables and say hey give me all the books and give me more of the author information from this table using this foreign key to describe that particular structure there and you can imagine youll be running a lot of these queries a lot and there are some benefits or some things that are provided to help with those to speed up these queries and make them operate as efficiently as possible you have the database will provide ways that you can kind of set an index lets say that im often querying and always trying to pull out by name or by date i can set an index on this particular column which will automatically index all the values so the next time you run this query is going to pull from what we like to call this cache of all the values most importantly every time new roles are added records are added to this particular table the index keeps building this recent i like to say cache of all these values so its always keeping up to date to work there so this is all the characteristics of what you kind of have to model out your particular application that you want to build and describe how the entities are related to each other now lets switch over here to some of the benefits that youre going to get out of the box with a relational database that you want to use the first well talk about is actual consistency now this is useful because lets say there is some point where i want to run multiple of these transactions lets say im modeling an inventory system for an e commerce application and i have the need to write several queries in a row that may manage a couple of different subsystems but if one of those queries fails i want the option to be able to roll back the whole set of all those queries just to make sure that my data always maintains some consistency there the second is the option to do stored procedures sounds like a very complicated word there but think of store procedures as the ability to write multiple blocks or functions of code or if there are a certain amount of queries that i continue to always run i can kind of model these so it takes me less code to write that particular to access that same functionality with less sql code and as you start to get into more sql writing with relational databases youll see queries can get pretty big another way you can do this as well as another topic code views here definitely want to introduce some of these keywords as you do your deeper dove you were able to see a lot of these and itd be familiar to you and the last one is a mechanism to handle locking in the database and concurrency why is that important well at some point multiple users are going to want to use the database maybe at the same time maybe two applications are going to be adding in books and if the first application is making a particular insert into this table youre going to want to make sure that the database is locked until that right is done and then the second application has its ability to go in and make its insert as well so these are all built into a lot of the relational databases that you use a lot of these benefits will be provided for you out of the box not necessarily something youll have to write in code but just know that youll have this at top of mind when you are kind of selecting to use a relational database for your next project i hope this is good for you to understand the foundation of relational databases talk to you next time if you have questions please drop us a line below and if you want to see more videos like this in the future please like and subscribe 