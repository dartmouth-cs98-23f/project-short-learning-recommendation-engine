classes and objects and in this video im going to talk about what are classes and objects and then what are attributes methods and constructors and at the end of this video im going to give you some code samples in java but this video is going to be mostly language independent so youll be able to use what you learn in this video in whatever language youre using classes and objects are actually one of the most fundamental topics when it comes to data structures and algorithms so lets get started so what are classes and objects i think the best way to explain what they are would be to give you a really concrete example so lets say as an example youre thinking about making a website where people can visit and talk to a bunch of robots so what you have in mind is when people feel lonely or something they can come visit your website and say hi to one of the robots there so when a user comes to your website they might see a list of robots like this and here you see two of those robots and theyre called tom and jerry aside from their names they have some obvious differences first of all toms color is red while jerrys color is blue as you can see and tom is slightly lighter in weight than jerry with thirty pounds of weight while jerry is forty pounds and they both have the same functionality when you click this button introduce tom will say my name is tom and jerry will say my name is jerry and thats all you have for now and its pretty basic but thats all you want at the beginning when you create this website now to create a system like this you basically need a way to represent these different entities or these different robots in whatever programming language youre using whether its python java or javascript and thats where classes and objects come in now to represent each of these robots tom and jerry that we saw earlier in whatever programming language youre using you need to store two sets of information the first set of information that you need to store is the properties that each robot has so for example the first robot we saw had these properties its name was tom the color was red and the weight was thirty pounds and the second set of information you need to store for each of these robots is the set of functionalities it has as we saw earlier it had only a single functionality in this particular case and that was to introduce itself and that might be represented as a function in whatever programming language youre using and lets just call it introduceself here for now at this point you might say is there any convenient way to organize these properties and functions together there is and thats called an object an object is basically a collection of properties which can be expressed as variables and some functions and with that collection of information an object can represent some thing whatever that thing is so in this particular case this particular object is representing this particular robot tom but you can make an object so that it represents a particular person or a particular dog or anything else for that matter if you decide to represent a particular person with an object lets say lady gaga just as an example you might have a different set of variables and a different set of functions to represent that person so for example you might still have name but you might also have height and weight eye color and ethnicity and so on and your object will probably have a different set of functions too to show what kind of actions that person can take it could be for example things like walk sleep talk or anything a person might do ok lets backtrack here a little bit once you create an object to express this particular robot tom youll be able to put this object in a variable just like that lets say r1 just as an example youll be able to use this variable that contains this whole set of information the properties or the variables and the functions just like any other variables for example to pass it into a function as one of the arguments ok lets now take a look at how the second robot we saw jerry can be represented with an object its gonna look pretty similar to the first one its gonna have the same set of properties but different values this time jerry blue and 40 and the same function as well introduceself and of course once you create this object youll be able to put it in a variable as well lets call that one r2 and because you have two distinct variables containing two different objects youll be able to distinguish them very easily in your code and just quickly about terminology these variables within an object are called either instance variables or attributes and these functions within an object are called methods ok so when you see these two objects you might say well theyre pretty similar they have the exact same set of variables or attributes and they have the exact same set of functions only one function in this case so you might say is there any convenient way to organize that somehow there is and thats what a class is essentially now whats a class a class is basically like a blueprint from which you can make objects so just imagine for a second someone telling you please make a robot if someone tells you something like that you say what kind of robot do you want what should it look like and what kind of properties should it have and what kind of functionalities should it have so basically if you want to make a robot in sort of the real world you need a blueprint to make that from to know what the robot should look like and thats sort of how it works with programming with objects and classes too so when you make an object you want to know what kind of properties what kind of attributes itll have and what kind of functions itll have and you can use a class to specify exactly that ok lets now see what this particular class might look like for these two objects these two robots itll probably look like this as you can see it has the same set of properties as the objects themselves name color and weight but the values for these three properties are not defined yet and thats because the class doesnt refer to any particular object it doesnt refer to this robot or this robot in particular it just refers to this category of robots or this type of robot in general then when you create a specific object using this class then you can specify what the name should be what the color should be and what the weight should be and also notice here that we already have the introduceself function in this class you can actually implement it already when you define this class by writing something like this so this is just an example from java in java for printing something on your computer we have systemoutprintln its similar to the print function or the printf function in other languages and then inside the input of this function we have my name is as a string plus name and this name will refer to whatever the value of the name is for that particular object so for example if you run this function in this object its going to print out my name is tom because thats the name of this particular object and if you run this function here in this object instead its going to print out my name is jerry instead and one more thing to note here is that when you define a class like this one you need to give it a name it could be anything but lets call it robot here and as you can see the first letter r is capitalized and thats a pretty common convention when you name a class ok lets now take a look at how this whole thing might look like in code were going to take a look at some code in java here but other languages are typically pretty similar lets first assume that we already have our class defined like we said its going to be called robot but were going to take a look at whats going to go inside later and once you define this class robot youll be able to use this class of course to create an object out of it and you can do that like this we have robot r1  new robot and this new robot says create a new object with this class robot and then were assigning that object to r1 and then we have the word robot here again because a class is used not just to create an object but also as a type too you know just like we say string r1 if we want to create a string we can say robot r1 to create a reference to a robot object ok lets move on when you create a new object this way this new object doesnt have the properties doesnt have its instance variables set yet so you need to set them after that just like that here we have r1name  tom and that sets the name attribute of this object or the name instance variable of this object to tom and then you need to do the same thing for the other two instance variables by saying r1color  red and r1weight  30 so thats the first object r1 lets see how we can create a second object here as you can see the second block of code here is pretty similar to the first block we have robot r2  new robot to create a new object and then we have r2name  jerry and so on to set the instance variables of that object so thats how you can create two objects of the robot class here but what about the functionality we saw earlier introduceself to run the function for each of these objects the syntax for that is actually pretty simple its going to look like this we have r1introduceself this just says run this function introduceself on this object r1 so when you run this line its going to print out my name is tom because this robots name is tom and then you could do the same thing for r2 by writing r2introduceself and thats going to run this function introduceself for r2 and then its going to print out my name is jerry ok lets now see how you can actually define this class first of all to define what instance variables this class will have you can just write these this of course says the instance variables that this class will have are name which is going to be a string color which is a string as well and weight which is an integer and when you see other sample code in java you might see words like public private or something else before each of these attributes but just to keep this simple im not going to talk about what they are in this particular tutorial and when you run this code it will just work just fine without adding these words too ok the next thing you need to define and implement is this function introduceself and for that you can write this here were defining a function called introduceself and we have the void prefix here to show that this function is not going to return anything and notice that this function definition is still inside this class and then the implementation is as we saw earlier systemoutprintln my name is thisname actually we could just have name here but i wrote thisname instead just for emphasis so whats this here this refers to whatever object whatever particular object that youre running this function on so if you write r1introduceself youre running this function on r1 so this will be equivalent to r1 so its going to be sort of like saying systemoutprintln my name is r1name which is going to be tom of course and then when you run r2introduceself this will refer to this key word will refer to r2 instead so when you run r2introduceself its going to print out my name is r2name which is jerry ok so thats the basics of classes and objects in java but when you look at these two blocks of code you might say well theyre pretty repetitive you know you need to repeat the same things over and over again and then its pretty cumbersome to remember to set these attributes every time too every time you create an object so you might say is there any way to simplify that there is and its called a constructor a constructor is basically a function that allows you to create an object from a class and then youll be able to use the constructor to you know do things like set the attributes for yourself and actually you already used a constructor you know this line right here new robot thats a constructor but thats a default constructor that java defines for you and this constructor doesnt set any of the attributes so lets see how we can create our own constructor that does set the attributes for you so that constructor might look like this so if you see this function youll notice that you know it looks like a regular function except for that we dont have any prefix here like void or string for the return value instead this constructor is just called robot notice that that name is exactly the same as the class name and then it has three arguments string n string c and int w and then inside this function were setting thisname to n thiscolor to c and thisweight to w as we saw earlier this refers to the particular object that were talking about here in this case the particular object that has just been created and then were saying that objects name should be n which is the given argument and then that objects color should be c which is the given argument and so on and then here the common practice here is to name these arguments exactly the same as these attributes name color and weight and with that this part is going to look like thisname  name thiscolor  color thisweight  weight but with that naming this function this constructor is doing exactly the same thing as this one so thats really just a style issue ok moving on were almost done here lets see how we can actually use this constructor actually when you define your own constructor your own custom constructor the default constructor stops working so these two blocks of code no longer works and then you can use this new constructor to create new objects just like this this one says robot r1  new robottom red 30 so these three arguments tom red and 30 will be passed on to this constructor and then this block of code is going to be run and so r1s name is going to be given n which is tom and then the color will be red and then weight will be 30 so this piece of code will actually be equivalent to the whole block of code we had earlier right here basically create a new object and then set the attributes to the given arguments and then we can do the same thing for r2 as well by writing robot r2  new robotjerry blue 40 this creates a new robot object with the name jerry color blue and weight 40 and after creating these two objects youll be able to use r1 and r2 just like before by writing r1introduceself and r2introduceself ok again this was just sample code in java but its pretty similar to other languages too and youll be able to find links to sample code in both java and python in the description below all right if anything was unclear in this video please let me know in a comment below so maybe i can talk about it in the next video in the next video im also going to talk about how you know multiple classes and objects can interact with each other and with that knowledge youll be able to finally start building some data structures like linked lists im also planning to create a new python tutorial video on classes and objects so look out for that as well and special thanks to brilliantorg for sponsoring this video you know some of you may already be familiar with data structures and algorithms and maybe youre watching my videos as sort of a refresher if thats the case brilliantorg might just be the right website for you to learn more advanced concepts in computer science so personally i used this computer memory course to get a better understanding of how memory works in a computer for example previously i didnt really know how structs in c are stored on memory i mean i had a vague idea but i didnt really know and i found this course was really helpful for understanding that personally what i like about brilliant is first of all the fact that they have really nice visuals like this one you know much nicer than mine i would say and theyre helpful for understanding different concepts visually another thing i like is the fact that they sometimes combine multiple concepts in a single problem what i mean by that is for example for this particular problem you need to understand different things like binary expressions and how structs in c are stored on the computer and how short and char and different types of data are stored on memory too and in my experience in general i have found that you know solving problems is a really good way to review different concepts at the same time and also learn new concepts and brilliantorg definitely does a good job of coming up with good problems to solve and they even have pretty advanced courses like this artificial neural networks course on top of their standard computer science fundamentals and algorithms courses you can just go to brilliantorgcsdojo to start checking out these courses yourself and you can get 20 off their annual subscription through that link as well all right as always im yk from csdojo and you know im working really hard here to make csdojo better and better so that hopefully eventually its going to be in a class of its own all right ill see you in the next video 