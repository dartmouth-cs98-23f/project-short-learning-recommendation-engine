today we are going to walk through stepbystep   how you can use sql or ‘sequel’  for data reporting and analysis im going to assume you have  absolutely no background in sql   and were also going to use all free tools  so theres really no barrier to learning by the end of this video my goal is that you  will know how to retrieve data from databases   and if you stick around until the end  i will also share a really neat trick   that helps you write some of the most  complex queries with very little effort so first off why would you even want to learn  sql i mean there are so many other videos that   you could be watching on youtube well all  businesses keep track of data in databases and   when i worked at microsoft as a product manager  i used sql all the time to get insights from data i worked on the website officecom and  i could write a sql query to tell me how   many people clicked on this button and i  could use that data then to decide well   should we make this button stand out a little bit  more should we move it to a different location   without being able to get that data using  sql i would have had no idea what to do your data contains all sorts of hidden insights   and with sql you can unlock  some of that hidden value in this video were going to focus on  how you can retrieve data from databases this is really perfect if say   youre a business analyst or a product  manager or maybe youre a researcher were not going to focus on how  you can create a new database   or how you could add new tables or  even how you can add or remove data if thats something you want to see in a future  video let me know down below in the comments what is sql well sql stands for  structured query language or sql its a language that you can  use to interact with databases you can retrieve data you can filter   you can sort you can add update  and remove data from a database the great thing is that anyone can  learn how to write sql queries you definitely do not need a  degree in computer science   and once you learn sql this will be another  superpower that you have in your toolbox at work so what is even a database a database is a collection of tables and those  tables have relationships and dont worry if   that sounds confusing were going to make  it real coming up shortly with an example if you look at any major website  whether its facebook twitter   linkedin all of those are powered by databases even here at the kevin cookie  company we use databases we track our customers our orders  and all of our product information what you thought we just wrote  all that down by hand on paper we recently transitioned over to databases to interface with a database we are going  to use something called an rdbm a what well that stands for relational  database management system i know they get kind of crazy with their acronyms you have a lot of very popular options and youve  probably even heard of some of these before you have oracle postgres sql microsoft sql  server mysql is just a few of the many options in this video we are going to use microsoft sql  server and the reason why is well first off   im a microsoft boy so im a little  biased but also it happens to be one   of the most popular options and when youre  learning the tools are completely free also once you learn one rdbms  theres that acronym again   youll be able to easily pick up any other system youll know the essentials of sql and there  may be some slight syntax differences or the   way the code is written but youll  understand all of the core concepts to get started were going to use microsoft  sql server and you can download that at the   following website youll find the link up  above and ive also included a link down   below in the description on this website  if you scroll down just a little bit   we have two different editions that we can choose  from and for this tutorial either one will work you can get either the developer  edition or the express edition but what is the difference and why  should you choose one versus the other the express version can be used for business  purposes but its a little bit more limited you dont have the full functionality   your database can only be up to 10 gigabytes  in size and it only supports 4 cores but once again for this  tutorial thats totally fine then you also have the developer version and  this cannot be used for business purposes it has full functionality but once again it can  only be used for development and testing purposes for this tutorial im going to  download the developer edition   but once again you can choose either one when you kick off the install youll  see a prompt that looks like this   and you have three different options you can proceed with basic and  this is what im going to do   but you could also choose custom where you  get to choose what components are installed you also have the option that says download media this is if say you want to install sql server  on multiple machines you can simply download   the installation media and then you can use it  elsewhere so you dont have to redownload lets continue by clicking on basic once you finish installing you wont  see any icons on your taskbar or on your   desktop and you might be wondering well  what did i install and is it even running lets click on the start menu and then click  on all apps and here lets navigate down to m   and right here i see that ive now  installed microsoft sql server 2019 when i drop this down we  have a few different apps lets click on the one  titled configuration manager this opens up the configuration manager and were  not going to make any changes here but i want to   show you that the service is running here we  can see that sql server is currently running   right up here we can stop it if we want to we could also restart it you can  pause it and if it were stopped   here we could start the service again right over here we can also see the start  mode and its currently set to automatic this means that any time you boot your pc the  sql server instance will automatically start up but once again we simply open this just to  confirm that sql server is currently running we can now close this out now that we have our  server running and our database engine in place   we also need a graphical front end that will  allow us to write queries against our database   and for that we are going to use a tool called   sql server management studio or  whats also referred to as ssms head to the following website ive included a link up above and youll  also find it down below in the description scroll down just a little bit and  here youll see a link that says   free download for sql server management studio click on that and then run  through the install process once you finish installing  sql server management studio   launch the app and you should see  an interface that looks like this a prompt should also appear  asking you to connect to a server the first item we installed  provided us with the server   and now this second item that we installed  will allow us to connect to that server   right here for the server name it should be  your pc’s name but if you dont see anything   prepopulated in here you can click on this  drop down and then click on browse for more expand the database engine category  and then you can click on your pc name once you do that it should  fill it in in this field for the authentication ill leave  it set to windows authentication   and once all of that is  set lets click on connect this drops us into the main  sql server management view   and over on the lefthand side we have  something called the object explorer right up here we can click on this plug icon and  this allows us to connect to additional servers so maybe at work you want to connect to multiple  servers at the same time you can do that   and once you connect to additional servers  youll simply see more in this list if you no longer need access  to one of these servers   you can simply click on this icon to disconnect right up here at the top i can see the instance  or the server that im currently connected to   and im currently connected to my own  computer because i set up sql server there underneath that well see a tree view of all  of these different folders you have databases   you have security and the list goes on and on in this tutorial were only going  to use the one titled databases when i click on the plus icon youll  see that there are no databases yet and   we need to create one and to do  that lets right click on here now we could start a new database from  scratch but we are going to restore a   database for the kevin cookie company so  we can use some existing data to analyze lets click on this if youd  like to follow along today   ive included a sample database up above and  youll also find it down below in the description probably the best way to learn is to follow  along but you can also just watch this video once you download the file lets  click on this option that says device then click on the ellipsis and here click on add next navigate to where  you saved your backup file here ill click on the backup file  and then click on ok once again   lets click on ok and here too ill click on ok here i see that the database kcc  restored successfully thats great lets click on ok over on the lefthand  side youll now see a new cylinder icon this is the database icon and the database is  called the kcc for the kevin cookie company ill click on this plus icon and this expands it within here we have database  diagrams tables and the list goes on the one that were most interested  in today is the one titled tables here i can click on the plus icon and we see  that this database has four different tables we have one titled customers order  product orders and also product you might be wondering why do we break  a database up into separate tables   can’t we just have everything in one big  file and heres what that would look like   and if you look closely you might  start to notice some issues here here we repeat the customer name again and again  and all of their address and contact information we also repeat the cookie name again and again instead of repeating this information again and  again we can break it up into separate tables so here for example imagine i have an orders  table and for this order its for customer 5 so instead of putting all of that customer’s  information here instead i can say oh customer 5   and then i can jump to another table  with all of the details on customer 5   and heres all of their contact information this is the core idea behind databases we can use various ids to connect together  these tables and thats why its referred to   as a relational database because we have  relations between these different tables when youre designing a database you want  your data to repeat as few times as possible the benefit of that is that it takes up less  space and its also easier to get back to data   and this process is referred to as normalization so here ive now separated all of the data out  into separate tables so theres a customers table   an orders table a table with all of the  orders and the products in those orders   and then one table with all of the products  and if you look at these four tables this takes   up a lot less space than this one massive flat  file back within sql server management studio   here youll see our four different tables  and each table name starts with dbo this beginning portion is the default schema name   and the schema is simply a way that you  can bucket together different tables you can also use it to provide access to certain  tables so certain users might have access to   one schema and other users might have access to a  different schema for this tutorial were simply   going to stick with the default of dbo lets  now look at whats contained within one of these   tables here i can right click on the customers  table and i can select the top 1000 rows here when i select that here youll see the sql  query that gives me the results or all of the   data within the table and in a moment well come  back to how we can write these queries on our own but first lets look down below at the results here this looks similar to what you  would find in say a spreadsheet you have a whole bunch of columns and  you also have a number of different rows these columns here within a database  these are referred to as fields and then   the rows are referred to as records within  the table you might also be wondering   why do we have separate columns for all  of this information like the address   the city the state and the reason why is if  we just put it all together in one big column   it would be harder to get back and to query  against that data so if we break it down to   the most granular level that makes it easier  to access that data again in the future now that weve looked into one  of our tables lets take a look   into another one of our tables and look at  how well make a connection between them ill go over to orders right click  and here too just like we did before   lets select the top 1000 rows here once again  we see the sql query that gives us these results   so here we have all of our order  information so we have orders 1 through 50   and here in this table youll see  that it references a customer id so here this order number 1  references customer id number 5 if i go back to the customer table  here i can see who customer 5 is   so we can relate these  tables using the customer id the customer id in this table also happens  to be whats called the primary key   and this is an important concept for databases the primary key is the minimum number of columns  that you need to uniquely identify a record so lets just work through this could you use the customer  name as the primary key well here you have tres delicious so if i say hey trey delicious in this case   you cannot uniquely identify the row or the  record because here we have trey delicious twice we also have the phone number show up twice you could have an address repeat you could have a city repeat so you cant use any of this information  to uniquely identify one of these records instead we have the customer  id and with this customer id   you know exactly which row were talking about and  thats why its referred to as the primary key in the orders table we have two different id but  four orders the order id is the unique identifier   and thats why its the primary key and the  reason why is here if we look at customer id   you see that customers can have multiple  orders and so here we see the customer id   show up multiple times so once again  the primary key is the minimum number   of columns to uniquely identify a row and so  in this case the order id is the primary key now that weve touched on primary keys and  also how we relate these different tables   we can actually visualize how  all these tables are connected go up to database diagrams  and expand this category if you want to create your own database  diagram you can right click here   and then you can create a new database diagram  but it should already be part of the database simply click on this option   this opens up our database diagram and here  we can see the four different tables that are   part of our database and here you can also  see all the different fields that are within   each one of these tables and right here  we can see which one is the primary key you can see this small yellow key icon so here we can see what the primary key is  in each table in the order product table   there is no individual primary  key to uniquely identify an item   its a combination of the  order id and the cookie id so here just to walk through this   for every single customer you  can have many different orders so here we have the infinity symbol indicating  that its a onetomany relationship   and for each order you can have many products  part of the order so for one order you can   have many different products and then for all of  the different products we have our product table so for one product it can show  up in multiple different orders setting up a database diagram is a nice way to get  a visual of how a database is laid out and also   when youre querying against a database  it helps you understand how they relate you can also visualize how a table is organized  over on the lefthand side in the object explorer here for example i have my orders table i can click on this plus icon and here  i can click on the plus next to columns   and here i can see all of the different  columns that are contained within this table   and here i see a visual indication  of what the primary key is here the primary key is the order id i can also review all of the different data types here ill right click on orders and here i  can select design within the design view   here i can see all of the different column names  and i could also see the associated data type now this will be important especially  as we start querying for example   for customer id the data type is set  to integer so it has to be a number so you wouldnt want to say compare  it or filter for a customer id with a   letter because that isnt part of  the integer data type with all of   this foundational information now out of the  way youre in a good spot to start querying to write our first query lets go up to  the top bar and then click on new query you can also press the shortcut key control   n this opens up a new window where we   can now write our query but before we  do that lets just check a few things right up here youll see a drop down  and it currently says the kcc database when we write our query in this window  it’s going to execute against this database if you have multiple databases here  you can choose which database you want   the query to execute against also  to help us with writing this query   were going to write a query against the  customers table to help us with this   lets click on the plus icon and this way  we can see all the different column names for the first query i simply want to  see a list of all of our customers when i look over here at the customers table   here i see that one of the  columns is called customer name i just want to see all of the  different customer names in this table to start the query lets first type in select select allows us to retrieve data from a table  and once again i want to get the customer name   so ill type in select and then customer name here it matches the column header name exactly   and next i need to specify where i  want to get the customer name from so next ill enter in from  and i want to get it from the   customers table so im going to type  in dbocustomers and this is our query thats all we have to enter in now that weve  finished entering the query up here we can   click on execute and thatll run the query  or alternatively as i hover over that button   you might have noticed that the shortcut key is  f5 here ill press f5 and that runs the query   here we can see all the different customer  names contained within the customers table   and congratulations you just wrote your  first query see that wasnt that hard now lets say i want to get more  information than just the customer name lets say i want to see all of the notes  associated with each one of these customers right now im just selecting one of these  columns but if i want to include another column   i simply enter a comma and then i can  type in the other column name that i want i also want to get the notes so ill type  in comma and notes and the rest of the query   is exactly the same and now once again i want  to run this so im going to press the f5 key   and here now i can see all of the different  customer names along with the associated notes as you start working with  more and more sql queries   youll likely find yourself jumping  in between different databases here for instance ill move from the kevin  cookie company database to the master database now when i try to execute this query i  get an error message because in the master   database theres no table called  dbocustomers so my query fails if you want to prevent this from happening   instead of just specifying the table  that you want to get this data from   you can also specify the database now  remember that this database is called kcc so before the table name i  can type in kccdbocustomers so now not only does it specify the  table name but also the database name now when i try to execute this query i  get the same results that i got before   even though right up here the master  database is currently the active one within the results youll see that the  customer name column doesnt have a space i can customize or define what this  column header should look like right up above in the select statement   i select the customer name and right after  that i can type in as and then i can insert   a bracket and within here i can type in  exactly how i want the name to appear so i want to type in customer name with a space now when i run this query youll  notice that the column header now   has a space now once again i can  type in any value into this alias next im going to remove notes  from the query and once again   when i run this i see a list of  all of our different customers one thing you might notice is within this  customer list tres delicious shows up twice thats because the customer has  two different headquarters and   weve included them in our  customer table two times   but lets say i just want a list of all of the  distinct or unique customers that we work with before the customer name in the select  statement here i can type in distinct   and then i’ll enter a space and when  i run this query again here i only see   tres delicious once because its only  showing me all of the distinct values so far weve been looking at how we can get  specific columns back but what if i want to   get all of the columns back in this table do  i have to enter in all of the different column   headers within the select statement of course  not we can have the computer do this for us here im going to remove  this portion of the query   and here i can enter the asterisk symbol  or the wild card and now when i press f5   here this returns all of the different columns  and all of the different records within this   table now lets say i dont want to see  everything but i just want a sample of the data i can type in top here ill type in the top  and maybe i just want the top three records   and here once again i could run this and here  i just see the top three records as weve been   running these queries theres a yellow  bar down below that tells us whether or   not the query executed successfully  also over on the righthand side   youll see some helpful information  telling you how many rows you got back so here we wanted the top three and i  can confirm that we got three rows back especially when you start running  some more complex queries   here youll see the runtime to see how  long your query has been running for now that we know how to get some basic data  back using queries how can you filter the data so lets say for example   i want to get a list back of all of our  customers in the state of washington here ill remove the top  three portion of our query so right now when i run this we get  all the customer information back at the very end of this query i can  enter where and once again i want to   find all customers in the state of washington so here ill type in state equals washington  and thats all i need to enter in now when   i press f5 we only get back this one  customer thats based out of seattle wa to make this query easier to read here i  can insert spacing i can also press enter   and i can add newlines and when i run  this query i get the exact same result so as youre pulling together your  queries feel free to insert spaces   or character returns to make it  easier for you to follow along another thing that will help you follow along  with your code and also help other people with   your code is entering comments here for example  i can enter two dashes and i can write a comment here i typed in this returns all  customers in washington state alternatively instead of entering the dash dash  i could also enter a slash in the asterisks and at   the end i can enter the asterisks and a slash  again and this will also create a comment so you have those two different  options in this example   im looking at just customers  located in washington state   but instead of saying equal to washington state  i could also say not equal to washington state so show me all the customers who are  not located here when i press f5 to run   here i see the five other customers who  are not based out of washington state   and here i could also enter the exclamation mark  in the equal sign that also means not equal to   and when i press f5 once again  i get this same exact result in my where clause i can  also use an or statement so lets say i want a list back of all of  my customers who are in washington state   or in new york state here i can enter  in new york and when i run my query   here i see my two different customers  one’s in washington and one’s in new york now lets say i also want to  see customers who are in utah now once again i could type in or  state equals and lets now look for utah i’ll press f5 and here i see that i have three  customers and each one is in one of these states   but especially as i start expanding  this it becomes somewhat unwieldy instead i can use in here ill change  this to in and ill insert a parenthesis   and let me leave washington  but ill remove or and state   ill insert a comma and then ill remove  this portion and then ill leave in utah   now ill close the parentheses and when  i press f5 i get the exact same result   but the code is a little bit cleaner and a little  bit more efficient currently this query shows me   all of my customers who are in either washington  or new york or in utah but what if i want to see   all of my customers who are not in these states  right here in front of in i can type in not in   and here ill press f5 and this shows me all  of those customers who are not in those states ive now gone back to the base query where  we get all the records back in this table now lets say i want to filter down to the   customer tres delicious whos  located in the united states now once again i can enter where and here ill  type in customer name equals tres delicious when i run this query i get two  customers back but once again   i only want to see the one in the united states  so unlike the previous query where we used or   here we can type in and then i’ll  type in country equals united states now when i run the query i  just get this result back so we can also use and to filter our data we can also combine ands together with ors right now were looking for the  customer name and this country let me enter down to a new line  here i could also type in or and   maybe i say country equals lets say france when i press f5 here were  looking for this customer and   either the united states or france  and i get these two results back especially when you start  adding a lot of ands and ors   it might be confusing as to  how the query is going to run which part does it execute first which part does it execute second to make it extremely clear  you can use parentheses so i want the customer to be tres delicious   and i want the country to be either the united  states or france and it works as is right now   but to make it clear i can insert  a parentheses here and here so this way i know that it evaluates  this customer name and this portion here   when i press f5 it gives me this same result  but its a little bit easier and cleaner to read so far in our where clause weve been  looking for a specific customer name   but what if i just want to see  all customers who say begin with   the letter a instead of entering the  equal sign here i can type in like   and here ill remove the name and let me type  in an a and next ill type in the percent sign so i want it to begin with an a but there  can be any number of characters after the a when i press f5 to run here i see that  there are two customers that begin with an a now instead of saying like i could  also say not like and when i run this   i see all the customers who do  not begin with the letter a next lets shift our focus  over to the orders table   and i want to show you how you can also  filter based on numbers and numerical values   here ill right click on orders and  lets select the top 1000 rows here we see the query that returns the top  1000 rows now this table only has 50 rows   so we see all the different data  contained within this table now lets say that i want to see all of the  orders that exceed 1000 here once again   i can type in where and i can then type in  order total is greater than 1000 now when   i run the query i only see all the different  orders where the order total exceeds 1000 along with that i could also  say greater than or equal to here i could also enter in less than or equal to when i run this again here i see all  of the orders that are less than 1000   and i could also use something called between here ill type in between and lets say between  1000 and 2000 here once again i’ll press f5   to run the query and now we only see orders  with an order total between 1000 and 2000 now one thing to note this will be  inclusive of both 1000 and 2000 so far   weve been looking at how you can  retrieve data from just one table we pulled some data from the customers table  and we pulled some data from the orders table but what if you want to pull data from lets  say two tables or even three different tables   here i can see all of our order data  so we have quite a few orders here but here it simply refers to the customer  id and that doesnt really do me much good if lets say theres an order and i want to  follow up with the customer on that order   i need the customer name and  i also need their phone number so itd be really nice if i could also  see those two columns alongside all of   the order information to join these two  tables together lets start from scratch im going to remove this query  altogether and once again i want   to pull some information from the orders table i want the order id and the  order date and the order total so here ill type in select and  then ill type in the order id   the order date and the order total and once  again this is coming from the orders table   so ill type in from dboorders and when i run  this heres all of the data that i want back to make things a little bit cleaner   im going to insert enters here just  so its a little bit easier to read here now this is exactly the same and when  i run it once again i get the same result now i mentioned earlier that i also want to get  the customer name back and the phone number so here in the select statement let  me also type in the customer name   and right here im also going  to type in phone number now when i execute this query  i get an error message back   and the reason why is in the orders table theres  no customer name and theres no phone number first i need to connect the orders  table to the customers table   and we can do that by using a join i want to join my orders  table with my customers table so here ill type in join and  then ill type in dbocustomers so right now ive joined these tables but i  need to specify how im going to join these   and here when i look at the customer  table theres a customer id and here   when we look at the order table theres also a  customer id here so i can join on that column to join on that column   i simply type in on and here im going  to type in on dboorderscustomerid so here once again im referring  to this value right here   and i want to join it on the  customer id in dbocustomers so here ill type in dbocustomerscustomerid now when i run this query here i  get back all of the different orders   along with the customer name and the phone number thats exactly what i want to clean things up i can also use an alias here so here from dboorders instead of  referring to dboorders i can simply   refer to o and the same down here where i say  dbocustomers here maybe i use an alias of c the benefit of that is here i can remove  the reference to dboorders and instead i   can insert an o and right down here where  i say dbocustomers here i can insert a c when i press f5 to run i  get the exact same result   but my code is a little bit easier to read now when we ran this query we did something called  an inner join and in fact i can go back to this   join statement and i can type in inner join and  here when i run it we get the exact same result in fact when you just enter join  that by default runs an inner join so what is an inner join well an inner join  gives me all the customers back who have an order   and it also gives me back all orders that have a  customer associated with it so lets say there   were lets say a customer that doesnt have  any orders that would not show up in this list basically there has to be  overlap between orders and   customers for the result to show up down below now lets say i have a customer  who doesnt have any orders   but i still want to see the  customer in the results down below let me bring this line up just to make  it a little bit easier to visualize here ill remove the portion that says inner  join and here ill type in right outer join   and here when i run this lets  go to the very bottom of the list   and here now we see that theres  one customer without any order so what does a right outer join do well   here its saying the right item  here which is dbocustomers i want to see all customers irrespective  of whether they have an order so here i get all customers back  even if that customer has no order so here for the order value  down below it says null now lets say i want to see all orders  whether or not theres a customer well orders is on the left side over here  so instead of saying right outer join i want to do a left outer join instead and now  when i run this query it gives me the same   result as the inner join but the only reason why  is every order happens to also have a customer but if there were say an order without  a customer the left outer join would have   given me orders and then for the customer name and  phone number it would have given me null values in my query lets say i also  want to get back the customer id so right up here in the  select portion of the query   ill insert a comma and here  lets type in customer id when i run the query though  i get an error message   and it tells me that its  an ambiguous column name   and the reason why is here in the customer table  i have a customer id and also down below in the   orders table theres also a customer id so it  doesnt know which customer id it should use well thats simple to solve i could simply  tell it which table i want to use and lets   just pull it from the customers table here  the alias for that is c so i can enter a c dot   and then customer id and now when i run it once  again it works and here i have the customer id now that i have these results back lets  say i want to order these by the order total right now theyre all just  kind of randomly mixed in i have large values smaller  values and large value again at the very bottom of this query   i can add order by and here i want  to order by the order total column here i can type in order total  and then run my query again   and here you see that its in ascending order so here i start with 39 and  then we finish off at 3518 instead i could also look  at it in descending order here ill type in descending execute   and here you see that we start large and  then it goes down to the smallest value sql also gives you access to a  number of different functions   so you could do things like get the current  date or you could sum up values or you can   get a count those are just a few examples  of the functions that you have access to   here in this example i want to see  all of the orders from the past month so here im selecting all orders from the orders  table and im looking at where the order date is   greater than or equal to a date thats one month  in the past but lets say in a week from now   i want to run this same query again where  i look at all of the orders from the past well this date would no longer  be just the past month so i would   have to update this date instead i  could replace this with a function here ill remove this date and  lets use the date add function here i need to specify what the interval is and  i want to look at the last month so ill type   in month and i want to look at the last month so  for the increment here ill type in a negative 1   and for the expression thats the  current time and for this i can   use yet another function ill type in get  date and then ill close the parentheses   and here i can run it and i get the  exact same results that i got before except now when i run this again next week itll  also show me all the orders from the past month   but i no longer have to go in  and update this date manually i can also use aggregate functions  so instead of selecting all orders   what if i just want to see a count  of all orders from the last month here i could type in count and lets  count all of the different rows now when i run this i see that there  were 16 orders in the last month instead of counting i can also sum up all the  different order totals from the last month here ill type in order total and run again  and here i can see that in the last month   we had over 17000 of revenue not too bad for a   cookie company now lets say i want to  see the order total by the customer id down at the end of this query i can  type in something called group by   and here ill type in the customer id now when i run this i see  the sum of the order total   by the various customer ids in the last month weve written some fairly complex queries but  next i want to show you how you can write just   about any query with ease and were going  to use something called the query designer   here in a new query simply press your right mouse  button and then select design query in editor this opens up the query designer and first we   can choose the tables that we  would like to query against now i want to pull data from the  customers table and the orders table so here ill press control and select both  of these tables and then click on add next i’ll click on close  within the query designer   here i can see all of my different tables and  all of the different columns within those tables   and here i could also see how  these two tables are related so a really nice way to visualize but now look  at how easy it makes it to pull together a query lets say i want to get a customer  name and all of their different orders here i simply click on customer name and  here i can click on lets say the order id   maybe i want the date and also the order total here i see all those different fields or columns  populate in this grid down below and here you see   that it automatically writes the sql statement  for me and it joins these two tables together when i click on ok here i can now  run the query and here i get all   the customer names with the order id  the order date and the order total that was really easy to pull together to go back to the query editor  here i can highlight my query and   then i can right click and once again  ill click on design query in editor back within the query editor  here i could also add an alias   so we see that customer name doesnt have a space here i can type in customer name and that  automatically adds an alias down below i can also add filters lets say i  just want to see all orders from the   last month over here in filter i could say  greater than or equal to 2182022 and when i   enter that in it automatically adds where and  now itll just provide me with those orders if i dont want to show the output from  order date here i can check this box   and it leaves the where condition but  it removes it from the select statement here i can also select the  sort type the sort order   and if i right click up here  i can even add the group by so lets say i want to pull a sum  of the order total by customer name i could do that as well   here for instance ill change order total  to sum and let me remove the order id so here i want to see all  of the customer names and   the sum of their order total in the past month ill click on ok and when you look at this  this is fairly complex query but here when   i execute it it just runs easily all right  well thats how you can get started using sql   and hopefully you agree with me now that sql  is not really that hard to get started with   and its really tremendous what types of  insights you can extract from your data let me know in the comments what other  topics related to sql would you like to   see on this channel to watch more videos  like this one please consider subscribing   ill see you in the next video 