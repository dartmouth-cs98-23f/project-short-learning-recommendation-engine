do you even start its hard to find the right   advice without suffering from information overload thats why ive created this beginners roadmap   it lays out all the basics you need to learn  web development were going to go through each   step so by the end of this guide youll have an  understanding of the basics of web development and   what skills you need to learn i recommend doing  steps 1 2  3 in order then depending on whether   you want to focus on more frontend or backend  you can do steps 4a or 4b i personally think   its a good idea for frontend web developers to  learn at least a little bit of backend and vice   versa knowing the basics of both will help  you know if you like frontend or backend   web development better sound good lets dig deeper  into the roadmap before you get into actual coding   youll need to understand some general concepts  as you start your journey into web development how   websites work the difference between frontend and  backend and using a code editor all websites at   the most basic are just a bunch of files that are  stored on a computer called a server this server   is connected to the internet you can then load  that website through a browser like chrome firefox   or safari on your computer or on your phone  your browser is also called the client in this   situation so every time youre on the internet  you the client are loading data from the server   as well as submitting data back to the server this  back and forth between the client and the server   is the basis of the internet web developer roles  typically fall into three categories front end   back end and full stack the terms front end back  end and full stack web developer describe what   part of the clientserver relationship that youre  working with fernand means that youre dealing   mainly with the clientside its called the front  end because its what you can see in the browser   conversely the back end is the part of the website  that you cant really see but it handles a lot of   the logic and functionality that is necessary for  everything to work one way you can think about   this is that frontend web development is like  the frontofhouse part of a restaurant its a   section where customers come to see and experience  the restaurant the interior decor seating and of   course eating the food on the other hand backend  web development is like the back of house part of   the restaurant its where deliveries and inventory  are managed and the process to create the food all   happens theres a lot of things behind the scenes  that the customers wont see they will experience   and hopefully enjoy the end product a delicious  meal fun illustrations aside both frontend and   backend web development serve different but very  important functions when you build a website the   most essential tool that youll use is your code  editor or ide integrated development environment   this tool allows you to write the markup and code  that will make up the website there are quite a   few good options out there but currently the most  popular code editor is vs code vs code is a more   lightweight version of visual studio microsofts  main ide its fast free easy to use and you can   customize it with themes and extensions other  code editors are sublime text adam and vim if   youre just getting started though id recommend  checking out vs code which you can download from   their website now that weve covered some of the  broader concepts of what web development is lets   get into more of the details starting with the  front end the front end of a website is made up   of three types of files html css and javascript  these files are what is loaded in the browser on   a clientside html or hypertext markup language  is the foundation of all websites its the main   file type that is loaded in your browser when you  look at a web site the html file contains all the   content on the page and it uses tags to denote  different types of content for example you can use   tags to create headline titles paragraphs bulleted  lists images and so on html tags by themselves do   have some styles attached but theyre pretty basic  kind of like what you would see in a word document   css or cascading style sheets lets you style that  html content so it looks nice and fancy you can   add colors custom fonts and lay out the elements  of your website however you want them to look   you can even create animations and shapes with  css theres a lot of depth to css and sometimes   people tend to gloss over it so they can move  on to things like javascript however its really   important to be able to convert a design into  a frontend website layout using css javascript   is a programming language that was designed to  run in the browser using javascript you can make   your website respond to different inputs from the  user or other sources for example you can build a   back to top button that when the user clicks it  theyll scroll back up to the top of the page   as we mentioned html css and javascript are the  basic building blocks of frontend web development   in addition to them there are a few other tools  that youll want to learn at this point package   managers are online collections of software much  of it open source each piece of software called   a package is available for you to install and  use in your own projects you can think about   them like plugins instead of writing everything  from scratch you can use helpful utilities that   other people have written already for instance  you can simply use a slider plugin instead of   having to code it all yourself which could take  days to figure out why reinvent the wheel if you   dont have to the most popular package manager is  called npm or node package manager you can also   use another manager called yarn both are good  options to know and use although its probably   best to start out with npm in addition to package  manager is youll want to become familiar with   build tools module bundlers and build tools are  another essential part of the frontend workflow   on a basic level these tools run tasks and process  files you can use them to compile your sass files   to css transpile your es6 javascript files down  the es5 for better browser support run a local   web server and many other helpful tasks saving  you a ton of hassle if you were to try to do all   these essential steps by yourself three tools  that youll continue to come across a lot are   gulp web pack and parcel personally i like using  gulp for my own frontend workflows where i just   want to compile my sass and javascript files and  not do too much else the last tool youll need   to learn about in this stage is version control  version control also called source control is   a system that keeps track of every code change  that you make in your project files you can even   revert to a previous chain if you make a mistake  its almost like having infinite save points for   your projects and let me tell you it can be a huge  lifesaver the most popular version control system   is an open source system called git using git you  can store all your files and then change history   in collections called repositories you may also  have heard of github which is an online hosting   company owned by microsoft where you can store  all your git repositories at this point youve   learned the basics of friend development and  have a choice to either delve into additional   friends skills or learn about basic backend web  development with additional frontend there are   some more intermediate skills that you will  want to learn i recommend that you look at the   following sas responsive design and a javascript  framework sas is an extension of css that makes   writing styles more intuitive and modular its  a really powerful tool with sass you can split   up your styles into multiple files for better  organization create variables to store colors and   fonts and use mixins and placeholders to easily  reuse styles even if you utilize just some of   the basic features like nesting youll be able to  write your styles quicker and with less headache   responsive design ensures that your sales will  look good on all devices desktops tablets and   mobile phones the core practices of responsive  design include using flexible sizing for elements   as well as utilizing media queries to target  styles for specific devices and widths for example   instead of setting your contents to be a static  400 pixels wide you can use a media query and set   the content to be 50 width on desktop and 100  on mobile building a website with responsive css   is a must these days especially as mobile traffic  is outpacing desktop traffic in many cases once   you have the basics of vanilla javascript down you  may want to learn one of the javascript frameworks   especially if you want to be a fullstack  javascript developer these frameworks come with   prebuilt structures and components that allow  you to build apps quicker than if you started   from scratch currently you have three main choices  react angular and view react which is technically   a library was created by facebook and is the most  popular framework right now angular was the first   big framework and it was created by google its  still very popular even though its been surpassed   by react recently and views a newer framework  created by evan you a former angular developer   well it is smaller news and react and angular is  growing quickly and is also considered easy and   fun to use you might be wondering now okay well  which framework is the best the truth is they are   all good and web development theres almost never  a single choice that is 100 the best choice for   every person in every situation your choice will  most likely be determined by your job or it simply   by which one you enjoy using the most if your end  goal is to land a job at a company try researching   which framework seems to be the most common in  potential job listings dont worry too much about   which framework to choose its more important that  you learn and understand the concepts behind them   and once you learn one framework itll be much  easier to learn other ones after that lets move   on now to our last section backend web development  the backend or server side of web development is   made up of three main components the server  a serverside programming language and the   database as we mentioned at the very beginning  the server is the computer where all website   files the database and other components are stored  traditional servers run on operating systems such   as linux or windows theyre considered centralized  because everything the website files backend code   and data are stored all together on the server  nowadays there are also serverless architectures   which is a more decentralized type of setup this  type of application splits up those components and   leverages thirdparty vendors to handle each  of them despite the name though you still do   need some kind of webserver to at least store  your website files some examples of service   providers are aws amazon web services or nullify  cir furless set ups are popular because they are   fast cheap and you dont need to worry about  server maintenance theyre great for simple   static websites that dont require a traditional  serverside language however for very complex   applications the traditional server setup might  be a better option on the server you need to use   a programming language to write the functions  and logic for your application the server then   compiles your code and conveys the result back  to the client popular programming languages for   the web include php python ruby csharp and java  there is also a form of serverside javascript   nodejs which is a runtime environment that  can run javascript code on the server finally   youll need to learn about databases databases as  a name implies are where you store information on   your server for your website most databases use a  language called sql pronounced sequel which stands   for structured query language in the database  data is stored in tables sort of like complex   excel documents then you can write queries in sql  in order to create read update and delete data the   database is run on the server meeting servers  like microsoft sequel server on windows servers   and my sequel for linux there are also no sequel  databases which store the data in json files as   opposed to the traditional tables one type of no  sequel database is mongodb which is often used   with react angular and view applications some  examples of how data is utilized on websites   are if you have a contact form on your website  you could build the form so that every time   someone submits the form their data is saved on  to your database you can also store user logins   on the database and write logic in the serverside  language to handle checking and authenticating the   logins and thats how i would recommend you start  your journey into web development ive compiled   a list of resources to help you get started  learning at any of these stages linked below 