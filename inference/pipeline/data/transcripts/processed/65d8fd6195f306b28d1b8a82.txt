database in a system design interview in these interviews you will often have to choose what database to use and these databases are split into sql and nosql types and they each have their own strengths and weaknesses and should be chosen appropriately based on the use case first lets define both sql and nosql databases sql stands for structured query language sql databases are table based while nosql are document key value graph or wide column stores sql databases are vertically scalable while nosql databases are horizontally scalable lets start with the strengths of sql databases first sql databases are relational databases which means that they allow easy querying on relationships between data among multiple tables table relationships are really important for effectively organizing and structuring a lot of different data second the data is well structured and the room for potential error is therefore reduced this is because sql schemas require the data model and format of the data to be known before storing anything third sql databases are acid compliant this means that transactions are atomic consistent isolated and durable sql transactions are groups of statements that are executed atomically this means that they are either all executed or not executed at all if any statement in the group fails with all these strengths sql sounds great so what are its weaknesses well first structured data might mean fewer errors but it also means that columns and tables have to be created ahead of time so sql databases take more time to set up compared to nosql databases theyre also not effective for storing and querying unstructured data where the format is unknown second sql databases are difficult to scale horizontally because of their relational nature for read heavy systems its straightforward to provision multiple readonly replicas but for write heavy systems usually the only option is to vertically scale the database up which is generally more expensive than provisioning additional servers now lets talk about the benefits of nosql databases first nosql databases are more flexible and simpler to set up because they do not support table relationships and data is usually stored in documents or as key value pairs theyre a better choice for storing unstructured data second because theyre better at handling unstructured data they can also shard this data across different data stores allowing for distributed databases this makes horizontal scaling much easier and very large amounts of data can be stored without having to purchase a single expensive server but nosql databases also have their weaknesses first nosql databases are typically designed for distributed use cases and write heavy systems can be supported by having multiple right shards for the same data partition this is called peertopeer replication however the tradeoff is a loss of strong consistency after a right to a shard in a distributed nosql cluster theres a small delay before that update can be propagated to other replicas during this time reading from a replica can result in accessing stale data this weakness of the data eventually being up to date is called eventual consistency eventual consistency isnt exactly a fault of just nosql databases but of distributed databases in general a single shard nosql database can be strongly consistent but to fully take advantage of the scalability benefits of nosql the database should really be set up as a distributed cluster and thats it for todays video on databases to learn more check out the exponent article linked in the description below good luck with your interviews and thanks for watching foreign foreign foreign foreign 