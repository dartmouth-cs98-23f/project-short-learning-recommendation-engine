course computer science as we’ve touched on many times in this series computers are incredible at storing organizing fetching and processing huge volumes of data that’s perfect for things like ecommerce websites with millions of items for sale and for storing billions of health records for quick access by doctors but what if we want to use computers not just to fetch and display data but to actually make decisions about data this is the essence of machine learning – algorithms that give computers the ability to learn from data and then make predictions and decisions computer programs with this ability are extremely useful in answering questions like is an email spam does a person’s heart have arrhythmia what video should youtube recommend after this one while useful we probably wouldn’t describe these programs as “intelligent” in the same way we think of human intelligence so even though the terms are often interchanged most computer scientists would say that machine learning is a set of techniques that sits inside the even more ambitious goal of artificial intelligence or ai for short intro machine learning and ai algorithms tend to be pretty sophisticated so rather than wading into the mechanics of how they work were going to focus on what the algorithms do conceptually let’s start with a simple example deciding if a moth is a luna moth or an emperor moth this decision process is called classification and an algorithm that does it is called a classifier although there are techniques that can use raw data for training – like photos and sounds – many algorithms reduce the complexity of real world objects and phenomena into what are called features features are values that usefully characterize the things we wish to classify for our moth example we’re going to use two features “wingspan” and “mass” in order to train our machine learning classifier to make good predictions we’re going to need training data to get that we’d send an entomologist out into a forest to collect data for both luna and emperor moths these experts can recognize different moths so they not only record the feature values but also label that data with the actual moth species this is called labeled data because we only have two features it’s easy to visualize this data in a scatterplot here i’ve plotted data for 100 emperor moths in red and 100 luna moths in blue we can see that the species make two groupings but… there’s some overlap in the middle… so it’s not entirely obvious how to best separate the two that’s what machine learning algorithms do – find optimal separations i’m just going to eyeball it and say anything less than 45 millimeters in wingspan is likely to be an emperor moth we can add another division that says additionally mass must be less than 75 in order for our guess to be emperor moth these lines that chop up the decision space are called decision boundaries if we look closely at our data we can see that 86 emperor moths would correctly end up inside the emperor decision region but 14 would end up incorrectly in luna moth territory on the other hand 82 luna moths would be correct with 18 falling onto the wrong side a table like this showing where a classifier gets things right and wrong is called a confusion matrix which probably should have also been the title of the last two movies in the matrix trilogy notice that there’s no way for us to draw lines that give us 100 accuracy if we lower our wingspan decision boundary we misclassify more emperor moths as lunas if we raise it we misclassify more luna moths the job of machine learning algorithms at a high level is to maximize correct classifications while minimizing errors on our training data we get 168 moths correct and 32 moths wrong for an average classification accuracy of 84 now using these decision boundaries if we go out into the forest and encounter an unknown moth we can measure its features and plot it onto our decision space this is unlabeled data our decision boundaries offer a guess as to what species the moth is in this case we’d predict it’s a luna moth this simple approach of dividing the decision space up into boxes can be represented by what’s called a decision tree which would look like this pictorially or could be written in code using ifstatements like this a machine learning algorithm that produces decision trees needs to choose what features to divide on…and then for each of those features what values to use for the division decision trees are just one basic example of a machine learning technique there are hundreds of algorithms in computer science literature today and more are being published all the time a few algorithms even use many decision trees working together to make a prediction computer scientists smugly call those forests… because they contain lots of trees there are also nontreebased approaches like support vector machines which essentially slice up the decision space using arbitrary lines and these don’t have to be straight lines they can be polynomials or some other fancy mathematical function like before it’s the machine learning algorithms job to figure out the best lines to provide the most accurate decision boundaries so far my examples have only had two features which is easy enough for a human to figure out if we add a third feature let’s say length of antennae then our 2d lines become 3d planes creating decision boundaries in three dimensions these planes don’t have to be straight either plus a truly useful classifier would contend with many different moth species now i think you’d agree this is getting too complicated to figure out by hand… but even this is a very basic example – just three features and five moth species we can still show it in this 3d scatter plot unfortunately there’s no good way to visualize four features at once or twenty features let alone hundreds or even thousands of features but that’s what many realworld machine learning problems face can you imagine trying to figure out the equation for a hyperplane rippling through a thousanddimensional decision space probably not but computers with clever machine learning algorithms can… and they do all day long on computers at places like google facebook microsoft and amazon techniques like decision trees and support vector machines are strongly rooted in the field of statistics which has dealt with making confident decisions using data long before computers ever existed there’s a very large class of widely used statistical machine learning techniques but there are also some approaches with no origins in statistics most notable are artificial neural networks which were inspired by neurons in our brains for a primer of biological neurons check out our threepart overview here but basically neurons are cells that process and transmit messages using electrical and chemical signals they take one or more inputs from other cells process those signals and then emit their own signal these form into huge interconnected networks that are able to process complex information just like your brain watching this youtube video artificial neurons are very similar each takes a series of inputs combines them and emits a signal rather than being electrical or chemical signals artificial neurons take numbers in and spit numbers out they are organized into layers that are connected by links forming a network of neurons hence the name let’s return to our moth example to see how neural nets can be used for classification our first layer – the input layer – provides data from a single moth needing classification again we’ll use mass and wingspan at the other end we have an output layer with two neurons one for emperor moth and another for luna moth the most excited neuron will be our classification decision in between we have a hidden layer that transforms our inputs into outputs and does the hard work of classification to see how this is done let’s zoom into one neuron in the hidden layer the first thing a neuron does is multiply each of its inputs by a specific weight let’s say 28 for its first input and 1 for it’s second input then it sums these weighted inputs together which is in this case is a grand total of 974 the neuron then applies a bias to this result  in other words it adds or subtracts a fixed value for example minus six for a new value of 374 these bias and inputs weights are initially set to random values when a neural network is created then an algorithm goes in and starts tweaking all those values to train the neural network using labeled data for training and testing this happens over many interactions gradually improving accuracy – a process very much like human learning finally neurons have an activation function also called a transfer function that gets applied to the output performing a final mathematical modification to the result for example limiting the value to a range from negative one and positive one or setting any negative values to 0 we’ll use a linear transfer function that passes the value through unchanged so 374 stays as 374 so for our example neuron given the inputs 55 and 82 the output would be 374 this is just one neuron but this process of weighting summing biasing and applying an activation function is computed for all neurons in a layer and the values propagate forward in the network one layer at a time in this example the output neuron with the highest value is our decision luna moth importantly the hidden layer doesn’t have to be just one layer… it can be many layers deep this is where the term deep learning comes from training these more complicated networks takes a lot more computation and data despite the fact that neural networks were invented over fifty years ago deep neural nets have only been practical very recently thanks to powerful processors but even more so wicked fast gpus so thank you gamers for being so demanding about silky smooth framerates a couple of years ago google and facebook demonstrated deep neural nets that could find faces in photos as well as humans – and humans are really good at this it was a huge milestone now deep neural nets are driving cars translating human speech diagnosing medical conditions and much more these algorithms are very sophisticated but it’s less clear if they should be described as “intelligent” they can really only do one thing like classify moths find faces or translate languages this type of ai is called weak ai or narrow ai it’s only intelligent at specific tasks but that doesn’t mean it’s not useful i mean medical devices that can make diagnoses and cars that can drive themselves are amazing but do we need those computers to compose music and look up delicious recipes in their free time probably not although that would be kinda cool truly generalpurpose ai one as smart and wellrounded as a human is called strong ai no one has demonstrated anything close to humanlevel artificial intelligence yet some argue it’s impossible but many people point to the explosion of digitized knowledge – like wikipedia articles web pages and youtube videos – as the perfect kindling for strong ai although you can only watch a maximum of 24 hours of youtube a day a computer can watch millions of hours for example ibm’s watson consults and synthesizes information from 200 million pages of content including the full text of wikipedia while not a strong ai watson is pretty smart and it crushed its human competition in jeopardy way back in 2011 not only can ais gobble up huge volumes of information but they can also learn over time often much faster than humans in 2016 google debuted alphago a narrow ai that plays the fiendishly complicated board game go one of the ways it got so good and able to beat the very best human players was by playing clones of itself millions and millions of times it learned what worked and what didn’t and along the way discovered successful strategies all by itself this is called reinforcement learning and it’s a super powerful approach in fact it’s very similar to how humans learn people don’t just magically acquire the ability to walk it takes thousands of hours of trial and error to figure it out computers are now on the cusp of learning by trial and error and for many narrow problems reinforcement learning is already widely used what will be interesting to see is if these types of learning techniques can be applied more broadly to create humanlike strong ais that learn much like how kids learn but at super accelerated rates if that happens there are some pretty big changes in store for humanity – a topic we’ll revisit later thanks for watching see you next week 