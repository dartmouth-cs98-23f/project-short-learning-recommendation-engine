a programming paradigm refers to a style or method of writing a program   lets assume you asked ten people to create an omelet they would each prepare it differently which of the following is the typical method for making an omelet a similar issue will arise if you ask ten persons to complete the identical program they will each complete it in their way so programming paradigms are different techniques for writing your program it is critical to understand how we will write a program understanding the programming paradigm is necessary for that when selecting a programming language for building a program or software we must ensure that it supports the programming paradigms why do we need a programming paradigm one of my favorite coding quotes is any idiot can create code that a machine can understand skilled programmers produce code that humans can understand consider building software with 10000 lines of code with a group of people what happens if they all create the software in their style first and foremost the programs complexity will rise the programs readability and structure will suffer it will be tough to test and updating the code will be incredibly complex what will happen if everyone writes your application using a set standard we can reduce many of the problems a programming paradigm will assist us in resolving all problems thus the programming paradigm offers a unique standard for developing programs and software types of programming paradigm the two sorts of programming paradigms are imperative programming and declarative programming the two types of imperative programming are procedural and objectoriented there are two types of declarative programming logical and functional let us examine each of these points in further depth imperative programming the word imperative implies command imperative programming tells the computer how to complete a task by giving a list of commands or instructions in a specific order the order of instructions is significant in imperative programming in this example we are giving the computer linebyline instructions on how to add two numbers and subtract two numbers procedural programming in procedural programming we divide the problem into smaller subproblems we often refer to this structured approach a procedure is a chunk of code that performs a specified task data and logic are separate entities in procedural programming  here have two procedures add two numbers and subtract two numbers the main procedure will call this subprocedure to add and subtract numbers object oriented programming in objectoriented programming we will use classes and objects to create an entire program the whole program will run depending on object interactions objects are realworld entities with properties and behavior the classes act as the objects blueprint classes describe the characteristics and behavior of objects in this example you can see that we have three classes calculator addition and subtraction the addition class is in charge of adding two numbers the subtraction class is in charge of subtracting two integers so the calculator class will call the addition and subtraction classes to add and subtract two numbers here all three classes interact to produce a result declarative programming in declarative programming we tell the computer what to do rather than how to do it we shall always focus on output or result in declarative programming in this sample code we are telling the database what we want rather than how it should do functional and logical programming are the two main subtypes functional programming in functional programming we will split the entire program into two functions each function takes some parameters as input and returns the output javascript is one example of a functional program here in the example we have three functions the addtwonumber function adds two integers the subtracttwonumber method subtracts two integers so these two functions have two parameters like i j it returns the output so the calculate function is responsible for adding and subtracting two numbers logic programming logic programming is composed of facts and causes rather than instruction in logic programming we will build an entire program based on the notation of logical detection logic programming uses its knowledge to arrive at a true or false conclusion example prolog language in this example we tell the computer socrates is a man and we say all men are mortal then we ask the computer is socrates mortal the computer will then use its knowledge to reply yes conclusion in the previous section we learned how to write a program in different programming styles the same program has rewritten it in different ways for example functional programming we split the program into small functions in a procedure we divided the entire program into individual procedures in objectoriented programming the whole program is split into objects so it is clear that using a programming paradigm reduces the complexity and increases the programs maintainability 