forever teach a man how to go and frustrate him for a lifetime [Applause] welcome to design strong in this video today we will ensure that you are not frustrated with design we are going to do a mock interview regarding one of the data schema designs so data something by design basically is about you know understanding the requirement from a functional perspective and deciding how we are going to utilize the database and how are we going to design uh the data schema design usually is asked in sort of an environment because in case of a nosql sort of a database then in those case the design is really simple because all youre going to have is lets say a key value sort of design so in this data schema design there will be a lot of things that you are going to learn first is how to keep the design very simple how not to you know over complicate the design just to just you know show that there are a lot of concepts that we are aware of how to ensure that normalization is there is design that youre doing plus also considering the fact that the design need not be very complicated and usually in data schema design try not to go towards scaling because if the interviewer is interested on scaling aspects such as lets say splitting the data or sharding or partitioning etcetera then they will mention about their intentions of asking about sharding so you start with a simple design in terms of a schema and then as in when you know the interview gets completed if there is time or if there is a cross question that comes about the quantity or the quantum of data that youre going to have that is when you know you should switch to concepts like sharding and partitioning etc otherwise just keep focus on the normalizations before normal forms that you might have read and utilize the simple concepts such as primary and complete key foreign hi is that ankit yes ankit speaking hey angkor this is start speaking from xyz consultancy how are you doing today im doing good how about you hey thanks for asking im also doing good so are you ready for your interview yeah sure okay so uh before we begin why dont you tell me something about your current role okay so uh all i want you to do is design the data schema for one of the problems that we are solving here is that fine yeah sure so we need to do this database design here so uh when we when you said schema design are we going to design data schema for an rdbms or a nosql yeah rdbms here okay so understand it this way we have a product page okay so understand the product page as maybe amazon.com close slash lets say oh shoot okay so what do you have here is a product key which is shared in this case and for every product youre going to have four attributes uh one of them being of course the product name the next is prime data or data will have something like you know the free text sort of thing which will be there there will be an image or they can multiple images of course associated with product and this product will belong to category okay so for category we will have three levels of category and uh for example lets say if its a shirt that we talked about then uh it will be under clothes then it will be under lets say fashionware and then in the short category so its like subcategories so clothes will have a fashionware and then assurance next on the product page youll also be able to see reviews by the other users and every review will contain who or which user has posted this a star rating for all the reviews and a description of the review of course okay so uh i have a question here so does review contains images or maybe videos as well no no lets lets for the time being keep images and videos in terms of review out of the scope and there is one more interesting feature which is the product owner or lets say the seller in this case can reply to every review once and only once and it should be non-editable and apart from this there will be a discussion forum for every product wherein uh sellers and other buyers can have interaction so its like anybody can reply to anyone elses messages on the discussion related to the product or maybe even not related times so this is what is we are looking to design and uh im only looking at rdbms data schema design here so if that works for you or if you have any questions okay so whatever are the points that you have mentioned as part of this this design uh i have noted them now and yeah im ready to begin perfect okay so the first category the like the first table that im thinking of out of uh like based on the requirements is going to be categories table wherein i will have a primary key which is going to be category id of type uuid and there will be a category name of lets say dark hair of size lets say 200 pretty much it so category also had the grouping right so one category can be sub category for other yep thats correct okay okay so i will also have a parent category parent category id so parent category id here uh will be like so for example if it is a primary category then category id and parent category id is going to be same and if lets say if it is a sub category then parent category id will be the id or category id for the parent category so so its like whenever you want to retrieve a category you will need to create a self join sort of a structure and thats thats how you can you know create this category table next what im trying to do here is i will create a table for product lets call it product it will have a product id of type qid then like you said there will be a key for every product lets keep it back at 200 so this is going to be so this was the primary key here right so im going to like put that in bold so that we remember and the product key here is going to be a unique key here okay and there will be a product name lets say for the simplicity we will have a similar sort of uh structure then let me enter a few rows and then the next is going to be category category which will be there so category is going to be a uuid so this is going to be a foreign key reference so this is this is the foreign key reference which is there and category is there and based on so this is going to be the like bottom most category the child category and based on that like parent category can be retrieved from the categories table does that make sense yep okay then there will be product data which you said is going to be like a free text so okay so if when you say free text uh did you mean like uh unlimited size of text look considering the time constraint lets just keep that out of scope lets assume that there is like a 255 characters limit okay okay okay so in that case you know you can keep it like a 255 character where because because we said that we can keep it within the size otherwise i would have created a different table all together for this and you know provided with some of the category like this product data id and utilize multiple rows for storing this or maybe use something like a blob and uh there will be a shop id also associated with every product so shop id again will be uid uh shop means like you said a like amazon.com shop slash product right so this is where i am going to you know keep this shop information next what im going to create is just give me that sorry is like next im going to create a table for images it will have a image id here it will also have a product id and lets say we are going to utilize some of the one of the uh cloud storage so s3 url can be here so again this will be available so product key here again will be a reference to the to the product id which we have okay and this is image id which is the primary key for this table and uh for users do you want uh like haha because you did not explain how the users will look look considering the time constraints okay just make that out of scope okay if it is out of scope lets say we will will not get into the user details next table that im going to create is going to be for reviews so there will be a review id which will be uid primary key then there will be a product id which will be again a uuid and this is going to be a foreign key reference so review id will again be connected with the with the product id then uh for review next is going to be a user id uh because i need to know which user has posted this review so user id again will be uid and like from the users reference or primary key for user will be there then so there will be one rating so star star can be integer star can be can that be in lets say 1.5 star or 2.5 nope nope okay okay so in that case we can you know keep it simple integer and star rating uh description we will have aware cash lets say 255 then i will have a reply id this will be helpful to create the table structure so because review can have a reply also and like you said reply can only come from the buyer so in terms of i like id will not be needed here it will be just the reply text so what we can do here is so there are two approaches that i can follow here one is if i can have a reply id or lets say is reply boolean so that i can know what are all the reviews which are pending to be replied from the buyer or the owner uh but i think if it is null or empty then that is also im not taking any replied so reviews pretty much is done here then next that im going to have is maybe another table for discussions so we will have a discussion id which is going to be the primary key for this then i will have a product id which is going to be uid the foreign key reference and on the discussion like you had user has posted this this is going to be a user id and there is one more thing so reply to that will also be a uuid because we need to know what is uh like for example if lets say this is starting of discussion then discussion id and reply to will be same and then lets say if there is a reply coming to lets say message one then reply two will have one and then a discussion id like whatever is the id of that response and lets have discussion text like what is the uh discussion like what does this discussion have so this completes discussion let me see again if i have you know covered everything or not so you said uh let me go through the problem statement again so you said a product page will be there so you will have a product key product will have image and a name product data the text and a category so category can be three level so category three levels can be retrieved using this category id okay then uh review review is post review by user it can have a star rating this is fine a description okay and if a reply has been sent okay so reply directly contains the text from the buyer because only buyer can reply right okay and for the forum discussion uh discussion id product id because you want to know what product uh this discussion is all about post by user which user has posted this reply to so reply to will help us decide whether this is a reply to an existing discussion or is it a new discussion which is starting and there will be a discussion text which is not going to be uh dated so this is going to be a valcash my bad i think my system is hanging a bit just give me a minute yep yeah so pretty much it wasnt this simple guys so i hope you like the interview uh just for your reference um just wanted to you know make this disclaimer that both of the roles are played by me itself uh there was no second interview which was involved but however in case if you want to you know appear in the mock interview or which we are going to conduct which is going to be around one interview per week then please let us know in the comment section we will get back to you and we can have a mock interview there are a lot of you know uh companies there are a lot of startups who are charging for this interview sort of series our intention is only to you know teach everyone and while we are you know exchanging this knowledge while there is a knowledge transition we are also gaining some part of it so this is the only intention that we have in case if you are interested in a mock interview in case if you want to see how are you going to perform in such an interview [Music] [Music] broaden our reach so that everyone who wants to understand system design everyone who wants to understand large scale systems are able to get this resource so keep watching keep sharing and of course hit the subscribe button and say design strong 