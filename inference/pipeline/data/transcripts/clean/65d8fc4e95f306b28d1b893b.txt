Nathan Earnest-Noble. Im a quantum computing applications researcher at IBM Quantum. And today Im gonna be giving two lectures, the first of which is this, the quantum hardware introduction. So in this talk, I really am hoping to give you a sense of some of the details behind quantum hardware, and how one can generally design quantum hardware, and a few other things. So jumping into the details of the overview of my talk, were going to start off first by giving a brief review of superconducting qubits and this idea of circuit quantum electrodynamics, which is the paradigm that we use to realize quantum computers at IBM. Im then going to discuss an overview of some typical device errors and within a few of these, highlight the details on them, as well as some error mitigation strategies that you can use to sort of reduce the impact that these will have on whatever quantum circuit youre trying to run. And then Ill finish off discussing this idea of quantum process tomography, which is a way in which you can sort of measure the quality of your gates specifically trying to point out how this might be relevant to some of the things that we have for the quantum lab coming up. I just wanted to say, trying to give a quantum hardware introduction in one hour is quite a feat. One that I dont really intend to do in the utmost detail. So really what I hope to do in this talk is give you a sense of the forest of quantum hardware. And so you can sort of see all the different varieties of things that exist out there, and then hopefully point you in the right direction for resources, if you care really dive in and understand the details of it more. So, to that end in our global summer school from last year, Zlatko Minev gave a fantastic set of lectures consisting of six hours of material. And so much of what Ill be talking was touched on in some of his lectures. So I will try and point you to them whenever it is appropriate. So with that said, lets go ahead and jump into this first thing of reviewing superconducting qubits and this idea of circuit computing. So superconducting qubits are made from superconducting circuits. Of these circuits, there are sort of three essential components that really we use to build up a variety of different flavors of superconducting qubits. The first is just going to be a capacitor. So how the capacitor ends up being realized can be done in a variety of different ways. Here on the figure, Ive shown one such realization where its a coplanar capacitor. So youd have two metal plates, that sort of exist next to each other. And its the dimensions of these plates and the material that theyre sitting on that will ultimately dictate what amount of capacitance they have. Then at the bottom here, I have some mathematical description of the Hamiltonian. So namely the number of charge on these plates, Q squared divided by two times the capacitance will give you a sense of the Hamiltonian or the energy of the system. Moving on to the next element that were going to want in our superconducting qubits is this idea of an inductor. Inductors generally are realized through taking a meandering wire, and its the length of that wire that largely dictates the amount of inductance that you will have, as well as the material properties of it. For its Hamiltonian description, we have the inductance on the bottom, again, two times the inductance, and at the top you have the amount of flux going through this inductor here. Now, the next essential component is going to be this idea of a Josephson junction. So Josephson junction is the only known lossless nonlinear inductive element. And there are many different ways in which you can actually realize a Josephson junction. The popular one to use for superconducting qubits is going to be a superconductor, insulator, superconductor barrier. and that sort of sandwich of superconductor with an insulator between will be the thing that actually creates the Josephson junction for you. And here I have a picture of one such realization, where you have a superconducting lead sort of coming here. And then on the bottom, you have another superconducting lead. And then in between these two, you have an aluminum oxide layer that separates those two aluminum superconducting leads. And it is this sort of stack here that actually ends up giving you the desired Josephson junction that you wish to have. And then at the bottom now, you can very clearly see this EJ. This is the Josephson energy and this is actually related to an idea of an inductance, a non-linear inductance, and in Zlatkos talks from last year, he actually points out how you can derive what the sort of linear inductance of this is and then go to higher orders to see what higher orders of inductance you actually have from some Josephson junction like this. And then importantly, the nonlinear component as well as is this cosine of phi, where you actually have a phase, the phi being a phase across this junction here. Now, these are sort of the three essential components to actually realize superconducting qubits. And what were going to do now is begin to look at what happens when you combine them in different ways. So to start, lets take the two linear elements namely the capacitor and the inductor here, and combine those. So when we do that, were going to combine them, and this will actually give rise to a simple harmonic oscillator, one of the physicists favorite sort of toy problems to work with. At the bottom here, you can see the Hamiltonian description of this, where you have the charge and phase now, and it very natively comes together. And then here we have two different realizations of a simple harmonic oscillator. On the left, we have one thats sort of known as a lumped element resonator. So this now has say a capacitance through this sort of end type shaped piece of metal here, and it has some capacitance to ground. And then at the bottom, you have a meandering wire, which gives you the inductance. So this is called a lumped element resonator, because its resonant frequency is such that if you take the characteristic wavelength of that frequency, it is much larger than the size of the device itself. Now this is important because if the device is too large, you can end up having resonant modes of sort of arising from the physical nature of the device which would not be ideal in the case of trying to make a lumped element resonator. However, you can actually realize it through sort of a CPW, coplanar waveguide resonator instead, which is sort of shown here highlighted in this red box. So now its basically the length of the Andarine coplanar waveguide, as well as its boundary conditions that end up giving rise to the resonant frequency for this style of a simple harmonic oscillator. Now, this is where I wanna point you to some lectures from last year on which in lecture 17 Zlatko gets into how you can, say, use Kirchhoffs laws and what I sort of call Newtonian mechanics to analyze the the motion, the equations of motion for a simple harmonic oscillator like this. And he even gets into say Hamiltonian and Lagrangian mechanics, which is a to sort of, which is sort of shown here, where you can see these sort of stable points within the phase space of of such a device. In doing so he actually starts to give rise or explanation to a few different things. And then in lecture 18, he covers the quantum mechanical version of this. So specifically he ends up giving a definition of this sense of ladder operators. So youll see in this talk later on this sense of As and A daggers, which sort of are operators that help take you up and down some sort of ladder, if you will. And theyre sort of known as a second quantization. And he goes into the details of what these things actually are. And furthermore, he shows how you can derive the sort of discrete quantum energies for such an oscillator and how theres some zero point fluctuations so that even when youre at the lowest possible energy that you can have there are some slight fluctuations that happen at this point. Now, just jumping to the punchline of what Zlatko gets into in some of his talk from last year, is you have the simple harmonic oscillator when you describe the energy levels of it, what you end up getting is that you have energy levels that are spaced out evenly by H bar omega. So zero, one is the same frequency as one, two and so on and so forth. So this is going to be a very useful tool as well see in a bit, but one might be tempted to try and make a qubit out of this, except youll end up running into the issue that is, if you try and drive on your zero, one transition of this oscillator, youre inherently going to drive on the one, two and the two, three and instead of getting coherent control of the zero and the one state, you end up driving sort of whats known as a Fox state, where you actually just end up getting photons that sort of populate this resonator. So this isnt necessarily the end all, be all, in the sense that now what were going to do is were actually going to try and create a situation where the higher energy levels have a different spacing. Well be doing this by taking, as one might be able to guess, is taking this linear inductive element and replacing it with this nonlinear Josephson junction. When you do that, you give rise to what is sort of known as a charged base qubit. Here Im saying a charged base in a harmonic oscillator which is the way in which we realized transmon qubits at IBM. So the energy for this, or the Hamiltonian to describe this is shown here where you have some sort of capacitive energy times n squared, where n is now your up number operator, its this A dagger A operator times or minus this EJ of cosine arising from the Josephson junction. This here could be derived, say from doing some similar things say in Kirchhoffs laws, where you actually sort of take into account the energy going across the loops here. And Zlatko very nicely goes into some of these details in his talk. The physical realization, it comes in two different flavors for this. One is, I showed here, is sort of known as a 2D transmon qubit, in which your readout resonators are in this sort of coplanar lumped element style that I showed you earlier. And then you can sort of see the transmon here where you have two large capacitor pads and then in the middle here, its not too easy to see, but theres a Josephson junction connecting these two. Now, there is a different way in which you can also realize these sort of charged base qubits, and thats in this sort of 3D style. So namely instead of using those coplanar resonators or the lumped element resonators to realize your simple harmonic oscillator, what youll do is actually realize it through a physical box. And so, itll be the dimensions of that box that actually end up giving rise to your sort of resonant frequency. You use that as your readout resonator, and then now youre going to put some qubit inside here, as shown as this. So here you have two blocks of capacitor pads, and again, some Josephson junction shunting them there. And then its in this way that you can get, make a 3D transmon qubit instead. And here Im sort of pointing to the paper where they first realized this. One thing that was really nice about these 3D transmons is that they actually end up putting a lot of the electric fields inside some vacuum, which ends up helping improve the quality of your qubit at least when it first started. And theres been a lot of improvements in that sort of 2D style, in which weve actually ended up doing quite well, and can get very good quality qubits, even in the 2D fashion, which Ill discuss in a second. And as I mentioned, Zlatko, in lecture 19, really gets into the details of this transmon qubit, how you can derive the Josephson inductance, and then really derive that transmon Hamiltonian. And I wanna point out, you dont necessarily have to have just a single junction, you can have two junctions. When you do this, what you end up now doing is having a tunable SQUID loop right here. SQUID loop in this case stands for superconducting quantum interference device. And if you, again, shunt this SQUID loop with some capacitor, you end up realizing a tunable charged based qubit in the case where now your EJ is tunable by sort of piercing it with some external magnetic field. This here is an image of such a device. And also, what I just wanted to point out, is you can get quite elaborate in how you design these devices. So you can see that the capacity development for this is designed very differently than what youve seen in some of the previous slides. But then right here, you have one junction and another junction. And then this here is the loop that allows you to sort of begin to tune the Josephs and energy there. This is a very interesting device. There is one downside. Once you have this sort of external loop, or sorry, when you have this loop, and once you can pierce it with an external magnetic field, you become very susceptible to a larger set of noise sources. When I was in grad school, and sort of working to build these sorts of devices, its actually quite impressive how sensitive these things can be, in the sense that I can take, if we didnt shield our device properly, wed end up seeing that when you walk in the room and you take your phone and you could wave your phone around like 10 feet away, and you can actually see this cause the qubit frequency to sort of shift around. Due to the magnets that are sitting inside your phone. So this shows and says that youd have to take a lot of care when designing and considering what sorts of qubits youre gonna use. In the case of what we do at IBM, we always stick with fixed frequency transmons, which helps improve the underlying coherence of them. Ill touch on this a bit later. When doing this, it actually ends up changing some of the native gates that you can actually realize, particularly two qubit gates. So Ive elaborated on this Josephson junction a bit, and how it ends up being this nonlinear element. And that is an essential ingredient, this nonlinear inductance in order to realize qubits but I just wanna point out that you can actually begin to do some interesting engineering of these junctions themselves. So namely, we have this Josephson junction, which is very small here. If instead we take this Josephson junction and we make it a bit larger, what you can actually end up realizing is what is known as a super inductance. So namely take this junction, make it larger and then now have a chain of large junctions like this. And now what youll do is youll have effectively a linear inductance that is much larger than what you get for some equivalent, for some wire with an equivalent length. So the super inductance ends up allowing you to get sort of 10,000 times as much inductance compared to some wire. Is a rough number here. Now, whats interesting about this is you can take this, and actually ended up engineering a different sort of qubit known as the fluxonium qubit, where you take the Josephson junction and shunt it by this large inductance here. Here, Ive pointed to one of the episodes from our Qiskit seminar series, in which professor Vladimir Manchurian from University of Maryland actually discusses some of his work with this fluxonium qubit. During his time in grad school, he was the one to realize the initial experiment, or have the initial experimental really. In his time in grad school, he was one of the folks who had initially realized this qubit experimentally. And this is something that I had the opportunity to work on a bit in grad school as well. And its a very interesting device, for a lot of different reasons. Now, here, I just wanna point out that you can end up taking these four different elements, Ive sort of added this fourth one here of a super inductor, and by doing so you can realize a variety of different qubits that sort of fit this circuit style here, where you have either a capacitor, an inductor or a Josephson junction. When you, depending on how you combine these elements, you are going to take the energy landscape that your quantum states actually exist in and youre going to adjust it. And so when I, just a moment ago spoke of this idea of using fluxoniums to generate interesting properties, one of those things is that you can create an energy landscape that allows you to create sort of quantum states that are sort of robust to noise. Now ,in the same spirit, you can, something thats started to recently happen which was quite exciting is you can take this somewhat simple circuit style, in which youd say have two nodes, and you can make it a bit more complex. Namely, you can get into this idea of a zero pi qubit, in which now instead of two nodes, you end up having four nodes. And this zero-pi qubit is designed to be inherently robust to all sorts of noise, both for its T1 and its T2 properties which Ill explain what those are, just in case you dont know what it is. In the same vein, for this zero-pi qubit, in our Qiskit seminar series, we had a graduate student from Princeton, who ends up speaking about some of his work for realizing this device. He also touches on some interesting things about fluxonium qubits. Now, Ive very quickly jumped through all these different qubits that have sort of come into existence. And I didnt necessarily get into the details. What I want to do, though, is I really wanna point you to some resources where you can find this. So namely theres, I made great use of this during my time in grad school, but theres this GitHub repo for superconducting qubits designed by Dens Holk whos one of the, hes a professor at Northwestern, and he one of the pioneers of many of the, of much of the research in this area, as well as one of his older post-docs, Peter. So they have this repo. In this repo, you can go and look at the different qubits, study what their environment looks like, the energy landscape that they exist in, and see some of the interesting properties, you can say, and begin to understand how different energy levels couple together, and some of the details that I unfortunately dont have the time to get into today. With that said, though, what I wanna do is take a step back, and look at the elements that were using at IBM Quantum for our hardware. So specifically we are going to speak about the transmon qubit. So its a Josephson junction shunted by a large capacitance and then this simple harmonic oscillator. So I want to now explain this idea of circuit QED and how thats important for readout and our devices. Just for the sake of ease, Im going to change these Hamiltonians bit. In which before I was talking with sort of operators of Q and phi, here instead, for the simple harmonic oscillator, Im going to rewrite that in terms of these A daggers and As, so these ladder operators. If youre unfamiliar with what this is, please do go refer Zlatkos talk from last year. And then for my transmon qubit, for the sake of simplicity right now, Im just gonna approximate it as two level system. It is important to know that its not a two level system, and this ends up coming up in some of the details that Ill mention in the next lecture actually when you start to think about the control of your device. And it will also be important in this lecture when youre thinking about rebalancing. So now what Im going to do is couple these two devices together. So here Ive coupled it in some capacitive manner where I have a capacitor now that sort of allows these two things to speak to each other. And it is this idea right here that is the paradigm of circuit quantum electrodynamics. So circuit quantum electrodynamic is the circuit equivalent of cavity QED. Cavity QED winning the Nobel Prize by Serge Haroche by Dave Wineland some number of years ago. To describe this sort of system, you can describe it with this, what is known as a Jaynes-Cummings Hamiltonian, which is written here. So just walking through each one of these elements, you have the the resonant frequency of your readout resonator. So thats omega-R. So its H bar omega-R ends up getting the energy of that. Then here you have omega-Q times sigma Z for your qubit. And then now youve had these other terms of chi. So this chi is dependence on the coupling that arises from this capacitive element here. And it is sort of proportional in some sense to how strongly coupled these two things are. What I want to point out thats important about this element chi is that your effective, once youve coupled these systems together, the effective resonant frequency of your readout resonator here is now actually going to depend on the state of your qubits, this sigma Z. So if your qubits pointing down or in the zero state, your readout resonator will have one frequency. And then if its pointing in the other direction, or in the one state, youll end up shifting what that frequency is. So what that ends up looking like in the physical sense is that you have some readout resonator, as you see here, this is that CPW styled resonator in which both, theyre sort of open boundary conditions here. And then now you have a qubit that sits here. This happens to be a diagram for a flux tuneable qubit, and its capacitively coupled to this transmission body. Now, when you send it a tone, if your qubits in one state, youll get, say, a lot of signal going through but if your qubit ends up being in the one state, what youll end up finding is that you actually dont get much transmission through this. It is through this that you can then determine the the state of your qubit with the sigma Z. Putting this in sort of form in which you can see the transmission, here, the x-axis now is the frequency and then the y is the amount of transmission or the cavity population that you have. So if your qubits in one state, youll see transmission peak at one frequency and if your qubits in another state, youll see your transmission peak in another. Its in this way, now, if you say probe at this frequency right here, if you have very little transmission and you know your qubits in the one state, and if you have a lot of transmission, you know your qubits in the two state. So this is the paradigm of circuit QED. Earlier, I mentioned that we cant use this simple harmonic oscillator as our qubit but as you can see, it still ends up being very useful. One, its going to serve as the way that we actually readout the state of our qubits but very importantly, what this resonator does is it helps isolate the qubit from the environment. So it sort of does a better job in ensuring that it doesnt interact with the environment. And then this way youre gonna get better T1s and better T2s. And overall, its just gonna allow you to be able to do more with these quantum devices. Within our systems at IBM, we also use this linear resonator as a way to couple two qubits together. And this will ultimately lead to our cross resonance interaction, which Ill discuss in depth in the next lecture, but Ill touch on it in just a moment here. Now, in terms of giving a bit of an overview of different sorts of superconducting qubits, I want to take a moment and rearrange this Hamiltonian that we have here. So its the exact same terms that were there, but instead what Ive done is Ive kept my omega R, and I sort of isolated it. And instead now, look at the impact on my qubit alone. What you can see now, when you read it in this way, is that what your qubit frequency ends up being depends on the number of photons inside your resonator. So this is interesting because you can actually now resolve individual photons that exist inside this resonator. So this was some of the work done by Dave Schuster, whos a professor at the University of Chicago, and this is reference to his paper in which now you can see these numbers have all peaked. So the x-axis here is going to say be the qubit frequency that youre probing at. And then this y-axis gives you a sense as to how much your your qubit actually is occupying this frequency in a sense. Now, what you can see is if you have zero photons inside the resonator, youre gonna have one resonant frequency. And if you have one its shifts, two, and so on and so forth. Now, I bring this up, because if youre in this number resolved state, or if you have a sort of number resolved setup for your qubit, this will actually be a useful in getting, making that linear oscillator actually a qubit. What I mean to say is that there exists this idea of SNAP gates theyre called, so selective number dependent arbitrary phase gates, by using this sort of gate here, you can actually end up getting coherent control of the photons inside this cavity. So this on the right is a transmon qubit coupled to some sort of 3D like cavity. The cavity in this case, the frequency is set by the dimensions of this pin at the bottom. But by using this, you can actually now actually make that harmonic oscillator, and have coherent control over it. So earlier I said you couldnt have coherent control of the cavity, thats true until you introduced this sort of transmon element that allows you to begin to get control over this. So these are sort of the world of CAT codes, or CAT qubits often. Again, pointing to some resources in case youre interested to look into this more, we have several episodes from our seminar series in which we discuss this sort of approach to superconducting qubits. Now, I touched on this idea of measurements, and how you can discriminate, say, between your zero state and your one state. And I just wanna put this into the language of Qiskit get a little bit. So reviewing the way that we measure our qubits is you are first going to drive your qubit at its frequency. And then you measure the readout resonator, or you measure the state of your qubit by probing the readout resonator in the way that Ive discussed before. So when operating at the quantum circuit level, this sort of comes back to as a result of the zero or one state. And this now, and in the context of Qiskit-Pulse, as its sort of known, is measured at level two. This is not actually what happens in the sense that in order to get whether you have a zero or a one, you have to do some analysis on the microwave tone that you send in. So specifically if you move down to say measurement level one, what you can see is that this here now is an IQ plot in which were plotting the real and imaginary components of the microwave tone that youre sending into your readout resonator. When you do that, youve end up getting sort of these two different centroids here. Where if you qubits in the zero state, you end up having a blob over here. And if your qubits in the one, you end up having a centroid in this area. And its in this way that you actually end up classifying whether your qubits in the zero or one state. And you can, say, use classical machine learning to, or a variety of techniques if you wish, to actually sort of create a discriminator of sorts that classifies whether youre qubits zero or classifies if its one. Now, this here is measurement level one in which weve taken this tone, it has some characteristic duration, and weve just taken the time average of that tone. Something that we hope to make available one day is this idea of measuring levels zero where you can actually see those time dynamics explicitly. So this is the review, sort of very quick review of superconducting qubits, and how it is that you realize different sorts of elements. With that, I now want to get into some of the typical errors that you will find in quantum hardware. And for a few of those, touch on how you can actually mitigate the impact of those errors. So lets get into to that now. So at a very high level, Ive listed four different sorts of errors that you often run into. One is this thing that Ive mentioned a few times, mainly T1s and T2s. Theres going to be this readout error, more generally, its actually state preparation and measurement error, spam error is what its often referred to as. Then you could have, say, gate errors. So youre trying to control these qubits. Your controls will have imperfections associated with them. And that is something that is important when trying to build a fault tolerant quantum computer. And then this last one is I think something that will be at least somewhat more familiar to folks which is this idea of shock error. So basically getting a good number of measurements to have strong statistics of your system here. Now, on the right Ive listed general mitigation strategies. So Richardson extrapolation, I dont have a time to talk about it today, but this is the essence of trying to intentionally amplify errors or amplify noise in your system in a careful manner such that you can actually use it as a way to extrapolate back to sum zero, some ideal zero noise result. Readout errors, here, there are two different ways that you can do it. So excited state promoted readout is one. And this essence of an A matrix. For gate errors, really just the engineering of the gates themselves is the way in which you try and suppress any sort of errors coming from this. And this ends up getting tied to the hardware in a certain way, which Ill discuss about. And then this last one, I think its maybe not explicitly an error mitigation strategy, but it is in the same vein which you can be clever about the way in which you measure your system, or measure the Hamiltonian of interest that youre trying to study, for example, to actually get better results in this, the number of shots that you have to take. For the talk today, Im going to focus on the ones that are highlighted in purple. So starting off, lets get into this idea of T1 and T2, in case youre unfamiliar. So T1 is just getting into this essence of you have discrete energy levels. Im going to take my qubit from the zero state and put it into the one. And how long is it that I, so I take it, starts off from the ground state. I pump it to the excited state in some fashion. Then I wait and see how long it takes to decay. It is this essence that gives you the T1. The T2 is often referred to as the coherence time. This is where you take your qubit thats in the ground state. You say, can pulse it to the equator. And how long is it before you are no longer able to read out that superposition state? Now, how is it that we actually go about measuring these two properties? So for the T1, what youre going to do is just, as I said a second ago, youre gonna take your qubit and pump it into the excited state, with this idea of a pi pulse. You wait some period of time and then you measure it. And then you do this experiment for a variety of delays, delta T here. And then this is going to have some exponential decay curve associated with it. So you fit it to that exponential decay. Then once you reach your one over X, one over E of that value, then thats going to be your characteristic T1. For your T2, youre gonna do this essence of a pi over two pulse where youre gonna take your qubit and put it to the equator. You wait some period of time, and then you end up doing another pi over two pulse and read out the state of your qubit. When you do this, youre gonna end up having these sorts of oscillations. These oscillations here are known as Ramsey oscillations. And it is through these that you measure, in the way that Ive drawn it here, youre actually measuring your T2 star. Theres a variety of different T2s, T2 star, T2 echo, but Im not gonna get into the details on that too much. In the next lecture, Im going to talk about how you can actually get this pi or pi over two pulse and how you can calibrate it, and how you can do both rough calibrations as well as fine calibrations. However, at this point in time, what I want to really get to is these T1 and T2 properties, are inherently the thing that limits us from being able to do interesting work with quantum computers, or to have a fault tolerant quantum computer. Those paired with those gate errors that I mentioned earlier. So what is great about superconducting qubits is that weve had steady improvement in both of these properties throughout the years. So from the initial realization, in which the coherence times were very short, to now reaching values that are much faster, or much larger. And this, I just wanna point out a few things. So mainly theres this idea of circuit QED. You can see that this was one thing that sort of isolated the qubit from the environment, and consequently improved the T1 and T2s. And then say, here you have this transmon element, which is taking what is known as a Cooper pair box where you have, so a Cooper pair box is one of the charge based qubits on which you have Josephson junction shunted or with some capacitance, when you make that capacitance very large, you end up actually existing in this transmon limit, and then you can see a variety of other things as well. I also wanna point out that, that paper was from back in 2013, just last year, this review of the current state of superconducting qubits was published, in which you can see a continued improvement for these different sorts of devices. Not only that, what I think is exciting is that we really havent reached a fundamental limit in our T1s and T2s. So just a few weeks ago, or maybe a month ago, at the time of this viewing, you can see that Jay posted a very exciting announcement for our fixed frequency transmons, in which we actually end up getting above a millisecond for our T1. And I think the T2 ended up being about a millisecond as well. So now whats really leading to all these improvements? I really liked this question here, what enabled this material, filtering geometry or Vudu? All of the above. So it really is exists to improve these T1s, theres a whole variety of factors that I havent even had the chance to touch on coming from the design of the qubit itself, the materials that youre using to make that qubit, as well as a whole set of control electronics or filtering that really go down inside that fridge that you may have seen in the past. Now, a very important thing that I wanna point out is that your T1s and T2s are not inherently constant. In the sense that they will fluctuate over time. Theyre sensitive to a variety of factors. So if you, say, dont do a good job at keeping the dilution refrigerator cold that keeps these qubits down at say 15 millikelvin and if that warms up, then you can start to see fluctuations in your qubits here. Or if your control electronics start to have issues, they can actually introduce noise into your qubits and cause fluctuations. So these T1s and T2s that are not something that are stable and this is gonna be particularly important, say when youre trying to do readout error mitigation which Im gonna touch on next. In the sense that you have to keep in mind that these things will fluctuate over time and so this will introduce fluctuations in whatever results youre trying to get in your quantum hardware. So getting into readout errors, Im going to first just give a sense as to what the readout errors are. And Im gonna touch on this idea of an A matrix and maybe I can briefly mention what the excited state promoted readout is. So for readout errors, this is basically saying that you are or how do you miss classifications of the state that you sort of expected. In here, as I alluded to earlier, there was this sense of state preparation of measurement errors. So you can, for a variety of reasons say not do perfect at having your qubit be in the zero state to start thats generally you want it to start there. This say can happen if it is, I was just saying, if the temperature of your fridge rises too much, you can actually cause your qubit to be in the excited state just through thermal expectations to the excited state. So in to see what that actually looks like if you sort of squint your eyes, you can see say that theres a blue dot which is supposed to correspond to the zero state but it actually ends up being in this one cluster. So this might be a state preparation error here. The other side of this say is that you have measurement errors where Im gonna get into one nature of measurement errors in which now here I have say some measurement pulse at the bottom. Its going to have some amplitude in some characteristic duration but what youll see is that, what I wanna start to do is just mess around with, keep the amplitude of this fixed and change the duration of by measurement pulse. So if I make my measurement pulse very short for this specific tuning that I, the calibration that I had for the measurement pulse, you can see that these two centroids begin to come close together. So now this actually will end up causing a lot of a large amount of errors in your readout in the sense that you are not able to well resolve whether youre in your zero state or your one state because those two sort of centroids have come very close together. But you can see in the central one that as I increased the duration of my pulse those centroids became well resolved. So you might have this impression that if I then say just continue to increase my pulse duration indefinitely then Ill end up getting perfect readout but its actually quite the opposite in the sense that is, as you begin to increase the duration of your pulse what you can actually end up doing is getting T1 decay during your readout pulse. So this is where your qubit actually will start in the one state during your measurement but because you took too long for your measurement ends up dictating to the zero state and then you end up classifying it as such. So this is actually one way in which that sense of excited state promoted readout can be useful and that you can take your qubit, push it to the one of the excited states and then in this sense, you somewhat extend the lifetime of your qubit. And I think discuss how that actually works. Now, another way that you can do this is through the sense of an A matrix. So for your A matrix here, what you are going to do is youre going to create or youre going to run a set of circuits. So if you have any qubits and you wanted the full matrix you would run two to the end circuits in which you are willing to prepare the variety of combinations of these different circuits. So when doing so, if everything behaves sort of in an ideal sense so you would prepare these two to the end states which is two to the end different quantum circuits, then youre going to perform shocks on them and then from this, you construct this sort of matrix here. If it was behaving in the ideal way that youd want it to, youd end up seeing that its a diagonal matrix with zeros everywhere else. However, because of state preparation errors or measurement errors, youll see that you get non-zero elements in the off diagonal components. Now, this is the way in which you can begin to characterize that A matrix, you can essentially invert this matrix and then from that, you can improve any sorts of results that youre gonna have on your quantum hardware. So this is the essence of readout error mitigation at least in the context of whats built into Qiskit this complete merged house thats called I believe. Now, just to show you how this ends up working is you take your calibration matrix here. If you dont do any sort of correction you get these blue bars here where what were trying to do is say, create the GAC state. So its 0, 0, 0, plus 1, 1, 1, but you can see that there exists a set of errors here that keep it from being the ideal 50, 50 on your 0, 0, 0, plus 1, 1, 1. But once you apply the mitigated results you can see that you ended up greatly improving this. Now, two things I wanna bring out. One, you have to be aware of scaling here. So, you have to run those two to the end circuits. So its in this way that this technique isnt necessarily a scalable solution in the photonic sites. So for example, if you tried to run this on our 65 qubit system, you would have some issues actually inverting that matrix there. And then another important thing to consider is the fact that those T1 fluctuations that I mentioned earlier will lead to fluctuations in your A matrix here. So this is something thats important to consider. So if you want sort of the best results that you can get it can often be useful to calibrate this matrix on some regular occurrence or near the time of the execution of your shot I think youre trying to run. Now, this is just one readout error mitigation technique. There exists others like this excited state promoted readout that I mentioned as well as a variety of other ones that you can try it and use. But now I want to move on to gate errors. So Im not going to get into it too much but what I wanna do is point you to this resource here. This is again from that paper last year in which its a review of sort of the state of superconducting qubits. In this, they bring up a variety of different qubits the initial years in which that specific sort of two qubit gate interaction was realized as well as the highest achieved fidelity for them. So I am specifically pointing out two qubits because or two qubit gates because its two qubit gates that end up being the largest source of error most often. And so, and its in this way that theyre sort of one of the biggest limitations when trying to run firm circuits. There are also single qubit gates and how you characterize those will be something that well discuss in just a second. But something I want to point out is that the style of your hardware will influence what sort of native gates you can realize. So if you say you have tuneable transmons, you can end up realizing say a CZ type gates, somewhat natively and in fixed frequency transmon qubits you have to do a little bit more work or instead say now you can have this tuneable coupling bus here that allows you to realize a different sort of iSWAP gate. So this really just goes to say that the design of the hardware is going to influence what sort of two qubit gates that you have especially. Now at IBM, were using the cross resonance interaction. At a very high level, the way that this works is you have two qubits and youre gonna drive one qubit at the frequency of the other, and this will lead to a two qubit gate. In the next talk, Ill actually get into the details of how you use this interaction and how you can actually say build a C not V from such an interaction. Now, these are just a variety of different gates that you have. What I want to highlight is that theyre going to be imperfect in some way. And so this means that you have to actually measure them in some sense and measure the quality of your gate. Ill touch on two ways in which we can do that. One is this idea of randomized benchmarking. So the essence of randomized benchmarking is that you are going to take gates that are from a Clifford group. The reason that were using the Clifford group is that its actually easy to simulate and thatll be important in the sense that what youll do is youll apply a series of gates that are coming from this Clifford group. Because its easy to simulate, youll sort of calculate its inverse and then apply the inverse such that you ultimately get the identity. So whatever state you have coming in should be the state that you have coming out. Now, when you do this, if you have perfect gates with perfect qubits, you end up seeing say, if you started off in the zero state that you would always in this plot here, be sort of a boring, flat line up at one. However, your qubits are imperfect as well as your gates and then now youll begin to see that you became this way. And now, there can be a variety of ways in which you actually end up doing this randomized benchmarking. We have some resources that discuss some different methods that exist for randomized benchmarking. Here, just pointing out, there can be leakage randomized benchmarking which is a way to actually describe how much youve leaked outside of your zero one state into higher energy states. So if you try to make very fast pulses this can be quite important. If you wanted to characterize the quality of a specific gate, you can do this essence of interleaved randomized benchmarking where in between each one of these, youre going to interleave the target date of interest. And theres many others that in this space of randomized benchmarking. And a recent thing Ive seen being developed is this essence of cycle benchmarking where instead of taking from the Clifford group you take from the Pauli group. Now, this is a useful way to characterize gates particularly as it is robust to those spam error that I mentioned. But, I still want to point out a different way in which you can measure gates which comes down to this idea of quantum process tomography. So quantum process tomography and quantum state tomography ended up being equivalent in some sense. What that basically is saying is that I have some unitary that I wish to enact on my qubit or my system, but I want to actually test what, so I have the ideal of unitary that I wish to implement but I wanna test what unitary I actually end up implementing. To do this, you do quantum process tomography. The essence of this is that you are going to have a set of state preparations that you do and you going to have some measurements preparations that you do. So you always end up measuring and sort of your Z basis for your qubits but then theres ways that you can sort of map this to your X spaces or your Y basis. So for a Y qubit example, saying you are going to prepare these four different states here so your zero state, your one state, and then the sort of plus and minus states on the equator of your block sphere and then you measure into three different basics of X, Y, and Z. For a one qubit instance, this is going to require 12 circuits. When you go to two qubits, you actually end up scaling up to a larger number of circuits. This will be an exercise in the lab notebook to determine precisely how many you actually are going to do. But so, once youve done this, you can reconstruct the unitary that youve sort of implemented on your quantum hardware and something that we also will point out in lab is that this sort of quantum process tomography is very sensitive to those spanners. So when doing QPT, you definitely benefit from using readout error mitigation but once youve constructed this unitary, you can then get in the essence of what sort of quality gates youre having. Mainly its through this idea of the fidelity and what youre going to take, sort of the dagger version of the ideal unitary that you wish to have and multiply it by the one that you actually measured from your quantum process tomography. Then youre going to take the trace of the product of those two, and then normalized by the dimensions here. So this ends up giving you a value of one if youve done a perfect gate. Here, I point again to some resources where you can actually look at tutorials that exist for tomography of all sorts as well as some papers. So, say this is the Qiskit pulse paper where you can actually use, say, quantum process tomography to measure the coupling of strength between two different qubits say. And then this paper here is talking about some of the details of a quantum process tomography and how you can actually use it to measure the state of your qubit. So this is the conclusion of this lecture. Just as a quick recap, we reviewed different superconducting qubit architectures going from transmon qubits to tunable transmons to fluxoniums to zero pies or these sorts of bosonically encoded CAP qubits. Weve discussed this idea of circuit QED and how you can do a qubit readout within this space. And then weve touched on a few different errors that we have and how you can mitigate them as well as the fact that these errors are inherently something that will fluctuate over time. I hope that you enjoyed this lecture. Please do feel free to reach out with any questions. I believe there will be some sort of chat and Ill definitely be active within there. Thank you very much. I look forward to talking to you more soon. 