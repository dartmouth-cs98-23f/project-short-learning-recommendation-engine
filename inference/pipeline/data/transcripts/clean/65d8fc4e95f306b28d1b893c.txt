uses quantum properties like superposition and entanglement to perform computations but the quantum computers are being built are doing different things and are using different hardware so in this video lets clear up some terminology on universal gate-based quantum computers and quantum annealers talk about the different hardware implementations and the algorithms that these computers can run and cap it all off with an analysis of what makes a good quantum computer using the divincenzo criteria and ibms quantum volume and this is also you dont get fooled by silly pop science articles that talk about the sky is falling because weve gotten a certain number of qubits because remember cubic counts dont matter well okay so they do matter some but a handful of amazing qubits is way better than a million cubits that just dont work so just like gpus can process graphics information way faster than cpus certain problems can be solved polynomially or exponentially faster using quantum algorithms by exploiting these effects of superposition and entanglement but what is a quantum annealer and what can it do while they rely on the same quantum mechanical concepts annealers are really good for optimization problems where you can quickly search over a space and find an optimal solution for that you can think of this as looking over a landscape and finding out where the low point is an annealer does that quantum annealers are built for translating quantum unconstrained binary optimization or cubo problems analyzing problems onto quantum hardware efficiently the problems this can solve are traveling salesman scheduling problems optimal placement problems graph coloring problems and even solving games the d-wave machine is probably the most famous example of a quantum annealer its built using superconducting qubits which is a design based on having a cooper pair which is a pair of electrons or some other fermion with a josephson junction this is actually the same type of qubit thats used for many universal gate quantum computers so they also have this super cool gold steampunk chandelier looking thing which by the way is called a dilution fridge or a creostat this dilution fridge takes the superconducting chip and actually cools it down to temperatures below 15 millikelvin then this big box is actually shielding from electromagnetic interference achieved using a radio frequency shielded enclosure and a magnetic shielding since qubits are controlled by this frequency and are very delicate we dont want any outside forces interfering with them for example crosstalk when we try and affect one qubit but accidentally end up affecting another as well so that sounds pretty standard so far right its the same hardware as these universal gate-based quantum machines so what makes this a quantum annealer the layout of the quantum computer is absolutely the key for putting this cubo and icing objective functions into a format that d-wave can understand and doing so really efficiently binary objective functions can be looked at as graphs and these graphs can be translated onto the quantum hardware so you can take this optimization problem and you construct the hamiltonian equation we need to minimize you can represent it with this graph where the nodes are a and b with the weights corresponding to the equation and the edge between them a b with the weight 7. if this is a traveling salesman problem the 5 and 7 can correspond to the time they spend in each location and edge between is the distance between the city d-wave has a couple chip designs the chimera and the pegasus and the pegasus is the latest one this pegasus and chimera structure is optimized to take the graph problem and translate it onto the quantum chip so the chimera hardware basically takes these superconducting qubits and arranges them in a way that you have a unit cell of qubits so the nodes that we have in the equation are mapped to qubits and the edges are mapped to couplers so since were looking at it like a landscape physics says that everything wants to be in the lowest energy state configuration or the ground state the minimization of that function is the lowest energy state of the whole system so we apply a magnetic field to these qubits changing the superposition and controlling the probability of it being zero or one you can do the same thing with a coupler and that correlates these two qubits so what is the actual annealing part well in thermal annealing we use heat to raise the temperature of say some material when it slowly cools it wants to go back to the lowest energy state for quantum annealing instead of heat its quantum fluctuations we set up the quantum problem in a hamiltonian and it slowly evolves just like a heated up metal slowly cooling down evolves into its lowest energy state but you may be wondering if its more limited in the algorithms but is using the same hardware why would we even want to build this annealer the answer is is that the annealer is that much more efficient at solving these optimization problems than a quantum gate based computer is so yes this quantum computer thats universal gate based could do annealing hence universal but itd be a lot less efficient the opposite is true as well quantum annealers could do other algorithms but its going to be way less efficient than a gate-based quantum computer so what is universal gate-based quantum computing these quantum systems have a way broader application this system relies on building really reliable qubits we apply basic circuit operations or gates and put them together in any sequence to run more and more complex algorithms quantum computers however have their own set of gates that are very different from classical gates in classical computers we use gates like and not or nand xor and fanout to perform any computation however these gates are irreversible because we lose information in the process for example when we do an or gate we dont know if the first bit was one or the second bit was one or maybe both of them were one so we lose information in that process and the fanout classical gate requires the copying of a bit and we cant do that with quantum states due to the no cloning theorem so what can we do well theres a set of quantum gates unary one qubit binary two qubit and ternary three cubic gates and all these gates are reversible because irreversible gates will destroy the entanglement and superposition and we dont want to do that not until we want to measure the system so these one cubic gates like x y z hadamard and rotation gates change the state of one qubit the hadamard gate puts the qubit in an equal superposition of zero and one two cubic gates like the c naught can entangle two qubits the c naught gate bit flips the state of the target qubit if and only if the control qubit is in the one state theres also a controlled z gate which does a similar thing to c naught but applies a z gate instead of the x bit flip gate and theres also a swap gate to swap the states of two qubits there are also three cubic gates called the fredkin and to foley gates the fretkin gate is a c swap gate so its a controlled swap which means it will only do that swap if the control qubit is in the one state and the to foley gate is a c c naught gate which means it only does the bit flip if both of the control qubits are in the one state universal gate quantum computers are also coming in a lot of different hardware implementations some are made out of superconducting qubits like the ibm the google and the bleximo machines and others are made out of trapped ions like the ion q and the honeywell machines however other companies like psyquanum are focusing on silicon photonic qubits so will we be able to solve a problem on a quantum computer that cant be solved on a classical machine well we can actually simulate a quantum computer on a classical machine however once we get to 30 or 40 qubits it becomes really hard to do so because it takes so many bits but because a classical computer could in theory simulate a quantum computer of any size assuming they have enough bits that means no we cant solve something like the halting problem with a quantum computer what quantum computers can do is solve a certain set of problems faster but it cant solve everything faster so then a big question is a quantum annealer actually a quantum computer so the official definition of a quantum computer is quantum computers use phenomena like entanglement and superposition to perform computations so yes by this definition quantum annealers are quantum computers they are more limited in the scope of computations that they can do but they still exploit superposition and entanglement but just because its limited in the scope of algorithms that it can run does not make it not a quantum computer so i say that when you say quantum computer it can refer to both gate based and annealers however you cant efficiently implement shors algorithm on those annealers so that means if you want to do that you have to have a lot more qubits not even counting all the error correction ones and thats where a lot of the confusion can come in understanding the differences between gate-based quantum computers and quantum annealers gives you context on how the same types of qubits can give very different final results two thousand qubits on a universal gate-based quantum machine is likely more powerful than a quantum annealer with a lot of other factors being equal of course however once you start looking into these factors things can change really drastically the number of qubits isnt everything its just one factor for power but its definitely not the only one cubic counts mean nothing if theyre really poorly constructed its also not super helpful to you if you have a quantum annealer with more qubits but the algorithm that you want to implement on it is not very efficient but maybe you have two universal gate-based quantum computers but they have very different error rates that means youre likely to get way noisy calculations or maybe you cant even complete the calculation at all due to the amount of coherence time the chip has or maybe the topology so the way the cubes are connected to one another is so convoluted that you cant really make efficient circuits on it and theres also one other thing you should consider when comparing these cubic counts and the algorithm counts many algorithms show in theory how many qubits are needed for that calculation however in physical implementations of these quantum computers these qubits need air correction qubits and other processed qubits so when i say for example that rsa and elliptic curve cryptography can be broken by 2500 to 4 000 cubits im referring to logical qubits that algorithm may need 10 million physical cubits to actually run the shallowness and depth of the circuit also play a role in how many supporting qubits you need a shallow algorithm like variational quantum eigensolver will need a lot less of these supporting qubits so what is a bad qubit and what is a bad quantum computer we have the divincenzo criteria which talks about the physical implementation of a quantum computer also note this doesnt talk about what the quantum computer can do but just the physical details the implementation of the hardware itself and ill link the original paper down below in the description so the dimensions of criteria has five points number one we need a scalable physical system with well characterized qubits so we need physical qubits a two level system that can be entangled that we know the internal parameters of and that we can control number two the ability to initialize the state of qubits so we have to be able to put these qubits in initial states accurately a lot of error with initializing qubits to their beginning state means a lot of error down the road when we actually do the calculation number three long coherence times which are much longer than the amount that we need to do a gate operation the length of coherence or the amount of time that you want the quantum information to be stored needs to increase the more gates that you do number four a universal set of quantum gates for classical computers if you have a gate set thats called universal it means that when you put together those gates we can express any boolean function so for quantum computers its universal if we can approximate any unitary transformation a unitary transformation is a transformation that preserves the inner product which is a property of the hilbert space and number five a qubit-specific measurement capability we have to be able to measure individual qubits trapped ions and superconducting qubits do really well on all five of these divinchenzo criteria so thats why a lot of companies are using them but theres definitely other contenders theres others that we havent done a lot of research on so maybe in the future theyll be better candidates so first the cubes themselves actually have to be good but we also need to connect these qubits and have them work together so how do we measure the goodness of the whole quantum chip ibm has come up with a metric called quantum volume and other companies have started using it as well so quantum volume is a single number but it weighs different factors of the quantum chip to measure the performance it uses many more features of a quantum computer including number of qubits and gate and measurement errors and the crosstalk and the topology or connectedness of the quantum chip and this metric was introduced because the number of transistors like in a classical computer doesnt directly map to quantum bits qubits actually decohere or lose that quantum information very quickly a few super fault tolerant qubits with long coherence times that have good gait fidelities and are fully connected are so much more valuable than hundreds of poorly connected qubits with lots of noise and crosstalk so as you see with this quantum volume definition we actually see that the honeywell h1 has a higher quantum volume than the ibm 27 qubit machine so hopefully next time that you read an article about a quantum computing breakthrough you ask some really deep and serious questions whats the type of quantum computer whats the hardware what are the error rates and whats the topology so if you feel like this video is helpful to you please like this video i appreciate it a lot and subscribe for more videos on quantum computing coding and tech 