hey everyone good morning it's frost
here and welcome speakeasy js
the meetup for mad science hacking and
experiments
uh i'll be your host this morning so
glad you're joining us today
um that science is all about building
things that make people say i didn't
know that was possible
uh so today we're joined by nick uh i'm
gonna probably get your name last name
wrong sorry
doron uh is that right yes that's okay
amazing
great uh nice to have you here
yeah thanks for having me for us yeah of
course
so um so again i'm super excited that uh
nick is joining us today because
uh he is a full stack engineer and a
digital nomad
and he's been living out of airbnb since
2014 i just learned
and i think that is just wow that is
pretty cool yeah it's been great to
travel all over
and do you know when we're in tech we're
really lucky
we get to travel and work from different
places
um so it's been really good yeah
yeah that's super cool i um i i kind of
uh think well we've all been maybe some
of us have been doing some more
traveling than normal um
during uh during the pandemic um
but um yeah anyway that's super cool
super interesting fact about you
uh and yeah so uh we're gonna learn all
about quantum computing which i have to
say i know nothing about um so i'm i'm
super
excited to learn about that a bit and
then also how it combines with
javascript
yeah well yeah it's a great place to get
started with like
even if you don't know a lot about
quantum computing i'm not a quantum
physicist
i did not uh do like a computer science
degree in this or anything like that but
just coming into this as a web developer
and saying
what can i understand about this and
what can i do
in this very rapidly evolving and
changing
space of quantum computing
well great i can't wait to hear it so uh
yeah feel free to get started
yeah um cool so uh
title ready or not quantum computers and
js
a little bit about me and my day job uh
not to
ruin the mood with u.s politics but i
work in a redistricting
and anti-gerrymandering program uh for
people not outside the us we just
completed the u.s census
last year so all of the congressional
and city council districts are redrawn
to balance the amount of people in each
district i also some side projects in
natural language processing
and my kind of top hacker news link that
i've ever had is
fortran.io but we're going to talk about
quantum computers today
and my connection to quantum computers
definitely was entirely a side project
yet it's one of my side projects is the
most legs in terms of
it's the one thing i mentioned for in a
citation on wikipedia
and it got me into a conference at the
international
atomic energy agency in vienna uh
so that is such a bizarre
space and there's a lot of different
people working on this problem
that it's great to interact with them
during this
so quantum computing has been getting a
lot of interest a lot of hype
uh recently uh these are some headlines
that
i've grabbed over some time you know
google getting
um quantum supremacy so-called squadron
supremacy
and uh amazon also
for launching quantum computing service
china europe and the us each
investing over a billion dollars
in research into quantum specifically
so what are what makes people really
excited about quantum computing
so if you're familiar with moore's law
uh the idea is that over time our
computers are getting smaller
and better and cheaper all at the same
time that's how computing is moving so
rapidly
so you know the first generation was you
know the
like weaving looms and then vacuum tubes
and then transistors which we now use in
all these different chips
but now uh people who are researching in
transistors have made transistors that
are the size of
just a few atoms and that's the
theoretically
physically smallest that you can make a
transistor so we're hitting kind of a
wall there where people are wondering
what happens next how can more
law be continued and there are a lot of
different theories out there with
photons lasers
doing different three-dimensional things
but as you will recall the
topic of this talk is quantum computing
so i'm just going to focus on this idea
which is that quantum computing
could for particular applications be
much more powerful
and faster than classical computing with
transistors
and be an entirely new generation of
computer compared to
that same change from vacuum tube to
transistor
and the applications is useful for it
you probably wouldn't you know need to
run a web browser in a quantum computer
but it can be useful for particular
tasks
which even at a small scale would have a
great commercial application so these
are the top three
uh areas where i see the most interest
in quantum computing
one being simulating quantum chemistry
if you think about it
rather than simulating these molecules
and forces and things like that
inside of a classical computer and
dealing with all those possible
options and interactions it might be
more helpful to have
a computer have
quantum molecules inside of it
where those are interacting in a
particular way and doing computations in
a particular way
that is more native to that actual
problem space
the second one that i see i mean you
know whenever you see a few different
words together
like quantum blockchain ml together you
think this is just all hype
i don't want to listen to it but there
is an actual interest in eventually
doing some type of machine learning in
quantum computing because
it can be applied over a very large
function and so potentially be easier
it'll be easier for it to find the
absolute minima
and or absolute maxima depending on how
you're creating your function
and that would make it easier to use
these quantum devices to train
uh on this machine learning problem
i think the most famous one though which
um i don't know if people have heard
about this before
through in association with quantum
computing but seems to be the most
famous one
is that quantum computers can be used to
find
the prime factors of a number
much faster than
than classical computers where in
classical computers it's seen as a
exponentially difficult problem in the
quantum
computer it is a linearly difficult
problem
so problems which number uh
encryption which you can safely say will
not be cracked
with a classical computer um will
actually be somewhat easier to do in a
quantum computer
once we have a quantum computer that's
the right size we don't know when that's
going to be
probably in the distant future but it's
something that
you know we have to talk about because
it's it would be a huge deal if i don't
know
how people how familiar people are in
the audience with different kinds of
encryption algorithms
but aes ecc rsa these are all based
on uh
factoring prime numbers like both each
side has
the knowledge of the prime number so
they're able to communicate to each
other
but someone who's intercepting is not
able to factor it out
well in this case if you have the
quantum computer or if you're collecting
data now this is something people are
also concerned about
if you know you're going to have a
quantum computer in the future you might
be collecting data now
to decrypt later on the quantum computer
so
there's a real fear that problems that
we've relied on being complicated
will become easier once a large enough
quantum computer is
built and i should clarify this is not
the same thing as p
equals np those problems are not useful
for encryption because they're very
difficult to
for both sides to compute and the
quantum computer does not make that any
better this is just specific problems
that people have already
studied and come up with quantum
circuits that can help them solve it
so people have known about this for a
long time shore's algorithm which is
what this is based on
mostly was published in 1994
and uh the tom clancy novel night moves
in 1999 had a quantum computer as one of
the key
um key issue key plot points or
something like that
uh it's been a while since i looked at
it um
so people have known about this for a
while and said you know what there are
no quantum computers here
we don't have to think about it but the
time is getting
closer you know now there are actual
multiple startups major companies like
microsoft and google with
research teams we'll talk about how many
qubits they have now because that's a
little bit
controversial but now that people are
saying okay we have run a quantum
computing
problem maybe we should take this a
little bit more seriously
so some examples of how people are
responding to this
is in google chrome they have just
randomly selected some users
to encrypt their data with um
both the current like uh
aes encryption and a new kind of
encryption
called lattice-based encryption
which is believed to be post quantum
effective
uh microsoft has been advising companies
that have
their profits far off into the future
for example pharmaceutical corporations
there's so many let's say like even what
10 20 years of development into a drug
that you don't want those emails to be
decrypted
to be collected now and then decrypted
and used for some kind of espionage
in the distant future so microsoft
started advising particular industries
that they should look into this
post-quantum encryption already
and uh the national standards
organization for the us
nist is running a competition right now
where there's different competing
standards for post-quantum encryption
that they're evaluating and letting
other people look at
and this is a very tricky space because
one we don't have a lot of quantum
computers to test against
we don't a lot of quantum computing
experts to
look over the algorithms and you know
challenge
these different proposals and
also you can't just develop something
that's useful against quantum computers
it has to be useful against quantum and
classical computers
because you don't want to start
encrypting everyone's data for these
theoretical quantum stuff in the future
and in the process expose people's data
because you used a brand new algorithm
that hasn't been fully vetted
so they're trying to find the right way
to experiment with it and not have like
a performance loss
or build systems that will become
outdated and vulnerable in the future
so the problem one which i think we
talked about a little bit in the
beginning
is richard feynman famous physicist said
i think i can safely say
nobody understands quantum mechanics
which is to say that
there isn't you know like a little toy
kit like you can get a kit that gives
you like little circuits and kind of
learn a little bit about oh
electricity goes in the circuit and you
play around with it there isn't like a
physical analog
that you can play around with with your
hands that covers
the intricacies of quantum mechanics
quantum chemistry things like this i
don't really expect as a programmer that
i'm going to understand it in the same
way that
you know if i were on a desert island
with a chip fab i wouldn't be able to
say okay
i'm gonna learn how to put together
transistors and learn how to put
together
chips and learn how to put together a
cpu and learn how to make it start
running javascript
because there's so many steps in between
that
physical level and the
application if i'm just a developer on
the end point
maybe i just need to know what are the
useful applications and
what is really going on in there like
how people are programming it today
um so the one thing i would say that
would be a good thing to look into
if you're trying to understand this
space is there's something called the
block sphere which is how people
represent
each qubit so in classical computing
you have bits that add up to a byte and
so on
in the quantum computing
you have qubits and sort of the popular
news story thing to say is that they're
both zero and one and they could be
both zero and one that makes you wonder
like what's the usefulness of something
that you don't know
if it's zero or one what's the
usefulness of that so
what was really helpful to me to read
more about this is that
there's uh they're not really zero or
one randomly
there is a probability space that these
are in
so you could draw it as a function you
can draw it as this kind of sphere
and that's the probability that
what so it's in this quantum state right
now and
if something that is not in
superposition
okay so it's in superposition right now
if something is not in superposition
hits it then it will resolve into
a zero or a one so typically what's that
is that's done with um shooting them
with a laser pretty cool
and then it'll resolve to zero or one
and then if you run multiple experiments
you'll say okay ten percent of the time
it was zero
ninety percent of the time it was one
and you can use that to represent
what was its probability state at that
point of the program
um so not fully easy to understand
but this was the part where i understood
okay it's not just like a random number
that we're trying to get value out of
in fact there's a one thing i read that
compared it to more like
analog like pre-digital computing
because it has a value
that is not neither zero nor one but
more of like a probability
function or wave and that wave can be
shifted
that wave can be modified and then
when you have multiple qubits that are
in superposition
you can entangle them in some way so
that if this could be
a few different options and this can be
a few different options you can cross
them
or entangle them and now you have
you know multiple interactions happening
in that
probability space and then you you know
you run the program multiple times you
shoot the laser to measure it
and then you come up with a
representation of what was the final
probability um yeah problem two
uh the hardware uh to run this if you
imagine that
if anything hits something that's in
superposition it's gonna drop out of
superposition
you can't have this be in open air
so something like this that you might
see a picture in the news
they put it inside of a vacuum they cool
it down to absolute zero
so the molecules aren't moving around
like that they sometimes use lasers to
shoot them
into not moving around so much called
something called laser cooling
um so long story short you're not gonna
have a quantum computer on your desk
like if you have a lab where you might
have a absolute zero freezer
maybe it's possible but these are always
going to be or for the near
for the foreseeable future they're going
to be extremely complex
devices that are used kind of as in a
cloud computing center
and you interact with them over the web
uh
i should uh yeah okay um so how many
qubits uh right now
if you look at wikipedia they're saying
the top one is 76
quantum computing or superconducting
qubits uh so when that number gets up
into the thousands then and they're all
entangled with each other
then there'd be an encryption issue so
that's why it still feels very far away
um and you can also see these are from
2018 2020
these numbers are not going up
exponentially right now it's very
difficult to figure out how to build
these
how to make them work reliably and then
also you actually have to physically
design the chip
so that they can connect with each other
so there's like a topology
of building the gates in between each
qubit
in the chip i'll also say that there's a
company called d-wave
which will say that they have hundreds
of qubits and they do but
those are a different kind of qubit
through quantum annealing so you can't
compare different hardwares to each
other
based on that number so they're useful
for other applications but it's not
it's not the same number that they're
comparing apples to oranges in that case
um so like i talked about earlier you
program bits by
connecting these bits together with
gates
and coming up with some kind of
processing out of that and then
eventually you have assembly compilers
and then javascript
in the quantum world you have the qubits
they're connected by these
quantum gates uh right now a lot of
development like i said is going into
the hardware
and topology of the chip then even if
you have multiple qubits
uh those are like the physical qubits in
the sense
there's a problem which is there's a lot
of noise and there could be errors
in digital computing we know how to do
error correction in like connections
in quantum computing you can't do error
correction
against uh something as out of
against um a classical bit because
to measure a value you have to take it
out of superposition
so in order to make a qubit that can
correct
for errors you need to have multiple
physical qubits in connection with each
other
that so this is like a theoretical thing
that hasn't actually been
tested built and tested yet but it could
mean that even if we have a hundred
physical qubits you might have 10
logical qubits or error corrected qubits
so
there are a lot of algorithms being
developed but the number of qubits we
have is very small
and noisy so these algorithms are not
like
ready to run so how long is it until you
can run something like node
uh just probably not it's just so
different
the way that people are writing programs
for quantum computers right now
mostly in python these are two different
libraries
uh you say that you're going to build a
circuit that has in this case two qubits
and then you specify the particular
gates like this is
like down to the assembly and gate level
design of your program and then you run
the measurement
and then like i said before if you look
at the bottom it says trials equals 10.
i'm saying do this program 10 times and
tell me what were the
distribution of results uh the first
attempt that i did to work in this space
was
uh so righetti computing which is a
startup that has a python library i sort
of
cribbed off of their python library to
make a javascript library called js
quill so they have pi quill and minus js
quill
and like you could you can see it's a
pretty similar
idea of i'm going to make a
quantum program i'm going to add these
particular gates
to these particular qubits and then
measure
and run based on that
so that came out i want to say 2017
yeah yeah so i was able to put that in
2017.
this is um linked the link that i have
on wikipedia
from somebody it was really interesting
i still get
interested in that to this day but i
want to rewrite it
uh because there's many other
quantum computing providers right now
from microsoft and google
they're running their own cloud quantum
computer even with these small number of
qubits
they don't always call their gates the
same thing
and there also have been some changes to
the api
i also have a bad habit of like just
kind of hacking something together
and not testing how everything worked
out so i wanted to rewrite it in
typescript which was really big
whenever i was thinking about this a
couple years ago
just to give you an idea of how similar
these things are these are three
different libraries
but you can see they're all the little
box they wrote they're all doing the
same thing they're doing an
h gate a c x or c naught gate
and then they're measuring something so
why are there these three different
python libraries that
are written differently and really i
could probably write something that
um in in javascript that would compile
down into each one of these because
they're all doing very similar things so
the library ended up creating it's
called quantum peep
my pitch for it was right once run
anywhere
so that same program you were looking at
earlier in python
there's an x gate a c naught gate and
then you
do the measurement and then on the right
column you'll see that i can compile it
to
quill which is the righetti program q
sharp
which is the uh
microsoft assembly type language and
chasm which
i believe is the ibm type assembly
so these look very different but you can
build your program in the same way
um so
you can do this kind of compatibility
of however whatever you're familiar with
writing and then run it on another
platform
the road ahead uh this is my last slide
uh adoption is very slow ibm even
had their own javascript library called
kiss kit js
and now they've just completely gone
over to python since that's what
most scientists are using i still see a
lot of people
interacting with js quilt i archived it
and told people that quantum peep is
more
is newer and more compatible um but
people don't really seem to see that
they just want to find some
javascript quantum thing uh we don't
have like a hello world program where
people can run it like you know with
arduino you run a program and the light
blinks and you think okay i know how to
code
with this we don't really have like a
getting started with quantum computing
like this is basically the the world
this like create a gate
and then do a c naught get a controlled
knot gate like this
um people don't really feel inspired by
it they're like what am i doing what's
going on here
um so it'd be great if we got enough
qubits that people could do like a
really interesting
quantum random number generator type
experiment that was interesting to them
is like a hello world
problem also talking about the dangers
of
post-quantum encryption or dangers of
quantum computers
and need for post-quantum encryption at
the international atomic energy agency
was one of the greatest experiences of
my life you think there was like a
one percent chance they contributed one
percent to preventing a small
nuclear exchange i think it was the most
impactful day of my life if you think
about it
that way um but yeah if you just a
little
pitch if you can get involved in any
kind of uh program that
helps control nuclear chemical
biological or ai
weapons in our field you
even if there's a small chance that you
can help a little bit it can have a huge
impact on our livability of our future
not to like put us into a weird mind
space but it's it was really interesting
meeting those people and finding out
what they're working on
so i wanted to make a little pitch for
them so yeah
this is the node module uh this is my
github and twitter is not meld
and we went through this very quickly so
i'd be happy to talk in more detail
about
uh some of these uh quantum
programs and how to kind of wrap your
head around it
thank you so much nick that was amazing
uh thank you
appreciate it so um if you have
questions now you can ask them in the
chat and i'll relay them to
nick and we'll have a little bit of time
for
yeah for questions before we go to our
social uh
happy hour on the rambling platform
um but yeah i i think um i guess
my first question is have you have you
used quantum peep for anything
interesting
uh yourself like what are the were those
interesting programs or
things you've done with it i was really
happy when
they had a uh rigetti had a uh
and ibm both had a thing where you could
run against an actual quantum computer
because they will host a simulator and
then occasionally they'll allow people
to run
a program against an actual quantum
computer and
you know goes into a queue and then it
runs it and then emails results back to
you
um that was really exciting that
you know i was able to write something
you know in javascript at home
and then like run it and then get back
something that someone actually built a
quantum
computer somewhere because definitely
like five years ago
the thought was do quantum computers
even really exist
maybe there are a few qubits people have
built and tested so
to have it be so readily available on
the internet and
um that was really i feel like it's good
it made it
seem so much more real at that point um
but no nothing
i'm not like i've interviewed at a few
places that are doing these more
professionally
um but i haven't had this kind of um
you know a problem where i thought oh i
need to use a quantum computer for this
yeah that it does seem like that is the
stage that things are at but um
but i i totally get the excitement about
knowing that you wrote code in
javascript and eventually later ran on
on a real quantum computer that's super
cool
yeah so so um have you have you got a
sense for
um what people are using the library for
do you know who like has anyone kind of
um anyone interesting kind of like made
issues on the github issue tracker
uh or um like are there any secret
agencies
using it i always get a little nervous
when i get a github star from
uh someone in a country where the us is
not supposed to be doing
technical business with um
so that's always a little exciting but i
really encourage everyone to do it
because right now it's just
it's a physics problem it's not like i
don't really believe it's something that
needs to be kept secret
um what i would say about it is i
don't think i think most scientists are
just using the python thing because
that's a very sciency kind of thing to
do it's very like a lot of researchers
are doing that
um so i think
really where this is what is happening
with this and why there's no
compatibility between these different
python libraries either is there's this
thought that
if we convince researchers to use our
tool
kit now there'll be this buy-in and the
future when they do
larger scale commercial quantum
experiments they're going to be more
partial to this
company and their platform so it's
really like
another cloud computing war over which
cloud computing provider is the best
but then they also control how you
program the computer
um so i hope that there can be more of a
generic thing
and amazon bracket
i mean they have their own quantum
computer team so i'm not sure what's
going on with that
um but they do have some kind of similar
cross-platform abilities for a few
different providers
this seems a little bit similar to uh
nvidia's
cuda framework uh that's proprietary and
how like they kind of
for a while i remember like there were
even classes at stanford that
went when i was there that were
specifically like teaching you cuda this
you know this proprietary
framework and then later on when um amd
wanted to like
get into the space they i think they
were the ones who created opencl which
is like the open source version of cuda
and um you know they have it's funny
like the the company that's behind
howells has an incentive
to create like an open source
uh you know framework or standard for
the for things because it just benefits
them to
to to convince people that this
proprietary thing is bad they should use
the open thing and then um
but anyway so i i don't know what the
state of like
like that kind of computing is i think
opencl is pretty pretty popular but i
don't know how
um yeah like whether it's overtaking
cuda or or what
um but uh yeah it sounds like it's just
a similar thing playing out again
in quantum and these companies are yeah
hoping that you're gonna
you're gonna like choose their um their
library and get get sort of locked into
it
yeah so so were there were there any
things you couldn't
um you couldn't do like uh easily across
uh that like were there any sort of i
guess uh things that were so different
like operations or was instructions that
were so different that you couldn't
make something unified yeah the one
thing that
i had a heck of a time trying to figure
out was
there's particular gates that you give
it and
a number the parameter that you give it
is the gate
and a particular number of degrees or
radians
and then i found out in one case if you
send it
let's say you send it 0.25 then that
means like
pi fourths radians right which is a
normal number in math
but then i'm trying to think okay if
someone writes
one-fourth in my code should i multiply
that by pi
should i turn it into radians and
degrees or how should i represent it and
then how do i write it
into the code and they don't have there
it was really tricky finding examples in
their own documentation to know whether
it was expecting it to be
a number or a
number to multiply pi by or you know
just even finding something like that
the documentation is not very easy
and then they assume that you are a
quantum physicist
so it's like a what kind of gate i have
to look up
did are these names meaning the same
thing
um things like that um
yeah i'm curious like i i think maybe
you explained a little bit at the
beginning but maybe you could talk more
about like
how do you how did you get into this
project like and how do you maybe more
generally choose which projects to work
on
because it sounds like you mainly maybe
you didn't have a specific use case in
mind when building this so
um you just yeah i'm just curious to
know more about why you've
gone so deep into this area yeah so
uh not not to make a whole thing about
blockchain or anything
but 2011 i'm in uruguay working on one
laptop per child
and i read an article about bitcoin i
thought oh interesting and i talked to
somebody about it
and you know it was ever and you know
now that person i talked to about it
they invested maybe like you know 30
bucks into bitcoin and now they have you
know
tens hundreds of thousands of dollars
right based on that whereas i was just
like oh that's really
interesting i was like thinking about it
just very theoretically of like i need
to have this in my
mental model of how the universe works
or what people are doing but i never
thought
i literally should spend a day on this
and find out what people are talking
about and as a result
i didn't really think about that until
you know years later when i'm saying
okay now i really should pay attention
to this
so now for me when i'm hearing about in
this case quantum computing
um i was also interested in um fortran
for a little bit
i was like that's something i've heard
of i know that some people are still
using it that there's like some kind of
problem in finding people who understand
this so
maybe i should understand this in case
it becomes more useful
and no kidding one of the
things i got on linkedin when i
interviewed with a quantum computing
company they
contacted me on linkedin and said
javascript and fortran we used both of
those
at our quantum computing lab and i was
like really
like how could it possibly be but you
know they're doing that like low-level
very fast monitoring of their hardware
so they needed something that was like c
or fortran
or something um so it's interesting to
think about
finding these particular niches i never
finished my undergraduate degree
so for me it's always been finding a job
through
they're like oh how could we ever find
somebody to do this particular thing
with mapping or quantum computing or
something
and then that really goes a long way to
getting in the door of saying like oh
yeah i know a little bit about this i
haven't
done it in production but you know so
and such and such
yeah so is there a public simulator
uh or something like that to try out
that someone's asking in the chat about
like
is there a way they can try it yeah i
saw that question um so
ibm i think still is running like a web
ui where you can put together
a program in the ibm language and then
run it and get some info back and it has
a
little ui there amazon bracket
you have to um there's a a
a write-up on aws docs which explains
you have to invite
their quantum user as a permission on
your notebooks or something
but then you can write something in the
sagemaker notebooks on amazon
as for my own thing i used to have just
a quantum simulator
running in the cloud and then when you
um use the app or not use the app when
you use the library
you could send uh your program to that
but i i don't believe that anyone was
really using it sort of felt like why am
i
you know running this i really think
that
the company that open source that
simulator used to have one running all
the time
and i really think they should keep that
going because it was always
like that was that greatly reduces the
barrier to entry
is if someone is running a simulator
somewhere even with a few
simulated qubits so you can just say
okay i'll send you this
and then does that run does this work
how do i
structure my request or my program to be
like the
library um because that that part of it
isn't documented very well
so you can simulate a small number of
qubits it sounds like but um
but like at what point does it make is
it impossible to simulate like is it
is it um are there are the actual
quantum computers
that um you know have these small
numbers of qubits are those simulatable
or does it quickly get out of hand yeah
so the number
i had heard before with something on the
order of like 50 or 60 qubits
that are entangled with each other you
would then need
the most like the most powerful
classical super computers when you get
up to the point so we now have quantum
computers that do that
at the end of 2019 google did the first
what's considered to be the first um
quantum supremacy experiment where they
were able to do something
in quantum computing which would have
taken
multiple you know weeks to simulate on a
very large
a super computer the thing that's a
little bit sketchy about it
is they invented a problem it wasn't a
practical
problem where they were like trying to
do some material science or something
they said oh if we had this particular
question of you know this distribution
of numbers
like they designed an experiment
specifically so that it would be easier
for
a quantum computer to do it and then
ibm's team because they didn't want to
be seen as being second
at quantum supremacy ibm's team said
actually you could do that experiment
with like doing this with your classical
file system on a supercomputer
so they had a really interesting
dialogue about
what is possible to do for this problem
and whether it makes sense to
talk about this problem when it's not
really a problem that real people have
it's more like designed to be you know
who can
compute this better um
so then there's since then there have
been other problems like this that
people have created and done a quantum
supremacy experiment
and um i think there's just like two or
three
examples that are published that people
have done this
um but it's really interesting to think
about that
um eventually i guess that's the first
step towards
finding a problem which is useful and
is would be cool to get the quantum
computer doing it faster than a
classical one
yeah cool well i think that's all the
time we have questions for
uh for now is there anything else you
want to tell everybody before
we go um
um no nothing in particular um i did see
a couple questions asking
you know is this the end of you know
encryption and privacy and secrecy
um i mean i'm hopeful that the
post-quantum encryption methods that
people proposed
can be evaluated by nist and various
researchers and then people can
come to some conclusions about how
useful they are
and i i think it's just more of like an
accident of how we
designed a decrypted encryption in the
first place we never us
we never figured that there would be
this kind of uh
other hardware that would come out and
make it uh
obsolete in the future so it's more like
we need to have this uh
transition over but if you think about
like something like ipv4 to ipv6
even if people know it's coming for
years and years and years you're you're
still gonna have people not knowing
what's going on or how to implement it
and
it's it's definitely something that is
going to be over multiple years people
figuring out
you know is our system compatible are we
ready is this causing some kind of
additional problem
but i'm optimistic about it for sure
cool well uh thanks so much for uh
making this understandable for us
today and uh for making this library and
uh
just explaining that yeah like letting
everything out in a way that's
surprisingly understandable so i
appreciate that
yeah thanks for hosting yeah of course
