second,duration,transcript
0.43,9.97,[Music]
10.4,2.64,In this video I will try to give a broad overview of
13.04,2.719,how a computer works from the ground up.
15.759,1.641,Subtitles are available.
17.4,2.1,"It will get a little bit technical,"
19.5,1.5,but I will try to keep things
21.0,1.0,as simple as possible.
22.0,1.68,There will be a summary at the end of
23.68,2.08,every section and links to further
25.76,1.599,explanations in the description.
27.359,2.381,Hopefully this overview will teach you
29.74,1.42,something new or give you a new
31.16,1.32,perspective on things.
32.48,2.0,Probably nobody in the world knows every
34.48,2.079,single nuance of how a computer is built
36.559,1.201,and operates.
37.76,3.16,This is why when you hear this sound
40.92,2.2,[Beethoven's 5th symphony]
43.12,1.759,that is a warning that I am making
44.879,1.841,massive oversimplifications
46.72,2.319,which I'm sure you'll point out to me in
49.039,1.761,the comments.
50.8,2.0,[Beethoven's 5th symphony]
52.8,3.599,That was the warning for the entire video.
56.399,4.721,[Music]
61.12,2.239,Modern computers at their core are
63.359,1.44,electrical circuits.
64.799,1.921,A very simple circuit might consist of a
66.72,2.24,"battery connected to a switch,"
68.96,1.76,"then a light bulb, then back to the"
70.72,2.719,negative terminal of the battery.
73.439,1.921,Modern computer components typically
75.36,3.2,supply a voltage of 3.3 or 5 volts
78.56,2.32,between the positive terminal and the
80.88,1.68,ground or negative terminal
82.56,1.44,if you like to think of it that way.
84.0,2.4,Computers treat information as binary:
86.4,1.6,"on or off, true or false,"
90.56,0.38,"one or zero, based on if the voltage is"
90.94,2.98,high or low. The important component in our
95.52,1.76,circuit here is the push switch which
95.52,1.76,comes in two flavors.
97.28,1.76,push to make that's when a person
99.04,1.92,presses down and the circuit is
100.96,1.04,completed between the two terminals
102.0,1.5,and the bulb lights up.
103.5,2.02,The push to break
105.52,3.2,switch is exactly the opposite.
108.72,2.64,This is the symbol for a transistor:
111.36,1.039,"more specifically, it's a"
112.399,1.601,Metal Oxide Semiconductor
114.0,2.0,Field Effect Transistor
116.0,3.68,or MOSFET. Its source and drain
119.68,2.399,"are like the two terminals of a switch,"
122.079,2.961,but it has a third terminal called a gate.
125.04,2.16,just like switches there are two types:
127.2,1.6,the N-channel type
128.8,2.0,makes a circuit when a high voltage is
130.8,1.28,"applied to the gate,"
132.08,3.12,like a push to make. The P-channel breaks
135.2,2.0,the circuit when a high voltage is applied
137.2,2.58,like a push to break.
139.78,1.179,"So, transistors act like switches"
140.959,1.601,except instead of a person pressing it
142.56,1.92,down a voltage is applied.
144.48,2.0,"In modern computers, these types of"
146.48,1.68,transistors are used in pairs
148.16,2.4,referred to as CMOS or Complementary
150.56,2.48,Metal Oxide Semiconductor.
153.04,2.0,The gate terminals of a given pair are
155.04,1.36,always connected together
156.4,2.8,so they receive the same input.
159.2,1.679,Here is a simple example:
160.879,3.44,if we apply a high voltage or 1 to the input
164.319,2.481,the N-channel MOSFET opens a route
166.8,2.079,between high voltage and the output.
168.879,3.281,The P-channel closes the root to ground.
172.16,2.64,If we apply a low voltage or 0 at the input
174.8,4.079,the P-channel opens a path to ground.
178.879,2.0,"OK, so this circuit seems pointless we got the"
180.879,2.64,"same thing at the output as we did at the input,"
183.519,2.72,but let's swap around the two MOSFETs.
186.239,2.401,"Now, when we apply a high voltage or 1"
188.64,1.04,to the input
189.68,3.76,the N-type opens a route to low voltage or 0.
193.44,2.159,When we apply a 0 to the input we get
195.599,2.161,a 1 at the output.
197.76,3.04,"Whatever we put in at the input, we get"
200.08,1.92,the opposite at the output.
202.0,2.159,Later we will come back to
204.159,1.601,how this forms the basis of all
205.76,2.96,modern processors. Understand that it is
208.72,2.879,vast networks of CMOS pairs like these
211.599,1.401,which allow computers to think.
213.0,3.239,[Beethoven's 5th symphony]
216.239,1.841,"For now, let's see how transistor"
218.08,2.799,networks are made in basic terms.
220.879,2.161,Silicon is a semiconductor with four
223.04,1.36,valence electrons
224.4,3.04,"which is doped, or mixed with, other elements."
227.44,2.32,"Gallium, for example, has three valence"
229.76,2.16,"electrons - one less than silicon,"
231.92,2.6,hence more positive or P-type.
234.52,0.999,"Meanwhile, an element like"
235.519,2.481,arsenic has five valence electrons
238.0,1.36,"- one more than silicon,"
239.36,4.4,"therefore adding a negative charge, hence N-type."
243.76,1.44,Trace amounts of these elements
245.2,2.16,typically one for every million silicon
247.36,1.12,atoms or so
248.48,2.319,are implanted by chemical diffusion or
250.799,3.281,by firing them out of a particle accelerator.
254.08,3.999,Transistors are made by sandwiching a
256.16,1.919,region of one of the dopants between
258.079,2.481,two of the other. Let's look more closely
260.56,2.24,at the N-channel configuration.
262.8,2.0,"This by itself does not conduct electricity,"
264.8,1.76,but when an electric field
266.56,3.199,is applied to it
267.52,2.239,"a conducting channel forms, hence the"
269.759,2.081,name: Field Effect Transistor.
271.84,1.68,This can be thought of in simple terms
273.52,1.6,as the electric field attracting
275.12,2.0,"electrons from the N-doped region, which"
277.12,2.0,"has a surplus, to the P-doped region,"
279.12,1.44,which has a deficit.
280.56,2.16,Near the semiconductor stack we have a
282.72,1.84,conducting electrical terminal.
284.56,2.16,"When it's at high voltage, an electric"
286.72,2.38,"field forms and the transistor conducts,"
289.1,2.74,but to stop a short circuit
291.84,1.84,we need to add an insulating layer
293.68,2.48,"between them. The contact is metal,"
296.16,3.28,the insulator is silicon oxide and finally
299.44,2.24,"we have the doped semiconductor,"
301.68,2.16,hence the term MOSFET.
303.84,2.0,For a computer we need millions of
305.84,1.919,interconnected CMOS pairs
307.759,1.681,and they must be small and close
309.44,2.16,together so that electrical signals can
311.6,2.159,travel between them quickly.
313.759,1.921,Making a processor typically begins with
315.68,2.16,a solid block of P-doped silicon
317.84,2.4,called a die. Transistors are then
320.24,2.16,created on top of the die by a process
322.4,1.68,called lithography:
324.08,3.92,"writing on stone"". There are two main"
328.0,3.12,techniques used in lithography.
329.919,1.201,The first is deposition:
331.12,1.6,chemically building up a layer of
332.72,2.08,"controlled, predetermined thickness"
334.8,1.8,across the entire die.
336.6,2.2,"This means that, for example"
338.8,4.64,N-doped silicon can be coated all over
340.96,2.48,the top of the P-doped die.
343.44,1.92,Unwanted surface material is then
345.36,1.76,removed by a second technique
347.12,3.12,called etching. This is done by applying
350.24,2.64,chemicals or hot plasma to the top of
352.88,2.8,the die. several steps are taken to ensure
355.68,2.16,that the etching is targeted at specific
357.84,4.4,areas and therefore material is removed selectively.
362.24,2.16,A chemical termed a photoresist is
364.4,2.239,deposited onto the die.
366.639,2.961,light is shined through a mask exposing
369.6,2.879,predetermined areas of the photoresist.
372.479,2.321,The exposed areas must be the same size
374.8,3.2,"or larger than the wavelength of light used,"
378.0,3.199,hence very short wavelength ultraviolet
381.199,2.72,light is used for the lithography.
383.919,1.84,A special etching method is used to remove
385.759,2.081,only regions of photoresist which were
387.84,2.32,exposed and nothing else.
390.16,2.879,This opens up gaps in the photoresist
393.039,2.16,and then another etching method is used
395.199,2.161,which targets everything except the
397.36,2.32,unexposed photoresist.
399.68,2.079,"Finally, the remaining photoresist is"
401.759,1.44,etched away.
403.199,2.401,"As a result, material has been removed"
405.6,2.96,wherever there are any gaps in the mask.
408.56,2.16,The two techniques of deposition and
410.72,1.84,etching used in conjunction
412.56,2.4,mean that the N-type dopants for all the
414.96,1.76,transistors on the die can be added
416.72,1.52,simultaneously.
418.24,3.28,"Next, the silicon oxide is deposited and etched"
421.52,2.16,and finally metal is deposited and etched
423.68,2.16,away to leave metal channels on top of
425.84,0.72,the die.
426.56,1.919,These metal features form not just the
428.479,1.201,conducting terminals
429.68,2.16,"of the transistors, but also the tracks"
431.84,2.16,equivalent to wires in a circuit which
434.0,2.88,connect the transistors as required.
436.88,2.64,"Every time, photoresist is deposited,"
439.52,1.679,"exposed through a mask,"
441.199,3.681,gaps are made and a die is etched.
444.88,1.439,"Finally, the billions of transistors are"
446.319,2.0,assembled and connected together by this
448.319,0.641,method.
448.96,2.56,There may be three CNOS pairs with three
451.52,0.959,different inputs
452.479,2.16,then going out to four different CMOS
454.639,3.361,pairs somewhere else and so on and so on.
458.0,2.4,[Beethoven's 5th symphony]
460.4,2.32,To summarize: computers handle
462.72,2.0,information as ones and zeros
464.72,2.24,when voltage in an electrical circuit is
466.96,1.44,either high or low.
468.4,2.239,"Transistors act as electronic switches,"
470.639,1.68,changing between these two states.
472.319,1.521,The transistors always come in
473.84,2.32,"complementary pairs, so when one half of"
476.16,2.12,"the pair opens, the other closes."
478.28,2.84,Lithography is the
479.52,1.6,process by which huge numbers of
481.12,2.0,interconnected transistors are built up
483.12,1.12,on a block of silicon.
484.24,6.239,[Music]
490.479,3.12,To understand why transistor networks are
493.599,1.521,"useful, we need to talk about a branch of"
495.12,3.4,mathematical logic called Boolean algebra.
498.52,1.0,Rather than go into
499.52,2.32,"the full gory mathematical details,"
501.84,1.68,I will just illustrate the basic
503.52,1.84,concepts with some not too
505.36,2.64,serious examples. Let's say some friends
508.0,1.84,are choosing a restaurant.
509.84,1.68,Alice is happy when the restaurant
511.52,1.439,serves burgers.
512.959,1.681,Bob is happy when the restaurant does
514.64,2.079,not serve burgers.
516.719,1.76,We can think of evaluating restaurants
518.479,2.081,in this case as something called a gate:
520.56,2.56,an object which takes a binary input
523.12,4.48,"true or false, 1 or 0 and returns a binary output."
527.6,1.679,"In this case, the input is whether the"
529.279,2.081,restaurant has burgers and the output
531.36,3.2,is if someone is happy with the restaurant.
534.56,2.56,For Alice the gate is simple: the output
537.12,1.36,is the same as the input.
538.48,2.479,In electronic terms the circuit is just
540.959,1.281,a connection.
542.24,2.56,For Bob the gate is what's unimaginably
544.8,1.28,called a NOT gate.
546.08,2.8,This is a symbol typically used to
548.0,1.08,denote it.
549.08,1.64,In the previous section we have seen how
550.72,1.28,this CMOS pair
552.0,2.959,acts as a NOT gate. Let's consider a more
554.959,1.681,"interesting example, when the logic gates"
556.64,1.12,can have multiple inputs.
557.76,2.4,Such gates have pretty
560.16,2.16,straightforward names as we'll see.
562.32,1.44,Now the friends are choosing restaurants
563.76,2.32,"which might serve pizza, noodles,"
566.08,2.56,both or neither. Alice is happy when the
568.64,2.24,restaurant serves at least one of the two
570.88,2.399,options or both. This idea is represented by what
573.279,2.361,is called an OR gate. This is the symbol.
575.64,1.96,"Bob wants choice, so he"
577.6,1.12,wants both pizza
578.72,3.28,"and noodles on the menu, hence the AND gate."
582.0,1.76,Charlie likes it if the restaurant
583.76,2.639,serves pizza or noodles but not both:
586.399,1.601,let's say she thinks that they wouldn't
588.0,1.2,do a good job if they weren't
589.2,1.36,specialized enough.
590.56,2.0,The corresponding gate is called
592.56,1.279,exclusive or
593.839,2.56,XOR for short. Each of these gates also
596.399,1.361,has a complementary gate:
597.76,2.4,basically the same gate with a NOT gate
600.16,1.52,after it. For example the
601.68,2.64,NAND gate gives a 0 when all its
604.32,3.68,"inputs are 1, and gives a 1 otherwise."
608.0,1.6,These complementary gates are denoted by the
609.6,2.799,usual symbol with a circle at the output.
612.399,2.401,"For a computer, these and all other"
614.8,1.36,possible gates must be
616.16,2.48,implemented through CMOS pairs.
618.64,2.08,Connecting two pairs as follows creates
620.72,1.28,a NAND gate.
622.0,2.64,The N-channel and P-channel transistors
624.64,1.6,still work in pairs.
626.24,2.24,Only when a high voltage or 1 is
628.48,2.0,applied to both pairs of inputs do the
630.48,1.919,paths to high voltage close
632.399,3.281,and the path to ground opens so
635.68,2.48,a 0 is output. This is exactly the
638.16,2.16,behavior of a NAND gate.
640.32,1.84,The NAND gate is important because it's
642.16,1.52,what's called universal:
643.68,2.0,this means that any other gate can be
645.68,1.44,created out of NAND gates
647.12,1.6,as long as there are enough of them.
648.72,1.52,"Now, there are more efficient ways to make"
650.24,1.68,"certain gates, but in essence this means"
651.92,1.599,that the problem of implementing logic
653.519,2.801,gates through CMOS pairs is solved.
656.32,2.4,"There are also gates with three, four, or"
658.72,2.0,as many inputs as necessary.
660.72,2.239,"For example, take two AND gates connected"
662.959,0.801,as shown here
663.76,1.92,and they simply become a three input AND
665.68,2.44,gate and so on and so forth.
668.12,1.959,[Beethoven's 5th symphony]
670.079,2.801,To summarize: logic gates are conceptual
672.88,1.76,mathematical objects which allow us to
674.64,0.96,make deductions
675.6,2.88,based on binary true or false statements.
678.48,2.799,For example if it's true that today is Saturday
681.279,3.12,"or today is Sunday, then it's also true that"
684.399,2.241,today is the weekend. We have now seen how the
686.64,2.4,CMOS pairs from the last section can be
689.04,1.68,used to practically implement these
690.72,4.48,gates in terms of electronic binary logic.
695.2,4.639,[Music]
699.839,2.081,Now we shall see how computers handle
701.92,1.039,numbers and use
702.959,3.12,logic gate networks to do arithmetic.
706.079,2.241,We are all used to base 10 numbers
708.32,2.959,meaning that there are 10 digits from 0 to 9.
711.279,2.161,The digits represent multiples of powers
713.44,1.12,of 10 which are
714.56,3.44,"1, 10, 100, 1000, and so on."
718.0,2.16,Modern computers use base 2 numbers
720.16,2.1,with just 2 digits: 0 and 1.
722.26,2.139,Binary digits are multiples
724.399,1.921,of powers of 2 which are:
726.32,3.759,"1, 2, 4, 8 and so on. For example,"
730.079,4.32,in base 10 the number 953 is 9 times 100
734.399,2.88,plus 5 times 10 plus 3 times 1.
737.279,1.441,"In binary, the number 1 0 1"
738.72,3.44,is 1 times 4 plus 0 times 2
742.16,3.04,plus 1 times 1 which is 5 in base 10.
745.2,2.319,Any number in base 10 can be represented
747.519,1.361,by a number in base 2
748.88,3.44,and vice versa. To represent the number 1 0 1
752.32,2.319,3 electrical tracks in order would have
754.639,0.88,their voltage
755.519,3.281,on off on. Each of these tracks carries a
758.8,1.46,binary digit or bit.
760.26,2.379,With three electrical tracks this
762.639,2.64,is called a 3-bit number. There are similarly
765.279,1.921,4-bit numbers 8-bit numbers and
767.2,1.36,so on. Of course the
768.56,3.519,4-bit number 0 1 0 1 is equivalent
772.079,4.56,to the 3-bit number 1 0 1.
776.959,2.161,Let's consider adding together a pair of
779.12,2.88,1-bit numbers A and B to get C.
782.0,2.0,0 + 0 = 0
784.0,2.0,0 + 1 = 1. What
786.0,1.44,happens when we try to add
787.44,2.48,1 + 1 in binary? The same thing as
789.92,1.039,happens when we add
790.959,2.32,5 + 5 in regular base 10.
793.279,1.36,"There is no digit big enough,"
794.639,1.841,so we put a 0 in that column and
796.48,1.76,carry the 1 to the next column.
798.24,1.68,so to guarantee being able to store the
799.92,3.039,result for any possible values of A and B
802.959,3.201,the result C must be a 2-bit number.
806.16,3.52,"The bit on the right is 1 when A or B is 1,"
809.68,2.159,but not both: this is the behavior of the
811.839,1.601,XOR gate if you recall
813.44,1.56,Charlie from the last section.
815.0,1.48,The bit on the left
816.48,4.08,"is 1 only if A and B are 1, ergo the AND gate."
820.56,3.2,Therefore C is obtained by connecting
823.76,4.24,A and B to gates like this.
831.68,3.2,When adding numbers A and B larger than 1-bit
834.88,3.92,things get more complicated with three
836.8,2.56,input gates because there is now a bit
839.36,2.479,"from A, a bit from B and a carried bit."
841.839,1.281,As I said in the previous section:
843.12,2.159,"NAND gates are universal, meaning any"
845.279,2.081,required gate network can be implemented
847.36,2.64,using enough of them.
857.0,3.399,[Beethoven's 5th symphony]
860.399,2.56,"In base 10, multiplying by 10 is easy:"
862.959,3.281,just add a 0 onto the end of your number.
865.079,1.161,In base 2
866.24,2.08,the same is true for multiplying by
868.32,3.199,10 in binary or 2 in base 10.
871.519,4.521,"So, multiplying by the numbers 10, 100, 1000"
876.04,2.28,in binary just involves
878.32,1.759,shifting each bit to the left and
880.079,1.601,"putting a 0 on the end,"
881.68,2.56,which is unimaginably called a bit shift.
884.24,2.399,"What about multiplying by an arbitrary number,"
886.639,1.781,say for example 11 in binary?
888.42,0.94,This is the same as
889.36,1.76,multiplying by 10
891.12,2.0,multiplying by 1 and adding the two
893.12,2.399,"together. So, binary multiplication of A"
895.519,3.041,by an arbitrary number B works as follows:
898.56,3.36,begin with zero. If the rightmost bit of
901.92,3.12,"B is 1, add A. Bit shift A once and if the next"
905.04,2.479,"bit of B is 1, add this to the total."
907.519,2.481,Continue for every bit of B.
911.76,1.84,Computers also rely on making
913.6,2.16,"comparisons of numbers, such as:"
915.76,3.199,Is A equal to B? Is A greater than B?
918.959,0.641,And so on.
919.6,1.599,The computer might have the current time
921.199,2.161,in seconds stored as a binary number A
923.36,2.0,updated every second and the time to set
925.36,1.68,up an alarm stored as B.
927.04,2.47,The alarm would be made to go off when
929.519,1.201,A is equal to B.
930.72,1.919,"To do this, the computer must check that"
932.639,1.361,every bit of the number A is
934.0,1.92,the same as the corresponding bit of B.
935.92,1.839,"So, the XOR gate"
937.759,2.481,returns 1 when an input is 1 and the
940.24,2.0,"other input is 0, in other words when"
942.24,1.36,its inputs are different.
943.6,2.159,The XNOR gate which is the complement of
945.759,2.961,the XOR meaning it returns the opposite to
948.72,2.0,the XOR therefore returns a 1 when its inputs
950.72,2.479,are the same. A bunch of XNOR gates
953.199,2.481,applied to each pair of bits of A and B
955.68,2.159,return whether those bits are equal or not.
957.839,2.641,The and gate returns a 1 when all
960.48,1.12,its inputs are 1.
961.6,1.679,So applying it to the XNOR gates
963.279,1.36,returns a single bit
964.639,3.681,which is 1 if and only if A is equal to B.
968.32,1.6,There are also ways to implement
969.92,1.839,"subtraction, division and other"
971.759,2.401,comparisons all using gate networks.
974.16,1.76,For example bit shifting the other way
975.92,1.279,divides a number by two.
977.199,1.44,These are all implemented using
978.639,1.841,transistors etched on a chip.
980.48,1.76,Just a note: when I say the word number
982.24,1.599,in this video I am referring to an
983.839,2.081,integer or whole number. There is also a
985.92,1.919,way to store fractions in a binary
987.839,1.761,version of scientific notation
989.6,2.4,called floating point numbers or floats.
992.0,1.759,I won't go into how they work but the
993.759,3.041,general principle outlined here still applies.
996.8,2.959,To summarize: a sequence of binary on off
999.759,1.041,electrical signals
1000.8,1.839,is used by computers to represent a
1002.639,1.2,number in base 2
1003.839,2.24,as opposed to base 10 which is used by
1006.079,1.2,people day to day.
1007.279,1.761,Networks of logic gates can be used to
1009.04,2.56,"add, subtract and compare binary numbers,"
1011.6,2.08,and with a few extra steps multiply and
1013.68,2.88,divide them too.
1016.56,3.519,[Music]
1020.079,1.841,We have seen how circuits composed of
1021.92,2.0,transistors can be used to implement
1023.92,1.999,addition and other algebra for any
1025.919,3.28,number with arbitrary binary digits or bits.
1029.199,1.6,If you want to build a computer we would
1030.799,1.681,have to choose exactly how many
1032.48,1.839,electrical tracks and gates to have
1034.319,2.081,available for representing a number.
1036.4,1.36,This is like when you're filling in a form
1037.76,1.6,and it has a set number of boxes
1039.36,2.719,physically printed on it for putting in your age.
1042.079,2.161,For commercial computers this is always
1044.24,1.28,a multiple of 8.
1045.52,1.84,8 bits are called a byte.
1047.36,2.0,The computer will have adder circuits and so
1049.36,1.679,on with the types I described in the
1051.039,0.961,last section which
1052.0,3.44,"take 1 byte or 8-bit numbers, 2 byte or"
1055.44,3.44,"16-bit numbers, 4 byte or 32-bit numbers"
1058.88,1.28,as inputs.
1060.16,3.12,No matter of how many bytes a number is comprised
1063.28,1.759,one of its bits can be set aside to
1065.039,2.161,denote a plus or minus sign.
1067.2,2.24,"When a number is signed in this way, if"
1069.44,1.84,the leading bit is 0 then the number
1071.28,0.8,is positive.
1072.08,1.839,If the leading bit is 1 then the
1073.919,1.521,number is negative.
1075.44,1.359,As anyone who has ever taken a
1076.799,2.561,mathematics exam knows: it's important to
1079.36,1.439,store your workings.
1080.799,1.681,Whichever operation a computer
1082.48,2.48,"undertakes, the inputs and outputs must"
1084.96,1.68,be somehow stored.
1086.64,2.0,"To do this, a type of circuit called a"
1088.64,1.52,latch is used.
1090.16,1.759,"Once it has latched, it will stay that"
1091.919,1.281,way for a long time
1093.2,1.92,and can therefore be used to store a bit
1095.12,3.679,of data. 8 latches store a byte and so on.
1098.799,1.841,This is an example of what's called a
1100.64,1.52,D-latch comprised of
1102.16,2.24,NAND gates. You may notice that this
1104.4,1.1,looks rather strange:
1105.5,2.34,before we've seen gates in a
1107.84,1.76,strictly sequential manner where the
1109.6,1.199,output of one gate
1110.799,2.801,goes directly to another. Now there is an
1113.6,1.04,output from one
1114.64,1.919,"going to the input of another, but then"
1116.559,1.761,the output comes right back.
1118.32,1.92,It is this kind of interconnection that
1120.24,2.4,allows this network of gates to hold and
1122.64,1.78,retain its output value 0 or 1.
1124.42,2.94,Nothing will change unless the E
1127.36,3.439,"or enable input is 1. When enable is 1,"
1130.799,2.401,whatever bit is applied to D will
1133.2,2.0,propagate to the output.
1135.2,2.16,"The computer will carry out an operation,"
1137.36,1.28,"addition for example,"
1138.64,2.08,enable a bunch of latch circuits to
1140.72,1.68,store the output and then switch the
1142.4,1.36,enable back off.
1143.76,1.919,The result will then be held there as
1145.679,1.681,long as is required.
1147.36,2.0,8 of these latches can form register
1149.36,1.84,which will store a byte of data
1151.2,2.479,as long as it's required. An add circuit
1153.679,1.681,of the type we looked at in the previous
1155.36,2.08,section would have such registers to store
1157.44,1.76,the inputs before the addition takes
1159.2,2.24,place and a register to capture
1161.44,2.06,the result of the addition.
1163.5,3.2,It takes some small but significant amount
1166.7,1.94,"of time for electrical signals to propagate,"
1168.64,2.399,for transistors to finish switching and so on.
1171.039,2.241,To guarantee that the operation is fully
1173.28,1.84,carried out before attempting to read
1175.12,1.04,"out the answer,"
1176.16,3.2,all computers have a clock. In basic
1179.36,2.08,terms an oscillating crystal switches
1181.44,1.52,"the voltage on and off,"
1182.96,3.04,"on and off, at a very specific rate."
1186.0,1.44,At the time when this video was made
1187.44,2.32,computer processors have typical clock
1189.76,2.159,"speeds of 2 Gigahertz, meaning that the clock"
1191.919,3.601,switches at 2 billion times a second.
1195.52,1.519,The regular switching allows
1197.039,3.041,events to be synchronized. To fully carry
1200.08,2.479,out an addition operation it will take at
1202.559,3.12,least 3 clock cycles. On the first clock
1205.679,1.761,cycle numbers would be loaded into the input
1207.44,3.2,"registers, then the addition circuit can"
1210.64,2.8,work over the next clock cycle. Finally on the
1213.44,2.0,third clock cycle the output register
1215.44,3.52,gets an enable signal and stores the result.
1218.96,2.24,"Actually, most operations take much"
1221.2,1.52,longer than one or even
1222.72,2.4,three clock cycles to carry out.
1225.12,1.36,We have seen in the previous section that
1226.48,2.0,multiplication takes several adding
1228.48,1.52,steps to accomplish.
1230.0,1.84,"Nonetheless, whether it takes one or a"
1231.84,2.24,hundred cycles the clock is still used
1234.08,2.32,to synchronize when an operation begins
1236.4,2.56,until the output is ready.
1238.96,1.719,"All the so-called arithmetic logic,"
1240.679,1.721,that is: all the arrays
1242.4,2.639,of logic gates which do addition and subtraction
1245.039,1.841,is physically located together with the
1246.88,1.279,registers on a chip
1248.159,2.0,called the processor or
1250.159,1.601,Central Processing Unit.
1251.76,4.48,There are also circuits in there called
1253.6,2.64,"the cache, which nowadays can store"
1256.24,2.08,tens of kilobytes of data as the
1258.32,3.12,intermediate stages of calculations for example.
1261.44,2.08,There is a need for a larger and longer
1263.52,2.159,term way to store many more bytes of
1265.679,2.321,data than the registers and the cache.
1268.0,2.0,Computers have separate physical chips
1270.0,2.48,of random access memory or RAM
1272.48,1.92,which makes use of capacitors to store
1274.4,1.68,this data. If a capacitor
1276.08,2.079,"is charged, it has a high voltage and"
1278.159,1.76,therefore a value of 1.
1279.919,2.64,If it's discharged it has 0 volts
1282.559,1.761,relative to ground and so
1284.32,2.96,is 0. The charge leaks or is lost over
1287.28,1.759,"time, but is topped up by the memory"
1289.039,2.401,circuits as long as the computer is powered.
1291.44,3.68,A typical laptop computer has tens of
1293.44,4.04,gigabytes or billions of bytes of RAM.
1297.48,2.12,Every byte stored in RAM has its own address
1299.6,2.4,like a post box in an apartment block.
1302.0,2.88,The address is itself a binary number.
1304.88,2.159,The RAM has many transistors forming
1307.039,1.52,gate networks which ensure
1308.559,1.921,that when it receives the address in
1310.48,2.319,"binary format from the processor, it then"
1312.799,3.201,returns the byte stored at that address.
1316.0,1.6,"Until recently, computers wouldn't"
1317.6,2.559,usually have more than 4 gigabytes of RAM.
1320.159,1.76,Each of those bytes requires a unique
1321.919,2.24,"address, so memory addresses were"
1324.159,3.681,32-bit numbers. Such 32-bit numbers go up
1327.84,2.88,to just over 4 billion so that used to be fine.
1330.72,2.16,When RAM got bigger there effectively
1332.88,2.08,"weren't enough addresses, so now"
1334.96,2.46,64-bit numbers are used for memory addresses.
1337.42,1.619,This is the difference between
1339.039,3.201,"32 and 64-bit programs. So, let's say"
1342.24,1.679,you're playing a video game where you
1343.919,2.24,have a number of coins in your wallet.
1346.159,1.841,The video game will keep track of the
1348.0,3.039,address where the wallet total is stored.
1351.039,2.321,"If you found eight more coins, the game"
1353.36,2.08,will fetch the number currently in your
1355.44,1.599,"wallet from that address,"
1357.039,2.481,"load it into the register, load a biary"
1359.52,2.24,number corresponding to 8 in base 10
1361.76,1.76,"into the other register, add them"
1363.52,1.519,together and put the results
1365.039,2.681,back into the address with the wallet total.
1367.72,1.0,We will look at this in more
1368.72,2.0,detail in the next section.
1370.72,2.319,Computers also store huge volumes of
1373.039,2.721,data on hard disk for decades at a time
1375.76,3.12,even without power. A hard disk is covered
1378.88,2.72,in tiny magnetic domains which can point up
1381.6,2.48,or down corresponding to 1 or 0.
1384.08,2.479,"As the disk spins, a sensor head can"
1386.559,1.681,either passively read off the
1388.24,2.24,"orientation of the magnets as bits,"
1390.48,2.319,or actively flip the orientation of the
1392.799,3.041,magnetic domains to write data onto the disk.
1395.84,2.0,Each of the bytes also has its own
1397.84,1.199,separate address.
1399.039,2.321,A laptop or personal computer can store
1401.36,2.24,hundreds of gigabytes on a hard disk.
1403.6,1.84,there are other technologies like flash
1405.44,2.32,"memory, DVDs and so on that I won't go"
1407.76,1.44,into here.
1409.2,1.92,The fundamental limit on how fast a
1411.12,1.919,computer can do operations is the speed
1413.039,2.64,"of light, which can go about 15 centimeters or"
1415.679,0.961,half a foot
1416.64,2.32,during a typical computer clock cycle so
1418.96,2.24,it would take multiple cycles for a computer
1421.2,2.56,larger than that to fetch any data.
1423.76,2.32,"Realistically, transistors switch much"
1426.08,0.8,"slower than that,"
1426.88,2.56,while a hard disk takes time to spin up
1429.44,0.719,and scan
1430.159,2.961,to read the data. In terms of types of
1433.12,1.039,computer memory:
1434.159,2.961,"the cache is small, but quick to access;"
1437.12,3.039,"the RAM stores many more bytes of data, but takes"
1440.159,1.12,longer to read;
1441.279,2.081,"the hard disk takes the longest to read,"
1443.36,1.439,but stores a lot of data
1444.799,2.0,"almost permanently; so, there is a"
1446.799,2.081,trade-off between how quickly the data
1448.88,1.039,can be retrieved
1449.919,2.561,and how much can be stored. From now on
1452.48,1.84,"in this video, I will explain things as"
1454.32,1.839,if the computer just has a single pool
1456.159,2.481,of memory which it can instantly read
1458.64,1.919,"In reality things are more complicated,"
1460.559,3.441,as I've just described
1464.0,2.0,[Beethoven's 5th symphony]
1466.0,2.559,To summarize: computers have a clock
1468.559,2.081,which synchronizes the operations being
1470.64,0.88,performed and
1471.52,1.759,ensures that there is enough time to
1473.279,2.161,finish performing one operation before
1475.44,1.2,starting another.
1476.64,2.159,Computers process binary numbers in
1478.799,2.201,groups of 8 bits called a byte.
1481.0,1.64,Registers are used to
1482.64,2.24,store numbers during computations
1484.88,2.08,and at other times numbers are stored in
1486.96,2.319,"the cache, in random access memory"
1489.279,2.88,and on a hard disk. Each byte in memory
1492.159,1.361,has its own unique address
1493.52,2.48,which is itself a binary number.
1496.0,6.159,[Music]
1502.159,1.841,We have a way of implementing binary
1504.0,2.24,"operations and storing the results, but"
1506.24,1.919,the computer needs a way to determine
1508.159,1.441,which operation to use and when.
1509.6,2.48,This is called an instruction.
1512.08,1.92,There are instructions such as:
1514.0,2.4,"add two numbers, and copy this number."
1516.4,1.759,Computers use what's known as the
1518.159,1.921,"von Neumann architecture, which means"
1520.08,2.64,that the instructions are stored in memory
1522.72,3.04,as binary numbers amongst other data.
1525.76,1.2,"For example, the instruction"
1526.96,3.36,number 16 and base 10 or this byte in binary
1530.32,1.92,might mean: add together two 8-bit
1532.24,1.919,numbers and store the result.
1534.159,1.921,Instruction number 17 might mean the
1536.08,4.64,same thing but for 16-bit numbers and so on.
1541.76,1.68,When the computer encounters an
1543.44,2.16,"instruction, it will use a comparison"
1545.6,1.76,circuit which we looked at in a previous
1547.36,1.919,section to switch on the logic circuit
1549.279,1.76,for the necessary operation.
1551.039,3.361,"If the byte is equal to 16, switch on the"
1553.6,0.8,add circuit.
1554.4,1.68,How does the computer know when a byte
1556.08,1.599,is an instruction or not?
1557.679,2.24,"16 might be the instruction to add, or it"
1559.919,2.321,might be the number of coins in a video game.
1562.24,2.0,"Well, everything has to do with a precise"
1564.24,1.28,order in which the bytes
1565.52,2.159,appear in memory. First comes the
1567.679,1.12,instruction byte.
1568.799,1.681,"If the instruction is to add, the"
1570.48,1.439,computer will need the two memory
1571.919,2.081,addresses of the things being added and
1574.0,1.679,the memory address where the result is
1575.679,1.12,to be stored.
1576.799,2.641,Remember that memory is like post boxes
1579.44,1.599,for a big apartment building with a
1581.039,1.601,unique address on each byte.
1582.64,3.12,In the case of modern 64-bit
1585.76,1.68,systems addresses are 8
1587.44,2.16,"bytes long. Therefore, the entire add"
1589.6,0.88,instruction has
1590.48,3.28,one instruction byte and 24 bytes of addresses;
1593.76,2.88,"25 in total. On the other hand, if the"
1596.64,1.76,"instruction is to copy a number,"
1598.4,1.6,it just needs to be followed by the
1600.0,2.0,"origin and destination addresses, meaning"
1602.0,3.36,the whole thing takes 17 bytes in total.
1605.36,1.6,The trick is that each type of
1606.96,2.24,instruction always takes up a set number
1609.2,1.44,of bytes and - crucially -
1610.64,2.48,the next instruction immediately follows
1613.12,1.679,on after the previous one.
1614.799,2.24,"So, when the computer encounters the add"
1617.039,1.76,instruction not only does it carry it
1618.799,1.36,"out, but it knows that the next"
1620.159,1.76,instruction is precisely
1621.919,2.481,"25 bytes along. To start with, the"
1624.4,2.159,computer interprets byte number 0 - the
1626.559,1.841,one at the very start of memory - as an
1628.4,1.519,instruction and thereafter
1629.919,1.841,goes from instruction to instruction.
1631.76,1.919,"Conversely, if there has been an error"
1633.679,1.441,and the next instruction is not where
1635.12,1.2,it's supposed to be -
1636.32,1.76,tough luck! The computer will probably
1638.08,2.0,crash. How does the computer
1640.08,2.719,actually carry out an add instruction?
1642.799,1.521,The number from the first address
1644.32,2.079,is loaded into one input register and
1646.399,2.481,the second address into another input register.
1648.88,3.039,The add circuit is enabled and it does the addition.
1651.919,2.0,"Then, after a sufficient number of clock"
1653.919,1.601,"cycles, the result can be"
1655.52,1.68,written from the output register to the
1657.2,1.68,required address in memory.
1658.88,1.519,What happens if the instruction is to
1660.399,3.841,add two 16-bit numbers together?
1662.64,1.6,The computer simply goes to the address
1664.24,1.84,of number A and instead of getting just
1666.08,1.199,"one byte, it gets"
1667.279,2.161,that byte and then one immediately after.
1669.44,1.2,The same for number B
1670.64,1.36,and the result C.
1672.0,2.559,[Beethoven's 5th symphony]
1674.559,2.081,A computer program is a collection of
1676.64,2.08,instructions (and addresses) to be done
1678.72,1.6,in order. The computer goes from
1680.32,1.68,instruction to instruction to make the
1682.0,3.12,program run. Let's look at a specific example:
1685.12,2.08,"part of the game, which is just a program"
1687.2,1.839,"after all, where the player has a wallet"
1689.039,0.961,with coins in.
1690.0,1.919,This is what the contents of memory
1691.919,1.201,might look like.
1693.12,2.32,Byte number 0 is the instruction to add.
1695.44,2.08,Then come two addresses:
1697.52,2.0,the address of the wallet total and the
1699.52,2.24,number of coins the player has just found.
1701.76,1.919,The third address is the wallet again.
1703.679,2.561,after the addition the wallet total will be
1706.24,2.4,"overwritten. No matter what, the computer"
1708.64,1.44,will now interpret byte number
1710.08,3.28,25 in memory as an instruction. It is
1713.36,2.0,another add instruction. The addresses of
1715.36,1.84,the wallet and the amount of coins the
1717.2,2.8,player has made from selling items are the inputs.
1720.0,1.919,The wallet address is the output again.
1721.919,2.161,The next instruction is 25
1724.08,2.64,bytes further along at byte 49.
1726.72,2.24,The program keeps going on with millions of
1728.96,1.68,other instructions required to make the
1730.64,1.279,game function.
1731.919,3.12,"In this case, the wallet total is being used a lot,"
1735.039,2.64,so it will probably be held long term in
1737.679,1.36,the processor's cache
1739.039,2.161,as well as the RAM. When the player saves
1741.2,1.76,the game it will be written to a save
1742.96,5.52,file on the computer's hard disk.
1748.48,2.4,To summarize: the computer interprets
1750.88,1.279,certain bytes in memory
1752.159,3.12,as instructions for which operation to carry out.
1755.279,2.161,Computer programs are stored in memory.
1757.44,2.64,"They are just large sequences of instructions,"
1760.08,1.92,memory addresses and numbers.
1762.0,1.52,The computer goes from instruction
1763.52,2.0,"to instruction like clockwork, always"
1765.52,2.56,knowing based on the type of the current instruction
1768.08,2.81,how far along the next one is.
1770.89,5.59,[Music]
1776.48,1.919,"So far, we've looked at instructions"
1778.399,1.76,which work in a linear manner:
1780.159,2.801,"copy a number, add two together and so on."
1782.96,1.439,The program would always produce the
1784.399,2.0,same result and eventually it would just
1786.399,2.16,get to the end of memory and stop.
1788.559,2.0,We need a few more instructions to make
1790.559,2.641,a computer what's known as Turing complete.
1793.2,1.92,Being Turing complete means that it
1795.12,1.36,can eventually carry out
1796.48,2.88,"any possible computation: load a web page,"
1799.36,1.84,render video game and so on.
1801.2,1.52,The only difference between two
1802.72,1.679,Turing complete computers
1804.399,3.28,is how fast they are at doing those computations.
1807.679,2.0,The first type of instruction a computer
1809.679,1.841,needs is what's called a jump or
1811.52,1.519,sometimes called a go to.
1813.039,1.76,Following the instruction byte is a
1814.799,2.24,"memory address. As the name suggests,"
1817.039,1.76,instead of going directly to the next
1818.799,1.921,"instruction in memory, the program"
1820.72,2.079,jumps to the specified memory address
1822.799,2.0,and carries out the instruction there.
1824.799,3.281,This means that the program can now do a loop.
1828.08,2.16,"In our video game example, we have seen"
1830.24,2.0,how instructions are used to add numbers
1832.24,2.76,of coins to a total kept in a wallet.
1835.0,2.36,These instructions and all the others
1837.36,2.64,"required to update the game world, render"
1840.0,3.2,the graphics and so on are followed by a jump
1843.2,2.32,instruction back to the start.
1845.52,3.44,This way the game can keep running indefinitely.
1848.96,1.839,The other crucial type of instruction
1850.799,2.161,that a computer needs is a branching or
1852.96,1.439,conditional instruction.
1854.399,2.88,"If a given condition is met, for example"
1857.279,1.441,"if two numbers are equal,"
1858.72,2.24,then jump to a particular address.
1860.96,2.16,We have already seen how a comparison can
1863.12,1.919,be implemented with logic gates.
1865.039,2.0,Adding such logic makes a jump
1867.039,2.0,"conditional, allowing different sets of"
1869.039,1.161,instructions to be executed
1870.2,3.16,"based on calculations performed so far,"
1873.36,2.0,or inputs to the computer such as a
1875.36,1.84,keyboard or mouse.
1877.2,2.4,With conditional jumps the computer is
1879.6,3.36,Turing complete: given enough time it can do any
1882.96,2.719,calculation. At this point it's worth mentioning how
1885.679,2.081,a real program might actually be written.
1887.76,1.919,If you thought that things were
1889.679,1.6,"quite confusing so far,"
1891.279,1.921,you're not wrong. Remembering which
1893.2,1.28,"instruction does what,"
1894.48,2.0,which memory addresses have what data
1896.48,2.4,"stored in them, where jumps go and so on."
1898.88,2.639,This is all hard to keep track of.
1901.519,1.681,Programmers typically work with what are
1903.2,2.22,referred to as high level programming languages.
1905.42,1.78,This means that all the nuts
1907.2,1.92,and bolts of instructions and memory
1909.12,1.279,addresses are hidden away
1910.399,3.28,and instead life is made easier for the programmer.
1913.679,2.161,For example this is a bit of code in the
1915.84,4.719,C or C++ language. This code is readable by humans.
1920.559,3.441,"If A is greater than B, set Q to be A;"
1924.0,3.2,"otherwise, when B is greater or equal to A,"
1927.2,2.719,"set Q to be B. In other words, the number Q"
1929.919,0.961,will end up with
1930.88,3.12,whichever number is larger out of A or B.
1934.0,1.76,This is easy to understand for the
1935.76,2.72,programmer and anyone who tries to read it.
1938.48,1.919,A program called a compiler will take
1940.399,1.601,this code and arrange it into the
1942.0,1.679,"correct set of instructions,"
1943.679,1.921,sort out where the variables are stored
1945.6,2.079,"in memory, where to jump, do we need to"
1947.679,3.201,use 16-bit or 32-bit numbers and so on.
1950.88,2.72,This is what's referred to as compiling the code.
1953.6,1.84,There are many aspects of programming
1955.44,2.0,languages which simplify the job of the
1957.44,2.0,"programmer, but one of the most important"
1959.44,2.32,is the idea of a function or method.
1961.76,2.08,"In mathematics, the square root is a"
1963.84,1.6,function which takes a number and
1965.44,2.0,returns another. Certainly there are
1967.44,1.599,implementations of the square root
1969.039,1.76,"function in computer code, but there are"
1970.799,1.681,also more arbitrary functions and
1972.48,2.96,methods such as for fetching emails and so on.
1975.44,2.079,Say that a program needs to evaluate the
1977.519,2.4,square root of different numbers repeatedly.
1979.919,1.441,The instructions which comprise the
1981.36,3.199,square root function need only be stored in memory once.
1984.559,1.84,"Whenever the function needs to be used,"
1986.399,2.721,"or called, the computer will jump to the function's"
1989.12,2.0,"location in memory, carry out the"
1991.12,1.919,instructions and jump back with the
1993.039,2.081,result to the place in the program where
1995.12,1.039,it left off.
1996.159,1.601,Functions and methods can be compiled
1997.76,1.919,into libraries so that programmers
1999.679,2.081,across time and space can share
2001.76,1.919,useful code that they've written.
2003.679,2.641,"If you've ever seen a DLL file on Windows,"
2006.32,2.32,that's what that is. Once a function or
2008.64,2.0,"method has been written efficiently,"
2010.64,1.6,other programmers can use it without
2012.24,1.76,needing to spend much time on it.
2014.0,2.72,[Beethoven's 5th symphony]
2016.72,1.839,To summarize: computers have an
2018.559,2.0,instruction to jump to a memory address
2020.559,2.321,and carry out whatever instruction is there.
2022.88,2.56,This allows loops within programs.
2025.44,2.239,Some jumps only happen when a condition is met
2027.679,1.921,any computer that is capable of such
2029.6,2.24,jumps can carry out any computation
2031.84,4.5,as long as it has enough memory and time to do so.
2036.34,4.38,[Music]
2040.72,1.92,"Chances are, you're watching this video"
2042.64,1.919,on some sort of display. There are many
2044.559,2.081,technologies past and present which have
2046.64,1.68,"been used for computer monitors,"
2048.32,2.64,so I will speak in generalities.
2050.96,2.08,Light bulbs like at the start of the video are too
2053.04,3.52,"large, but light emitting diodes or LEDs are"
2056.56,1.839,smaller and more efficient. The higher
2058.399,1.68,"the voltage across an LED,"
2060.079,3.04,the brighter it is. A display is capable of
2063.119,1.76,electronically changing the voltage
2064.879,1.921,across each of its LEDs
2066.8,1.92,and therefore their brightness according
2068.72,1.679,to data from the computer.
2070.399,2.321,"Since computers handle numbers in bytes,"
2072.72,2.159,"in other words groups of 8 bits,"
2074.879,1.76,it makes sense to have the brightness go
2076.639,2.04,up on a scale from 0 to 255 -
2078.679,3.48,the largest value a byte can take.
2082.159,2.72,The human eye has cells sensitive to red
2084.879,1.441,green and blue light.
2086.32,3.359,"By using a set of three LEDs: red, green and blue,"
2089.679,2.0,"varying the relative brightness of each one,"
2091.679,2.16,the human eye can be tricked into
2093.839,2.24,perceiving the full spectrum of light.
2096.079,3.201,A mix of red and green gives yellows and browns.
2099.28,2.4,Red and blue gives pinks. All three
2101.68,2.32,colors at full brightness give white
2104.0,3.92,and at partial brightness give grey and so on.
2107.92,3.12,"A little spot composed of three colors like this,"
2111.04,2.079,"no matter what technology is used,"
2113.119,1.041,is called a pixel.
2114.16,2.88,A display has pixels arranged in rows
2117.04,2.48,and columns to form a 2-dimensional grid.
2119.52,3.88,"For example, this video at maximum resolution"
2123.4,2.6,is 1920 pixels in width by
2126.0,3.04,1080 pixels in height. The number of
2129.04,2.559,bytes it takes to fill a display in memory
2131.599,2.961,is 3 times the width times the height.
2134.56,2.08,"In simplest terms, the computer must update"
2136.64,1.52,this many bytes in memory
2138.16,2.72,30 or 60 times per second and send the
2140.88,1.28,result to the display.
2142.16,1.919,"So, for example, if you full screen this"
2144.079,1.841,"video in its maximum resolution,"
2145.92,3.679,each frame would take up this many bytes in memory.
2149.599,2.161,While displaying graphics and images may
2151.76,2.16,"seem like a purely artistic undertaking,"
2153.92,1.6,"and in some sense it is,"
2155.52,1.76,in actual fact for a computer it is
2157.28,1.6,nothing more than gate logic and
2158.88,1.92,instructions we have seen so far.
2160.8,2.24,Each pixel has a horizontal or x
2163.04,2.0,coordinate and a vertical or y
2165.04,1.76,coordinate which corresponds to its
2166.8,1.36,position in memory.
2168.16,1.6,"For example, let's say your display is"
2169.76,2.319,exactly a thousand pixels wide and you
2172.079,1.921,"start with the top left pixel,"
2174.0,2.4,if you move forward three thousand bytes
2176.4,2.88,"in memory or the equivalent of a thousand pixels,"
2179.28,1.839,you'll go off the end of the top row and
2181.119,3.841,onto the left pixel of the second row.
2185.44,2.159,There are many algorithms or long lists
2187.599,2.24,"of instructions to draw windows,"
2189.839,3.041,"buttons, text and computer graphics"
2192.88,2.08,all by using this kind of arithmetic and
2194.96,2.08,manipulating bytes in memory.
2197.04,3.36,"To display a simple desktop environment, a loop"
2200.4,2.08,fills every pixel with the background
2202.48,2.32,color by repeatedly copying the sequence
2204.8,2.799,of three bytes that uniquely defines the color.
2207.599,2.321,The taskbar is drawn by looping over
2209.92,2.08,only rows of pixels with specific
2212.0,2.56,y coordinates. A start button is created
2214.56,2.24,by filling a rectangle with a given range of
2216.8,2.88,x and y coordinates with another color.
2219.68,1.919,Text is added on top by copying
2221.599,2.641,pre-determined patterns of pixels for each letter
2224.24,1.76,or through some other algorithm.
2226.0,2.079,"To display a window, it's necessary to know"
2228.079,1.201,its specific width
2229.28,1.92,and height and the current position of
2231.2,1.84,its top left pixel.
2233.04,2.48,Adding the x value of the left pixel and
2235.52,2.4,the width by simple arithmetic gives the
2237.92,2.48,rightmost edge pixel. A title bar can
2240.4,1.84,"then be drawn, along with a border"
2242.24,2.48,text and so on. If the user moves or
2244.72,1.28,"resizes the window,"
2246.0,2.0,all of this arithmetic has to be redone
2248.0,1.76,and the window redrawn.
2249.76,1.92,The simplest computer graphic involves
2251.68,2.159,drawing a line between two points
2253.839,2.321,"both with their own set of coordinates (x,y)."
2256.16,1.919,The bresenham algorithm
2258.079,2.081,involves a loop which draws just such a
2260.16,1.679,line by following a straight
2261.839,3.041,x-y curve familiar from school mathematics.
2264.88,2.0,Draw three lines and you have a triangle
2266.88,1.68,"which can be filled with textures,"
2268.56,2.4,illuminated by simulated light sources
2270.96,2.639,and combined with thousands of others to make a
2273.599,1.921,3D shape. No matter how complicated it all
2275.52,1.92,"comes down to addition, multiplication"
2277.44,2.88,and jump instructions compiled into functions.
2280.32,3.2,Sound is the other major form of output from a
2283.52,2.0,Computer. Sounds are waves of high and low
2285.52,1.839,pressure moving through the air.
2287.359,1.841,Speakers and headphones produce sounds
2289.2,2.159,by moving a membrane back and forth.
2291.359,1.76,There is a permanent magnet attached to
2293.119,1.881,the membrane inside a fixed conducting coil.
2295.0,2.04,An oscillating current through the
2297.04,1.92,coil pulls the magnet in and out
2298.96,1.6,making the membrane oscillate and
2300.56,2.32,creating a sound. The computer breaks up
2302.88,2.16,time into short steps and specifies the
2305.04,2.16,current at every step in time by sending
2307.2,2.08,a binary number to a sound card.
2309.28,2.0,Electronics turn the digital binary
2311.28,2.16,values into the appropriate current.
2313.44,2.0,A microphone works in exactly the
2315.44,2.72,opposite way.
2318.56,3.039,"There are many input devices out there, but the way"
2321.599,3.041,a computer deals with inputs is usually the same.
2324.64,2.08,The inputs leave so-called messages in
2326.72,3.04,"memory, which are groups of bytes of preset length,"
2329.76,2.4,identifying the device and what exactly
2332.16,1.52,the input consists of.
2333.68,2.32,"For example, a message queue may have it"
2336.0,2.22,three messages of eight bytes each:
2338.22,2.18,"when decoded, the first one"
2340.4,2.6,states that the a key has been pressed down;
2343.0,2.52,the second states that the mouse has moved 30
2345.52,1.76,pixels to the right; and the third that
2347.28,3.36,the shift key has been released on a keyboard.
2350.64,2.36,The keys are arranged into a grid.
2353.0,1.96,"When a key is pressed, it makes an electrical"
2354.96,2.56,"contact between a horizontal and vertical row,"
2357.52,1.78,allowing the precise key to be identified.
2359.3,3.34,"Between the keyboard and the computer's motherboard,"
2362.64,1.68,the message announcing when a key is
2364.32,3.12,pressed down or released is relayed to computer
2367.44,2.24,"memory, allowing the computer to act on it."
2369.68,1.52,"In our video game example,"
2371.2,2.48,imagine that the 'B' button is used to buy
2373.68,2.24,things and the 'S' button is used to sell.
2375.92,1.84,"In Windows, these key presses have"
2377.76,1.599,corresponding decimal numbers
2379.359,2.72,66 and 83 respectively. In terms of
2382.079,1.52,"instructions, the game would have"
2383.599,1.921,conditional jumps based on the value of
2385.52,1.2,the last keystroke.
2386.72,2.48,"If the keystroke value is 66, then a"
2389.2,1.36,computer would jump to a set of
2390.56,2.0,instructions corresponding to buy;
2392.56,2.4,"if 83, it would jump to instructions"
2394.96,1.76,corresponding to sell.
2396.72,3.28,A computer mouse tracks how far left or right
2400.0,3.52,and up or down it has moved along a flat surface
2403.52,2.319,and also which buttons have been pressed.
2405.839,2.401,"A program, typically the computer's operating"
2408.24,2.079,"system, keeps track of the x"
2410.319,2.721,and y pixel coordinates of the mouse by
2413.04,1.279,adding or subtracting
2414.319,3.201,any changes in position received from the mouse.
2417.52,1.839,Say that a window with a button is
2419.359,2.641,currently active when a user presses down
2422.0,2.24,the left mouse button the program will check the
2424.24,2.0,x coordinate of the mouse cursor against
2426.24,1.359,the dimensions of the button.
2427.599,2.321,If x is greater or equal to the left
2429.92,1.12,side of the button and
2431.04,1.76,less than or equal to the right side of
2432.8,1.6,the button then the click is
2434.4,2.0,horizontally inside the button the
2436.4,2.4,programs then check the y-coordinate is
2438.8,1.84,vertically inside the button too.
2440.64,3.04,If both are true the button is considered pressed.
2443.68,2.24,If at any moment you have 10 buttons on
2445.92,1.679,"screen, the program will check"
2447.599,1.601,every button in turn if it's been
2449.2,1.8,pressed down or not.
2451.0,2.2,[Beethoven's 5th symphony]
2453.2,2.399,To summarize: a computer display is a
2455.599,1.041,grid of pixels.
2456.64,2.56,"Each one a group of a red, a green and a"
2459.2,1.04,blue light.
2460.24,2.4,The brightness of each light is set by a
2462.64,2.4,corresponding byte in computer memory.
2465.04,2.319,A pixel therefore has an arbitrary color
2467.359,3.201,and a group of them together makes an image.
2470.56,1.68,Sound is recorded by measuring the motion of
2472.24,2.0,sound waves and saving them as binary
2474.24,0.96,numbers in memory.
2475.2,3.119,The reverse process is used to play back the
2478.319,2.0,sounds. External devices send messages to the
2480.319,1.841,"computer, which are placed into memory"
2482.16,2.24,"allowing the computer to identify inputs,"
2484.4,1.679,such as when a key has been pressed or
2486.079,1.201,"the mouse has been moved,"
2487.28,1.98,and then act upon them.
2489.26,2.42,"Finally, I want to take stock of the entire video."
2491.68,4.32,I think it's amazing how doping silicon
2494.16,3.32,with impurity elements and performing relatively
2497.48,2.599,simple logical operations allow us to watch and
2500.079,3.28,create videos process information and even inhabit
2503.359,1.201,virtual worlds.
2504.56,1.68,Computing is all about building up
2506.24,1.68,simpler concepts to achieve more
2507.92,1.199,complicated ones.
2509.119,1.921,"If you've got CMOS pairs, you can make a"
2511.04,1.92,"NAND gate; if you've got NAND gates, you"
2512.96,1.52,can make any logic gate;
2514.48,1.44,"if you have logic gates, you can make"
2515.92,1.76,"instructions; if you have instructions,"
2517.68,2.159,you can make algorithms into functions;
2519.839,1.841,from functions you can build up programs
2521.68,1.439,as complicated as you like.
2523.119,1.681,This also means that computers are very
2524.8,2.16,dumb: they have no intuition and must
2526.96,2.32,rigidly follow programs which have every
2529.28,2.24,possible eventuality spelled out in
2531.52,1.0,great detail.
