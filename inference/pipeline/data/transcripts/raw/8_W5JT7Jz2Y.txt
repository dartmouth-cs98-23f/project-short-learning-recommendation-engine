second,duration,transcript
6.319,4.961,in this presentation we will see about
8.4,5.6,the database system architecture we are
11.28,4.0,now in part one of the database system
14.0,3.199,architecture
15.28,4.32,from the last few presentations we
17.199,6.481,realized the importance of having dbms
19.6,6.8,by organizations because data is crucial
23.68,5.2,and the volume of data handled by dbms
26.4,5.199,is really fascinating because the data
28.88,6.08,that is processed by dbms is not just
31.599,7.041,the bit of data or bytes of data they
34.96,4.96,range in kilobytes megabytes gigabyte
38.64,5.28,terabyte
39.92,5.2,petabyte exabyte zettabyte yotabyte and
43.92,3.76,whatnot
45.12,4.56,in the coming future we may also end up
47.68,4.08,in more data volume than what is
49.68,4.399,specified on the slide so when a
51.76,4.959,database needs to handle this much of
54.079,4.64,information obviously the main memory
56.719,4.881,cannot handle this though the main
58.719,5.201,memory is faster in nature but this main
61.6,4.96,memory cannot store the database because
63.92,4.72,it's volatile in nature at the same time
66.56,4.64,the secondary storage devices like the
68.64,5.12,hard disk or the ssds the solid state
71.2,5.04,drives will also not be sufficient due
73.76,4.48,to the increased volume of data then
76.24,4.4,what's the solution for this because
78.24,5.28,this contemporary world is handling an
80.64,4.88,enormous amount of data so obviously we
83.52,4.56,are in the need of storage servers or
85.52,5.12,data centers or cloud that can handle
88.08,4.8,large volume of data the reason why i am
90.64,4.96,projecting this is that i'll give you a
92.88,4.72,real time example just see facebook how
95.6,4.24,much volume of data it is handling every
97.6,4.159,day take another server is a whatsapp
99.84,3.279,server which is handling an enormous
101.759,3.841,amount of data
103.119,4.96,every day every minute every second it
105.6,4.799,handles a large volume of data at the
108.079,4.4,same time whatever we post it is stored
110.399,3.841,in their servers let's say you have
112.479,4.241,posted your photo in your facebook
114.24,5.199,account and later you have decided that
116.72,4.56,you don't want that photo to be posted
119.439,4.72,so obviously we will be deleting that
121.28,5.28,isn't it so when you delete it's just
124.159,3.521,deleted from the view of yours and your
126.56,3.039,friends
127.68,3.04,is it actually deleted from the facebook
129.599,4.481,server
130.72,6.32,no it will not so whatever we upload
134.08,5.04,everything is stored in the servers and
137.04,5.12,think about the complexity of handling
139.12,4.96,such high volume of data but still our
142.16,4.4,technology and servers are able to
144.08,4.799,handle this that's the part of being in
146.56,4.88,this contemporary world and coming to
148.879,4.401,the dbms architecture this is also
151.44,2.879,referred as the database system
153.28,2.8,structure
154.319,4.241,and what we are going to learn in this
156.08,4.879,presentation is the part one of the
158.56,4.88,database system architecture at first
160.959,4.961,let me show you the architecture diagram
163.44,4.72,here is the database system architecture
165.92,5.52,if you see the diagram we can see the
168.16,4.799,users are at the top level then iv users
171.44,3.84,the application programmers the
172.959,5.201,sophisticated users and the database
175.28,4.88,administrators obviously each users will
178.16,4.24,be preferring some set of tools for
180.16,4.24,their activities and here is the tool
182.4,4.88,level and if you see the architecture
184.4,5.36,diagram we have two important components
187.28,5.44,the query processor part and the storage
189.76,5.44,manager part we will come to this later
192.72,4.64,and also if you see the databases are
195.2,3.84,actually stored in the disk so in this
197.36,4.32,example we are assuming that the
199.04,4.479,database is actually stored in the disk
201.68,4.4,and that's why this storage is referred
203.519,4.561,as the disk storage so in the database
206.08,3.439,architecture part 1 and part 2
208.08,4.0,presentations we are going to
209.519,4.8,exclusively focus on all the individual
212.08,4.239,components that constitute this database
214.319,4.081,system architecture i mean the
216.319,4.721,components in the query processor as
218.4,4.559,well as the storage manager in part one
221.04,3.759,of database system architecture we are
222.959,4.801,going to exclusively focus on the
224.799,5.041,storage manager and the disk storage i
227.76,4.24,mean we are going to focus on the buffer
229.84,5.039,manager the file manager the
232.0,5.2,authorization and integrity manager and
234.879,4.881,the transaction manager also we are
237.2,5.52,going to see about the data indices the
239.76,5.44,statistical data and the data dictionary
242.72,4.4,so let's see one by one in detail so we
245.2,4.48,are clear that we are going to focus on
247.12,4.479,the storage manager which is this so we
249.68,4.559,are in this part and we are going to
251.599,4.801,focus on all these managers before
254.239,4.081,seeing the managers one by one let's
256.4,4.16,understand why do we need the storage
258.32,4.319,manager and what role it plays in the
260.56,4.4,database system architecture
262.639,4.641,basically this storage manager provides
264.96,4.959,the interaction between the low level
267.28,5.04,data stored and the application programs
269.919,4.321,if you see the architecture diagram
272.32,3.68,this storage manager provides the
274.24,4.64,interaction between the application
276.0,5.44,programs that is from the top level and
278.88,5.12,the data stored at the low level so here
281.44,5.12,is the actual data that is stored and to
284.0,4.639,be precise here is the actual data that
286.56,4.16,is stored in the database
288.639,3.921,actually this storage manager only
290.72,4.24,handles all the queries that are
292.56,4.8,submitted to the system what do we mean
294.96,4.72,by this if you see the architecture
297.36,4.32,diagram the query processor processes
299.68,4.0,the queries and this will give the
301.68,4.0,request to the next level which is the
303.68,4.0,storage manager and that is why the
305.68,4.4,third point says that this is also
307.68,4.48,having an interaction that is received
310.08,5.04,from the query processor to the desk
312.16,4.879,storage and also this storage manager is
315.12,4.639,having the interaction with the file
317.039,4.801,manager you may be asking me a question
319.759,4.401,we have already compared file system and
321.84,4.96,database system and we understood that
324.16,4.479,databases have more advantages over file
326.8,3.52,system in effective storing and
328.639,3.521,retrieval of data
330.32,4.56,even though we are saying that it is a
332.16,5.759,database system internally it is made up
334.88,5.599,of files only but it's not going to work
337.919,5.441,as the regular file system rather it is
340.479,4.881,going to work differently why because we
343.36,4.399,need to effectively store and retrieve
345.36,4.48,the data in database management system
347.759,4.241,at the same time the various drawbacks
349.84,4.24,that we have seen with the file systems
352.0,4.56,needs a solution here though we are
354.08,4.72,using internally all files but this is
356.56,4.56,not going to work as per the file system
358.8,4.8,concept it's going to work as per the
361.12,5.199,database system concept and also we know
363.6,4.96,that only low level data are stored and
366.319,4.561,this low level data is actually the raw
368.56,4.079,data that are stored on the disk using
370.88,4.56,the file system provided by the
372.639,4.721,operating system and obviously whatever
375.44,4.319,the interaction that we make see we may
377.36,4.64,do some insertion or deletion or
379.759,5.201,updation whatever it is coming from the
382.0,5.68,front end or from the high level those
384.96,4.88,data have to be stored in the database
387.68,4.639,to be precise it has to be stored on the
389.84,5.359,disk only because this database is on
392.319,5.44,the disk only so all the raw data are
395.199,4.641,stored on the disk and what format it is
397.759,4.56,going to use this is going to use the
399.84,4.96,same file system format that is provided
402.319,4.561,by the host operating system so we are
404.8,3.92,clear that if data are to be stored on
406.88,4.0,the disk it uses the file system
408.72,4.24,provided by the operating system and
410.88,4.319,these raw data are provided from the
412.96,4.64,users or from the application layer or
415.199,5.201,from the top post layer and what about
417.6,5.68,the dml commands what do we mean by dml
420.4,5.12,commands these dml statements are the
423.28,5.44,statements that deals with the insertion
425.52,5.84,of data or deletion of data or updation
428.72,5.199,of data or sometimes selection of data
431.36,5.04,from the databases we know databases are
433.919,4.72,going to store the data and data related
436.4,3.359,operations are built by the dml
438.639,4.56,statements
439.759,5.84,example select insert delete update
443.199,4.081,nowadays in the last lecture of this
445.599,4.32,chapter we are going to focus on the
447.28,4.96,dbms languages at that time you will be
449.919,5.68,able to understand what is ddl what is
452.24,5.679,dml and other languages also we have a
455.599,5.281,separate chapter called sql where we are
457.919,5.761,going to exclusively focus on the sql
460.88,7.039,the structured query language along with
463.68,6.239,ddl dml tcl and dcl operations
467.919,5.761,i know things will be unclear but for
469.919,6.321,now just understand dml is data related
473.68,4.799,so when such commands are received this
476.24,4.88,storage manager only translates the
478.479,5.681,various dml statements into low-level
481.12,4.96,file system commands why because the
484.16,4.24,internal organization needs to be
486.08,4.32,supported by the operating system and
488.4,4.56,this operating system obviously will be
490.4,4.72,using some file system and whatever the
492.96,4.16,data manipulation language commands that
495.12,4.479,we give these things have to be
497.12,5.199,translated into the low level file
499.599,5.28,system commands in simple terms storage
502.319,5.361,manager is responsible for storing
504.879,4.961,retrieving and updating the data now we
507.68,4.56,will see the various managers that are
509.84,4.319,there in the storage manager as per the
512.24,3.76,architecture diagram we are sure that
514.159,4.401,these are all the four components or
516.0,4.479,managers in the storage manager part
518.56,4.159,number one the authorization and
520.479,4.721,integrity manager number two the
522.719,4.8,transaction manager number three the
525.2,5.04,file manager and number four the buffer
527.519,4.721,manager and also as already stated we
530.24,4.48,are going to look at various data
532.24,5.12,structures the data files the data
534.72,4.96,dictionary and the indices
537.36,4.8,we will see one by one now but let's go
539.68,4.48,to the architecture diagram at first we
542.16,4.4,will focus on the first storage manager
544.16,4.799,component the buffer manager and this
546.56,4.64,buffer manager is actually responsible
548.959,4.721,for fetching the data from the disk
551.2,5.12,storage here is the disk storage and
553.68,5.12,into the main memory and also this
556.32,4.959,buffer manager decides what data to
558.8,4.479,cache in the main memory i hope you are
561.279,4.801,already aware of cache memory in
563.279,5.201,computer systems this memory is mainly
566.08,5.04,used for faster access
568.48,4.56,so buffer manager takes cares of this at
571.12,4.08,the same time this buffer manager is
573.04,4.479,very crucial in terms of another
575.2,4.96,important operation that is handling the
577.519,4.88,size of the data we know the databases
580.16,4.72,will be larger than our actual main
582.399,5.201,memory so this buffer manager will also
584.88,4.48,take care of this memory management and
587.6,4.4,coming to the second one the file
589.36,4.8,manager we know already this is mainly
592.0,4.48,for allocating the space on the disk
594.16,4.56,storage we know actually the databases
596.48,4.479,are already stored on the disk and we
598.72,4.16,may be inserting new data or deleting
600.959,4.401,the existing data or updating the
602.88,4.8,existing data this file manager is
605.36,4.88,responsible for allocating the space on
607.68,4.56,the disk storage and also the data
610.24,4.08,structures we have a lot of data
612.24,4.08,structures followed in the disk storage
614.32,4.16,and this file manager is used to
616.32,3.04,represent the information stored on the
618.48,2.32,disk
619.36,4.08,and coming to the next one the
620.8,4.88,authorization and integrity manager this
623.44,4.639,component or this manager is used to
625.68,4.64,test for the satisfaction of all the
628.079,4.401,integrity constraints that we enforce on
630.32,4.24,the database say for example balance
632.48,4.4,should not be less than zero in such
634.56,4.64,case if any operation that is carried
636.88,4.56,out on the database where the balance is
639.2,4.4,going to be zero or lesser than zero
641.44,3.76,that operation needs to be aborted that
643.6,3.2,should not be permitted because we have
645.2,4.079,given an integrity constraint that
646.8,4.56,balance should not be less than zero so
649.279,3.841,all these integrity constraints are
651.36,3.84,handled by this authorization and
653.12,4.88,integrity manager at the same time
655.2,5.12,authorization of data i mean who can
658.0,4.48,access what that is also actually
660.32,4.56,handled by this authorization and
662.48,5.2,integrity manager and coming to the last
664.88,5.36,manager the transaction manager and this
667.68,4.719,is the very important part because this
670.24,5.039,ensures that the database remains
672.399,5.521,consistent despite system failures or
675.279,4.721,any hardware or software failures at the
677.92,4.56,same time this transaction manager
680.0,5.04,ensures that the concurrent operations
682.48,5.359,carried out on this database are
685.04,4.88,actually not conflicting with each other
687.839,4.721,i mean concurrent operations are
689.92,4.8,permitted multiple users can access the
692.56,4.88,shared data item at the same time
694.72,5.28,without conflicting each other so this
697.44,4.8,is ensured by the transaction manager
700.0,4.0,anyway in the next lecture which is the
702.24,3.92,part 2 of the database system
704.0,4.48,architecture i will elaborate more on
706.16,4.4,this transaction manager we are done
708.48,3.919,with the storage managers what are all
710.56,3.76,the components that we have seen
712.399,3.841,we have seen about the authorization and
714.32,5.44,integrity manager the transaction
716.24,5.68,manager file manager and buffer manager
719.76,4.16,before we sign out let's see the various
721.92,4.0,data structures used what are all the
723.92,4.56,data structures we are going to focus on
725.92,5.52,the data files actually this stores the
728.48,5.359,database itself here is the data files
731.44,3.519,so here is the actual database that is
733.839,3.12,residing
734.959,4.081,and coming to the next one which is the
736.959,5.12,data dictionary we have already seen
739.04,5.84,about metadata that is data about other
742.079,4.88,data that is stored so these metadata
744.88,4.32,information are stored by the data
746.959,4.401,dictionary and coming to the third data
749.2,3.68,structure which is indices we know
751.36,3.919,obviously data are stored in the
752.88,4.56,databases and we need to ensure that the
755.279,4.481,data are accessed fast
757.44,4.399,storage and retrieval are efficient and
759.76,4.4,effective and we are also sure that
761.839,5.201,databases are handling large volume of
764.16,5.119,data in such cases referring to the
767.04,4.239,exact data item that we want say our
769.279,4.081,data may be in the first location or it
771.279,3.921,may be in the last location but it
773.36,3.919,should not be the case that databases
775.2,5.439,takes a lot of time to process our
777.279,6.161,request it should be as fast as it can
780.639,5.361,so in such case indices helps us to
783.44,4.8,retrieve the data faster anyway in the
786.0,4.72,chapter indexing and hashing i will be
788.24,4.719,talking about indices elaborately for
790.72,5.2,now just have this this is used to
792.959,5.281,provide fast access to our data item and
795.92,4.719,if you want an analogy this is like
798.24,4.88,index pages in our textbook why do we
800.639,4.561,need index pages in our textbook suppose
803.12,4.24,we want to refer something we need not
805.2,4.4,go sequentially to refer that if you go
807.36,4.159,to the index file this index file will
809.6,4.32,take us to the exact location what we
811.519,4.56,are looking for and the similar concept
813.92,4.8,is applied on the databases for faster
816.079,4.401,access so what we have seen now we have
818.72,4.72,seen the various data structures like
820.48,5.12,the data files the data dictionary and
823.44,4.959,the indices one thing we have left
825.6,5.039,what's that the statistical data
828.399,5.12,so this part is mainly storing the
830.639,5.2,statistics about the data so this will
833.519,4.401,also help us to take some decisions for
835.839,4.321,managing the databases
837.92,4.24,so what we have learned today in part
840.16,4.239,one of database system architecture we
842.16,4.64,focused on the storage manager and the
844.399,4.8,disk storage and already we have seen
846.8,4.56,about the various types of users in one
849.199,4.241,of our previous presentations so in the
851.36,3.919,next presentation we will focus on the
853.44,3.839,remaining part which is the query
855.279,4.401,processor
857.279,4.601,so i hope the session is informative and
859.68,2.38,thank you for watching
861.88,2.35,[Music]
862.06,10.339,[Applause]
864.23,10.25,[Music]
872.399,2.081,you
