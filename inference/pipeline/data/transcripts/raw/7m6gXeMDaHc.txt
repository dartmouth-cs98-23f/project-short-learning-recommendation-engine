second,duration,transcript
3.02,5.3,[Music]
6.24,4.88,hello everyone and welcome back
8.32,4.96,in this video we will be looking into an
11.12,5.28,overview of the database design
13.28,5.44,process this is a simple illustration of
16.4,4.08,a database design process
18.72,4.399,the first step in the design of the
20.48,3.84,database is requirements collection and
23.119,3.041,analysis
24.32,5.039,what is requirements collection and
26.16,6.239,analysis as a name itself suggests
29.359,3.841,database designers interview or ask the
32.399,3.361,database
33.2,3.28,users about their requirements and then
35.76,2.88,try to
36.48,3.52,understand and document the data
38.64,4.56,requirements of those
40.0,5.6,database users the result of this step
43.2,3.76,is the data requirements of the users
45.6,3.36,written concisely
46.96,3.04,or written in brief or requirements
48.96,3.599,written in short
50.0,3.68,yet contains every detail and
52.559,3.441,information
53.68,3.359,along with specifying the user's data
56.0,3.28,requirements
57.039,3.52,the functional requirements also have to
59.28,3.919,be specified
60.559,4.0,these functional requirements consists
63.199,3.841,of user-defined
64.559,3.281,operations that has to be applied to the
67.04,3.2,database
67.84,4.16,and it could also include retrieval and
70.24,3.36,updation of data
72.0,3.119,once all these requirements are
73.6,3.76,collected and analyzed
75.119,4.0,the next step is to create a conceptual
77.36,4.48,schema for the database
79.119,3.521,using high level or conceptual data
81.84,3.04,model
82.64,4.72,we have already seen what a high level
84.88,5.12,or a conceptual data model is
87.36,4.24,a high level data model is a data model
90.0,4.88,that provides concepts
91.6,4.8,close to the way how users persist data
94.88,4.879,or how users see
96.4,4.8,data so using this model a conceptual
99.759,3.36,schema is created
101.2,3.76,and this particular step is called the
103.119,4.161,conceptual design
104.96,3.36,this step is for creating conceptual
107.28,3.92,schema
108.32,4.24,a conceptual schema is a concise or a
111.2,4.16,brief description
112.56,5.04,of the data requirements and detailed
115.36,5.039,description of the entity types
117.6,4.559,relationships and constraints you will
120.399,3.68,understand this better with an example
122.159,4.64,that we will be seeing later
124.079,3.281,as we saw these concepts are expressed
126.799,3.201,using
127.36,4.879,high level or conceptual data model and
130.0,4.0,because these concepts do not contain
132.239,4.161,the implementation details
134.0,4.72,they are easier to understand and also
136.4,4.24,they can be communicated easily with the
138.72,3.28,non-technical users
140.64,3.599,we saw that in the functional
142.0,3.28,requirements the user-defined operations
144.239,4.0,are specified
145.28,5.679,so during or after the conceptual design
148.239,4.64,basic operations are used to specify the
150.959,4.64,user-defined operations that we
152.879,4.961,identified during functional analysis
155.599,3.761,the next step in the database design is
157.84,4.479,logical design
159.36,4.159,this step is the actual implementation
162.319,4.961,of the database
163.519,4.401,using commercial dbms like microsoft sql
167.28,4.72,server
167.92,7.2,oracle etc most commercial dbms
172.0,4.08,uses implementation data model again we
175.12,3.199,have seen what an
176.08,3.68,implementation data model is in our
178.319,3.84,earlier videos
179.76,4.24,so here the conceptual schema is
182.159,4.72,transformed from the high level
184.0,3.36,data model into the implementation data
186.879,2.801,model
187.36,3.2,and this step is called as a logical
189.68,3.52,design or
190.56,3.039,data model mapping the result of this
193.2,2.24,step
193.599,3.841,is a database schema in the
195.44,5.04,implementation data model of
197.44,5.12,dbms so here we had a conceptual schema
200.48,4.16,and the high level data model which is
202.56,3.92,transformed to a database schema in the
204.64,4.8,implementation data model
206.48,3.759,the last step is the physical design in
209.44,4.0,this step
210.239,6.64,the internal storage structures indexes
213.44,6.24,access parts of the files are specified
216.879,4.241,along with these activities application
219.68,3.919,programs are designed
221.12,4.759,and implemented as transactions
223.599,3.681,corresponding to these transaction
225.879,3.961,specifications
227.28,3.76,so this is a very simple overview of the
229.84,3.84,database design
231.04,4.0,process before we see an example of a
233.68,4.639,database application
235.04,6.399,let us see what weak entity types are
238.319,3.84,weak entity types are entity types that
241.439,3.44,do not
242.159,4.0,have key attributes of their own in
244.879,4.241,contrast to this
246.159,3.841,the entity types that have their own key
249.12,4.08,attributes
250.0,6.56,are called as strong entity types
253.2,6.08,the entities of weak entity types
256.56,3.6,identify themselves by relating to
259.28,3.6,entities of
260.16,3.759,another entity type and this other
262.88,3.759,entity type
263.919,3.121,is called the identifying entity type or
266.639,3.28,the
267.04,3.52,owner entity type and the relationship
269.919,3.601,between
270.56,3.359,a weak entity type to its owner entity
273.52,3.28,type
273.919,5.681,is called the identifying relationship
276.8,4.48,so this is about the weak entity types
279.6,3.599,now let us look into the different
281.28,5.359,symbols that we use in the er
283.199,4.161,diagram first one is entity we already
286.639,3.441,learned what an
287.36,3.36,entity is it is a thing or an object
290.08,2.72,that has
290.72,3.28,existence and it is represented by a
292.8,3.679,rectangle
294.0,3.12,this regular entity is also called as a
296.479,4.081,strong
297.12,5.6,entity next we have weak entity we just
300.56,4.16,saw what weak entity types are
302.72,3.12,and it is represented by double
304.72,3.199,rectangle
305.84,3.6,then we have attribute which is the
307.919,4.881,property to describe an
309.44,5.68,entity and it is represented by an oval
312.8,4.64,and a key attribute which helps in
315.12,4.96,identifying an entity uniquely
317.44,3.52,is represented by an oval with the
320.08,3.04,underline
320.96,5.12,under the name of an attribute that
323.12,5.28,helps to identify an entity uniquely
326.08,3.04,the next symbol is the multi-valued
328.4,2.799,attribute
329.12,4.32,that contains a set of value for a
331.199,2.641,particular entity and it is represented
333.44,3.28,by
333.84,4.16,double oval then we have the composite
336.72,3.52,attribute which is an
338.0,4.639,attribute that can be divided into
340.24,4.72,further attributes
342.639,5.12,next is the derived attribute which is
344.96,3.36,an attribute whose value is derived from
347.759,2.641,another
348.32,3.52,attribute and it is represented by a
350.4,3.6,dashed oval
351.84,3.199,and finally we have the identifying
354.0,2.72,relationship
355.039,4.16,earlier in this video we have already
356.72,4.88,seen what is identifying relationship
359.199,4.72,a relationship between a weak entity
361.6,4.159,type and the owner entity type or the
363.919,3.441,strong entity type is called the
365.759,3.921,identifying relationship
367.36,3.119,and it is represented by a double
369.68,2.959,diamond
370.479,4.801,and the relationship between the regular
372.639,6.321,entity types or the strong entity types
375.28,6.479,are represented by just a single diamond
378.96,3.92,now let's look into a sample database
381.759,3.28,application
382.88,3.36,let us see an example database
385.039,3.44,application called
386.24,3.679,company here we have considered a
388.479,4.081,company database
389.919,4.481,and a company database keeps track of
392.56,5.199,the company's employees
394.4,5.44,departments projects and dependents
397.759,3.28,the first step that we learnt in the
399.84,3.199,database design
401.039,4.081,process is requirements collection and
403.039,5.201,analysis so the requirements
405.12,6.079,gathered are as follows the company
408.24,3.76,is organized into different departments
411.199,4.241,and each
412.0,6.319,department has a unique name a unique
415.44,4.879,number and a particular employee who
418.319,4.961,manages the department
420.319,4.241,we also keep track of the start date of
423.28,3.68,the manager or the
424.56,4.639,employee who manages the department and
426.96,5.44,a department may have several
429.199,5.681,locations this is one of the requirement
432.4,4.639,the next requirement is a department
434.88,5.599,controls number of projects
437.039,6.481,each of which has a unique name unique
440.479,4.0,number and a single location the next
443.52,3.679,requirement is
444.479,3.761,we store employee details like the
447.199,3.44,employee name
448.24,4.88,the social security number which is
450.639,4.96,definitely unique for each employee
453.12,4.16,sex or the gender of the employee and
455.599,4.641,salary details
457.28,3.359,we keep track of the number of hours per
460.24,3.519,week
460.639,6.081,an employee works on each project
463.759,4.16,we also keep track of each employee's
466.72,3.199,dependence
467.919,3.601,now an employee's dependence could be
469.919,4.4,their spouse parents
471.52,3.359,or children or anyone that is dependent
474.319,3.681,on this
474.879,6.0,employee we need each dependence first
478.0,3.759,name sex and relationship to the
480.879,2.72,employee
481.759,3.84,so these are the requirements gathered
483.599,3.6,for the company database
485.599,4.16,the next step after collection of
487.199,4.241,requirements was conceptual design
489.759,3.28,so based on the requirements that we
491.44,3.92,have gathered let us see
493.039,4.16,the initial conceptual design of the
495.36,5.119,company database
497.199,5.521,we can identify four entity types based
500.479,5.361,on the requirements that we gathered
502.72,5.199,the first entity type is the department
505.84,3.199,this entity type has attributes like the
507.919,4.401,department name
509.039,5.44,department number locations an employee
512.32,3.279,who manages the department or otherwise
514.479,3.12,called the manager
515.599,4.56,and the manager start date since
517.599,4.88,department can have several locations
520.159,3.041,this attribute is a multi-valued
522.479,3.841,attribute
523.2,5.199,and hence represented by a double oval
526.32,3.44,in our requirements we had specified
528.399,3.681,that the department name
529.76,3.759,and number has to be unique and since
532.08,2.64,they are unique they are the key
533.519,3.521,attributes for this
534.72,4.559,entity type so either the department
537.04,4.479,name or the department number can be a
539.279,4.801,key attribute for this entity
541.519,3.44,the next entity type identified is
544.08,3.759,project
544.959,3.44,this entity type has attributes project
547.839,3.041,name
548.399,4.401,project number location and the
550.88,3.84,controlling department
552.8,4.08,again based on the requirements the
554.72,2.96,project name and the number has to be
556.88,2.8,unique
557.68,3.12,so any one of this can be a key
559.68,4.56,attribute for this
560.8,4.479,entity the third entity type is employee
564.24,3.44,with attributes
565.279,4.081,employee name specifying the first name
567.68,4.8,middle name and last name
569.36,5.68,the ssn or the social security number
572.48,3.52,which is unique for each employee the
575.04,4.0,sex or gender
576.0,5.36,of the employee salary details date of
579.04,5.04,birth or birth date of the employee
581.36,4.96,the department the employee works in and
584.08,5.199,the project an employee works on
586.32,5.12,along with the hours spent so here the
589.279,4.24,social security number is unique and
591.44,2.959,hence it is a key attribute for this
593.519,3.521,entity type
594.399,3.12,employee the fourth and the last entity
597.04,3.359,type
597.519,3.76,identified is dependent with attributes
600.399,4.0,employee
601.279,5.841,dependent name sex birth date
604.399,4.081,and relationship to the employee since
607.12,4.08,this entity type
608.48,5.12,do not have their own key attributes it
611.2,4.319,is a weak entity type and is represented
613.6,4.64,by a double rectangle
615.519,3.841,so this weak entity type has a partial
618.24,3.599,key the dependent
619.36,4.08,name because it is partially unique and
621.839,4.081,can be combined with a strong
623.44,3.519,entity type to uniquely identify its
625.92,3.68,entities
626.959,4.161,so this is an initial conceptual design
629.6,4.64,of company database
631.12,5.04,application that's all with this video
634.24,3.2,here we discussed an overview of the
636.16,3.679,database design
637.44,4.48,process and based on that we saw an
639.839,3.761,example of a company database
641.92,3.919,application with the requirements
643.6,3.919,gathered also we saw the initial
645.839,2.801,conceptual design of the company
647.519,3.201,database
648.64,4.56,we also learnt in this video about the
650.72,4.72,symbols used in the er diagram
653.2,4.24,in the next video we will be learning
655.44,4.8,the concept of relationships
657.44,5.12,and once we learn that we will see an er
660.24,2.719,diagram of the company database that we
662.56,2.8,just
662.959,4.081,discussed hope you all are clear with
665.36,2.4,the concepts that we discussed in this
667.04,7.02,video
667.76,11.6,thank you
674.06,7.38,[Music]
679.36,2.08,you
