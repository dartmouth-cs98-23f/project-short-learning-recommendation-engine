hci lesson 15
10 usability heuristics for user
interface design
by nielsen introduction
jacob nielsen's 10 general principles
for interaction design
they're called heuristics because they
are broad road rules
broad rules rather obtain and not
specific usability
guidelines so here are the 10
general principles or heuristics by
nielsen
so number one visibility of system
status
the design should always keep users
informed
about what is going on through
appropriate
feedback within a reasonable amount of
time so when users know the current
system status
they learn the outcome of their prior
interactions
and determine next steps
predictable interactions create trust in
the product as well as the brand
so here are some tips number one is
communicate clearly to users
what the system's status no action with
consequences to users
should be taken without informing them
present feedback to the users as quickly
as
possible so ideally it should be
immediately
build trust through open and continuous
communication
now here's a real world example of using
this heuristic
so let's say for example in billboard or
in malls
so say see you are here so you are here
indicators on mall maps
how to show people where they are where
they currently are
to help them understand where to go next
so that's an example of visibility of
system
status
number two match between system
and the real world the design
should speak the user's language use
words
phrases and concepts familiar to the
user
rather than internal jargon
follow real world conventions
making information appear in a natural
and logical order
[Music]
the way you should design depends very
much on your specific users
terms concepts icons and images
that seem perfectly clear to you and
your colleagues
may be unfamiliar or confusing to your
users
when it designs controls follow
real-world conventions and correspond
to desired outcomes called natural
mapping
it's easier for users to learn and
remember
how the interface works this helps
to build an experience that feels
intuitive tips
ensure users can understand meaning
without having to go
look up a word's definition
never assume you understanding your
understanding of words
or concepts will match those of your
users user research will help you
uncover your users
familiar terminology as well as
their mental models around important
concepts
so here's an example of matching the
the system and the real world so when
oval
when soap stop controls so so these are
stove stock controls
much delay out of heating elements
that's why this is for this
and this control is for that this one's
for this and 40 so
it matches the layout so users can
quickly understand
which control maps to which heating
element so rather than having this maybe
in straight line
this one is better because it matches
the layout of the heating
element so that's an example of applying
this rule
number three user controls and freedom
users often perform actions by mistake
they need a clearly marked emergency
exit
to leave the unwanted action without
having to go through an extended
process when it's easy
for people to back out of a process or
and do an action
it fosters a sense of freedom and
confidence
exits allow users to remain in control
of the system
and avoid getting stuck and feeling
frustrated
tips support and do and redo
so that will of course make it easy for
us to
undo our mistakes and maybe we do
if it is okay show a clear way to exit
the current interaction like a cancel
button
and make sure the exit is clearly
labeled and discoverable
so here's an example so again digital
spaces
needs quick emergency exit just like
this physical spaces do
so for us the it would be
nice to know if you know that there are
emerging emergency exits
in a building so in case of emergency
you know where to
go out but the same is true with
software or design so there should be a
way for users
to get out of whatever they are in
so like cancel buttons or maybe you
committed a mistake you can undo
your errors so this is about user
control
and freedom the number four consistency
and standards users should not have to
wonder whether different
words situations or actions mean the
same thing
you have to follow platform and industry
conventions
jacob's law state that people spend most
of their time using digital products
other than yours so there they might be
using other products
than what you are using so users
experiences
with those other products set their
expectations
failing to maintain consistency may
increase the user's cognitive load
by forcing them to learn something new
so don't think that what you are using
is also what
they are using so again
you have to uh follow
standards and to be consistent so that
you will not be increasing the cognitive
load of users
so here are some tips improved
learnability by maintaining both
types of consistency which are the
internal and external consistency
maintaining consistency within a single
product
or a family of products is internal
consistency
so if you have a product or a group of
products then
there's some there should be something
consistent with
these products or the external one
so follow established standard in that
industry rather conventions
so these are external consistency so
what
is the industry doing so whatever the
industry is doing
you have to follow these conventions
especially if this is the acceptable
convention
so example of visibility heuristics
number four
checked encounters are usually located
at the front of hotels
this consistency meets customers
expectations so
if you are a customer you would expect
that the check encounters will be at the
front of
the hotels because that's the standard
so if you're going to arrange your if
you have a hotel
then you should place you should always
place your check encounter
at the front of hotels
so that's following standards
number five excuse me number five is
about error prevention
good error messages are important but
the best designs
carefully prevent problems from
occurring in the first place
so not just showing error messages but
we should prevent
the occurrence of errors either
eliminate
error prone conditions or check for them
and present users with the confirmation
options
before they commit to the actions
there are two types of errors slips and
mistakes slips are unconscious errors
caused by inattention so mistakes
are conscious errors based on a mismatch
between the user's mental model
and the design so these are the
difference
sleep again you're unconscious about it
but in mistake you're conscious about it
but unfortunately what you know
is not um
it's not about uh it's not much demand
the design
so tips prioritize your effort
prevent high cost errors freeze then
little crustaceans so
if you're creating and for example if
you're creating a
data entity program so you should your
program should validate the entries of
users first before
you will be able to see avoid slips by
providing helpful constraints
and good defaults
prevent mistakes by removing memory
burdens
supporting undo and warning your
users
so here's an example a real world
example
so guard rails so these are your
the orange one on a curvy mountain road
prevent drivers from falling off
clips you have to prevent them from
doing the error that is falling off
clips and what is used here are the
guard
rails number six
recognition rather than recall so
minimize the user's memory load
by making elements action and options
visible
the user should not have to remember
information from one
part of the interface to another
information required
to use the design example field labels
or menu items
should be visible to air or easily
retrievable when needed
humans have limited short-term memories
interfaces that promote recognition
reduce the amount of cognitive effort
required from the
users tips
let people recognize information in the
interface
rather than having to remember or recall
it or memorize it
offer help in context instead of giving
users a long tutorial
to memorize reduce the information
that users have to remember
so here's an example so
it's easier for most people to recognize
the capitals of the countries
instead of having to remember them so
how's that
here's an example people are more likely
to correctly answer the question
is lisbon the capital of portugal
rather than this question what's the
capital of portugal because
you say what's the capital of portugal
you have uh
you have to force the uh
the people to recall
but here they are just here to recognize
is this the capital or not
so it should be recognition rather than
recall
number seven flexibility and efficiency
of use
shortcuts hidden from novice users may
speed up
the interaction for the expert user such
that the design can cater
to both inexperienced and experienced
users
allow users to tailor frequent actions
flexible process can be carried out in
different ways
so that people can pick whichever method
works for them
tips provide accelerators like keyboard
shortcuts
and touch gestures provide
personalization by tailoring content and
functionality for individual users so
something that you can customize or
tailor
yes a little customization allow for
customizations users can make
selections about how they want the
product to work
so here's an example so this is the
regular row
for example this is the regular row so
regular rows are listed on maps
but locals so those who know the place
with more knowledge of the area
can take shortcuts so maybe instead of
doing this
they will be taking this role so that
means
that uh for experts
for those who already uh experts of the
of the software for example placing
shortcuts should be convenient to them
and that means that's flexibility and
efficiency
number eight aesthetic and minimalist
design
interfaces should not contain
information which is irrelevant
or rarely needed every
extra unit of information in an
interface
competes with the relevant units of
information
and diminishes their relative visibility
this heuristic doesn't mean you have to
use a flat design
it's about making sure you are keeping
the content
and visual design focused on the
essentials
ensure that the visual element of the
interface
support the user's primary goals
tips keep the content and visual design
of ui focus on the essentials
don't let a necessary element distract
users for
from the information they really need
prioritize the content and features to
support
primary goals
so here's an example the ornate tipa
this is the only dipa
may have excessive decorative elements
that can interfere with usability
like for example an uncomfortable handle
or hard to wash nozzles so
the nozzle may be hard to wash it looks
very good
rather than this one but you notice that
the nozzle
could be hard to wash and maybe the
handle is uncomfortable
number nine help users recognize
diagnose and recover from errors
error messages should be expressed in
plain language
there should be no error codes so
precisely indicate the problem
and constructively suggest a solution
these error messages should also be
presented
with visual treatment that will help
users notice and recognize them
so tip use traditional error message
visuals
like bold red text
and then tell users what went wrong in a
language they will understand
and you have to avoid technical jargon
and then offer users a solution
like a shortcut that can solve the error
immediately
so maybe here is a real world example it
chases you a wrong way
so a wrong way sign of the road reminds
drivers that they are
heading the wrong direction and ask them
to stop
and maybe even better if they can place
you something
maybe where is the correct way so
it is already a good example of
usability risk number nine number ten
help and documentation it's best if the
system doesn't need
any addition additional explanation
however
it may be necessary to provide
documentation to help
users understand how to complete their
tasks
help and documentation content should be
easy to search
and focus on the user's tasks keep it
concise
and list concrete steps that need to be
carried out
so here are some tips ensure that the
help documentation is easy to search
whenever possible present the
documentation in context
right at the moment that the user
requires it
so these concrete steps to be carried
out
so here's an example so information
kiosks
at airports are easily recognizable and
sold customers problem in context
and immediately so just imagine if you
don't have
something like this in airports or
maybe even schools so there should be
something like this that
are ready to help maybe students
so just a note to end this uh
video presentation nielsen originally
developed the heuristics for heuristic
evaluation in collaboration with rolf
molik
in 1990 so that's molly nelson 1990
and yeah four years later
nelson refined the heuristics based on a
factor analysis of 249 usability
problems
it's the nielsen 1984a to derive a set
of heuristics
with maximum explanatory power resulting
in this revised set of heuristics
the 10 hero 6 themselves have remained
relevant
and unchanged since 1994. when something
has remained true for 26 years
or more than more than 26 years it will
likely
apply to future generations of user
interfaces as well
that ends my video presentation thank
you very much for viewing this video
