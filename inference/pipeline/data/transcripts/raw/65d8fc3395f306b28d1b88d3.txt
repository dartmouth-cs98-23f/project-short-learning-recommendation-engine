Welcome to Pirate King
I'm Daniel a Software Engineer at Microsoft
ex-Software Engineer at Amazon and ebay and
also a Software Engineering Mentor at two
educational startups
In this video I'm going to talk about the
best programming languages you should learn
as a beginner
Whether as a hobby a student or someone who's
seriously considering making a career transition
etc.
Programming languages
You've heard about them
C, C++, Objective-C, C#, F#, Java, JavaScript,
Python, Swift, HTML, CSS, SQL, Go, Kotlin,
Ruby, Scala, Perl
I mean holy 💩
The sheer list itself is overwhelming
There's just so many of them
And guess what?
That's not all!
You obviously don't have the time to learn
all those
So which language should you focus now as
a beginner?
What is the best language for setting that
first step in a particular industry?
Or which ones should you avoid as your first
language?
Well let's find out
First off here's the list of programming scripting
and markup languages that I know
In the order of most popular technologies
list in the survey of 2021 Stack Overflow
JavaScript, HTML, CSS, Python, SQL, Java,
Node.js, TypeScript, C#, Bash, C++, C, and
PowerShell
Most of which I've used professionally
Some of which I've used on my personal project
or learned myself
Just to set the right expectations here
There's no such thing as the ultimate programming
language
This language is the best
That language is the worst
This one sucks the most 🤮
There are obviously pros and cons for each
programming language
And even a language that's worst to learn
can actually be the best to use for certain
situations
For the purpose of this video
I've personally curated six programming languages
that are best for beginners to learn in terms
of
Popularity Utility and Relevance
Popularity Is it commonly used?
Utility Is it widely used?
Relevance Is it future-proof?
I'll give tailored suggestions for each language
in terms of these criteria
So given your current situation personal preference
or the type of industry you're interested
in
You can decide which suits you the best
Before I tell you which languages are the
best
Let me first tell you the two languages you
should definitely avoid as a beginner
At least not until you are quite comfortable
with the ones I'm about to mention
They are C++ and C
Why not C++?
You know C++ is the language that started
the OOP object oriented programming paradigm
There’s no doubt about that
But because it’s the language that started
it all
It’s also the most premature of all compared
to other languages that came after it like
Java and C# in terms of its syntax
I mean C++ is probably one of the most convoluted
and difficult-to-write programming languages
out there
I’ve talked to some of the skilled professionals
and senior C++ engineers in Microsoft before
Despite developing with the language for more
than ten years
They admit that they still spend a fair amount
of energy and time fighting the syntax and
not the logic
That’s how bloody difficult that language
is
And I know there are a lot of universities
or institutions that still teach computer
science 101 with C++
Well shame on you!
Seriously what is your goal here?
To demotivate students and make them drop
programming courses so that you can deal with
fewer students?
I honestly can't believe it when I hear people
say programming wasn’t their thing because
they couldn’t keep up with C++ in their
introductory programming course
I mean I don’t think programming is for
everyone either
But C++ is definitely NOT the language you
expect an entry-level student to enjoy and
keep up with
But then when should learn C++?
Even though I still recommend against it
You can consider learning it as your first
language if you want to become a game developer
Why? Virtually all high-endgames are in C++
PlayStation, Xbox, Unreal Engine, CryEngine
You can script Unity games with C# or JavaScript
But guess which language Unity itself is written
in?
C++ is the choice for game development because
it offers the highest performance
You need that for gaming because all these
graphics and split second calculations solely
depend on your computer’s hardware
On the other hand Even if your computer lacks
the computing power
Ordering stuff at [amazon.com](http://amazon.com)
is not a problem because all the heavy computing's
done by their servers not your machine
Long story short
Learn C++ only if you are serious about game
development
If not try your best to avoid it
The next programming language you should avoid
as a beginner is C
But it’s such a famous language!
Well you are right
C is a good language
After all if C++ is the language that started
OOP
C is the language that started EVERYTHING
It’s the mother of all languages
However I don’t recommend it to beginners
for one reason
Pointers
You see Many college students drop their C
programming courses for the following reason
Either they encountered pointers or recursion
Recursion you just cannot avoid
But pointers you can if you learn other high-level
languages like Java and C#
In fact one of the goals in the creation of
Java was to invent a C-like language but with
a greater simplicity like removing pointers
C, C++, and pointers are all great similar
to the reasons I gave for C++
But for most beginners
You want to start off with a simple language
that helps you focus solely on learning how
programming works
Not fighting the syntax
Alright now that we’ve talked about the
two programming languages you should avoid
as a beginner
Let’s now talk about the six programming
languages I recommend to beginners
Again I’m going to talk about them in terms
of their popularity utility and relevance
So take note of their pros and cons and see
which one suits you the best
The first programming language I recommend
is JavaScript
Popularity According to Stack Overflow
It's the most commonly used language for nine
years in a row
Why is it so popular then?
Try to think of it this way
You can pretty much say that everything you
do on your browser runs on JavaScript
Chrome Edge Firefox Safari
Doesn't matter
It's not going to be a production-level website
without JavaScript
Not to mention that most software engineers
also work on web
Utility It's one of the most versatile languages
out there
I'd say shoulder to shoulder with Python
Learn React.js for frontend and Node.js for
backend
And hey you're a full-stack developer
You still need to know the markup languages
HTML and CSS
But they're hardly programming languages and
are easy to learn
Making a website with one language was never
possible before
But it is now with the debut of Node.js
What's more You can also develop mobile apps
natively for both Android and iOS using React
Native
Yes React Native is cross-platform compatible
And even develop desktop apps with JavaScript
using Electron!
Not only that
You can make games on web and Unity using
JavaScript
And lastly it's used in machine learning and
artificial intelligence too just to name a
few others
With web mobile desktop client server machine
learning and AI combined
You can pretty much dominate the entire world!
What about relevance?
Well as I've mentioned earlier
It's the most popular and commonly used programming
language now
As such it's one of the most sought-after
skills in the job market
With the language born in 1995
It's even older than some of you
And it’s pretty much everywhere on the web
With Node strong on the server side
React backed by the first letter of FAANG
on the client side
And the language itself backed by all browsers
JavaScript's simply not going anywhere
The second programming language I recommend
is Python
Popularity According to Stack Overflow
It's the third most popular language in 2021
and the most wanted language for its fifth-year
Its syntax is so simple and easy that it's
considered one of the best languages to learn
for beginners
It has a great support from the massive community
And also has thousands of free excellent libraries
out there helping you save time and focus
on development
Utility Again its versatility is shoulder
to shoulder with JavaScript
It can be used in nearly any kind of environment
including web, desktop, mobile, and hardware
Leveraged as a backend using Django or Flask
Utilized heavily in the fields of cloud computing
and big data
Not to mention that it's completely dominated
the fields of AI, Machine Learning, and Data
Science
Relevance It's one of the first languages
students choose to learn due to the high demand
in job market
And for this reason One of the core languages
schools choose to teach
Lastly it's a language that's heavily backed
by not just one but multiple companies such
as Google, Facebook, and AWS
And with a growing number of engineers choosing
Python as the language for LeetCoding
Python's not going anywhere either
If you want a language that can open up many
career opportunities and at the same time
is easy and simple to learn
Python won't disappoint you
The next two languages are those you should
learn if you are serious about becoming a
software engineer and studying computer science
in depth
You know Establishing that solid foundation
And they are C# and Java
So the third programming language I recommend
is C#
But hey I’m not recommending C# prior to
Java simply because I work at Microsoft
My mother language is Java
I learned it in university
Have some experience developing android apps
and servers with it
And while many of you have seen that blue
coffee cup with red steam coming out of it
at some point in your life
The only thing you can recall about C# is
probably that tricky note you've learned to
play back in your middle school music class
Yes Java was the more famous one It was the
better one
In fact C# benchmarked Java
But the thing is
C# has not only caught up but also gotten
better
There are many features C# provides that Java
does not or were added after C#
For example
Properties in classes
Extension methods
Generics with primitive types
Async and await keywords
LINQ
Much better lambda
The var keyword
To name a few
Long story short There are obviously pros
and cons to C# as well
But for learning a new language as a beginner
Which by the way is the point of this video
C# beats Java in my honest opinion
So let's go back to popularity utility and
relevance
Popularity According to Stack Overflow .NET
Core is the most loved library
Guess which language it's written in? C#
C# also tops the most commonly used language
in the survey although it's behind Java
But we'll get to that later
But just think about why people "love" it
the most
It's probably because it's easy simple and
convenient to use in many aspects
Which can translate to easy simple and convenient
to learn in many aspects
Utility C# is surprisingly versatile for a
strongly- and statically-typed language
You can build Windows applications
Backend servers
Cloud apps on Azure
Native mobile apps for both Android and iOS
via Xamarin
Games with Unity
Internet of Things etc.
Relevance People also refer to C# tech stack
as Windows stack
Well cuz Microsoft developed it and you need
C# to develop Windows things
Just like JavaScript and Python
C# is used pretty much everywhere as well
It's open source
And with Microsoft backing it
It's a damn good core language to learn
The fourth programming language I recommend
is Java
Like I said earlier
Java was ahead of C# in terms of features
But now it's behind C# in my opinion
Some people attribute the outcome in Oracle's
acquisition of Java
And Microsoft's decision to go open source
with C#
Whether that's true or not
I don't know
But the good news is
I still find Java to be an excellent language
to learn
Popularity According to Stack Overflow
It's the fifth most popular language and the
most popular strongly- and statically-typed
language even beating C#
But if C# is so loved by the developers
How come it falls behind Java in popularity
ranking?
I would say it's because Java had been dominant
for a good number of years
I mean I've seen big guys like Google Facebook
Amazon use Java and other languages before
But I've never seen or heard a single one
of them use C#
C# is simply not the top language of choice
for the big players
Maybe because Microsoft is their direct competitor?
Not 100% sure but Java's also been around
before some of you were even born
And how does the developer's most beloved
language or framework matter when they're
not so much loved by the employers? 🤷
Utility Java's ubiquitous
More than three billion devices run Java according
to Oracle
Many server applications are written in Java
using frameworks like Spring
And most importantly
You need Java for Android development
I know the official language for Android has
recently changed to Kotlin
But Java's still a dominant language regardless
and one with a great online community for
support
Relevance Java continues to be one of the
most used development platform
Lots of Android apps are built with Java
Many schools still teach computer science
with Java as the primary language
Not to mention a huge community it's cultivated
over the decades
Backed by Oracle itself
Java's still a solid core language to learn
with a strong demand in the job market
The fifth programming language I recommend
is Swift
So you might think this is an odd choice
And I agree in a sense that Swift is mainly
used for Apple devices
But Apple indeed is one of the FAANG
And we can no longer talk about a computer
a phone or even a watch without Apple
And if I'm going to include Java in my list
of recommended programming languages for Android
I figured it's only fair of me to include
Swift for iOS
Because after all there might be some of you
out there who want to become Apple developers
🍎
So Popularity Is it really popular?
With the popularity index at 5.1% at Stack
Overflow
I wouldn't say so
But I guess it's not a matter of popularity
but necessity because it's what Apple uses
to write their own software
It's like when you join Microsoft you have
no option but C#
Utility You can use the language to develop
native apps for iOS Mac Apple TV and Apple
Watch
I've never done it myself personally
But I guess it's kinda cool
Relevance
Hey the 2 trillion-dollar company is not going
anywhere anytime soon
The last programming language I recommend
is SQL
I don't know why but for some reason it's
pronounced Sequel not S.Q.L.
But we write S.Q.L. 😕
So what is SQL?
It stands for Structured Query Language
A programming language used to communicate
with relational database
And it's also the language you need to know
in order to call yourself a full full-stack
engineer because SQL falls within backend
Now it's true that companies are shifting
towards NoSQL nowadays
But in my honest opinion SQL or NoSQL
They're the same 💩
You can pretty much think of NoSQL as a simple
SQL where you won't likely have to do complex
joins anymore
You see even for apps that use relational
databases
Writing complex queries joining multiple tables
indexing a particular column where having
group order by ugh is old school
All developers universally want the same thing
Simplicity
Select * from table where partition key equals
whatever is pretty much all you need to put
SQL down on your resume
Popularity utility relevance
Again databases are essential
Your app's not gonna do much without them
It's for the same reason you need to know
how to query a database
And it's going to follow you everywhere due
to its necessity
Alright so we've taken a look at the two programming
languages you should try to avoid
And six programming languages I recommend
as a beginner
Here’s the summary
Avoid C++ due to the language's complexity
unless you aim to become a game developer
Avoid C due to pointers
Learn JavaScript or Python if you want simple
easy-to-learn languages that are versatile
has wide usage and good job prospects
Learn C# or Java if you are serious about
becoming a software engineer or learning computer
science in general
Learn Swift if you want to build Apple devices
And finally learn SQL to understand how databases
work
Most importantly understand this
Whatever the language you decide to work with
Try to stick to it
Don't give up midway
As a Software Engineer
The ability to stick to one thing no matter
the obstacles you face is an important skill
I promise you
If you get proficient with even one of the
programming languages I've mentioned earlier
(except for SQL)
Learning any other language will be a breeze
The six languages are what I would consider
the core mainstream ones in 2021
There are other great programming languages
out there
I simply don't know enough about them to give
any kind of recommendations
But again starting with any one of them in
the list is sufficient
If you liked my video hop on board
I invite you to be our next nakama
Thanks for watching
I'll see you on the next one
Bye
