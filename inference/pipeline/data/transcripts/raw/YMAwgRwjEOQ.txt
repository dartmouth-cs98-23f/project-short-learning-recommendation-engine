second,duration,transcript
0.0,4.259,hey friends welcome back to the channel
1.86,5.1,so in today's video we're going to talk
4.259,4.26,about design patterns now high level
6.96,4.2,programming languages have been around
8.519,3.961,since around the 1950s and since then
11.16,2.76,programmers have been using them to
12.48,3.719,solve all sorts of different problems
13.92,3.66,over time programmers have realized that
16.199,3.241,even though the problems are unique
17.58,3.959,there's often some similarities between
19.44,3.96,the problems and the solutions they're
21.539,4.08,not exactly the same so you can't create
23.4,4.619,a library or use an algorithm to solve
25.619,4.561,it instead they would reuse some of the
28.019,3.541,main ideas of the solution for the
30.18,3.78,different problems that they come across
31.56,4.32,and eventually names were given to these
33.96,4.2,typical Solutions and that is how design
35.88,4.44,patterns were born so what is a design
38.16,3.84,pattern if you're struggling to work out
40.32,3.84,the difference between a design pattern
42.0,4.079,and an algorithm then maybe this analogy
44.16,3.96,will help so let's say it's my birthday
46.079,3.901,tomorrow and my wife is going to bake me
48.12,3.599,a birthday cake to do this you might
49.98,4.44,follow a recipe and this is going to
51.719,4.921,give a step-by-step instructions on how
54.42,3.9,to bake that cake the recipe in this
56.64,3.84,case is an algorithm it's giving you
58.32,4.2,step-by-step instructions on how how to
60.48,4.56,bake a cake you can repeat over and over
62.52,3.959,again to produce the same thing sure you
65.04,3.3,might switch out some of the ingredients
66.479,4.201,to produce different cakes but these are
68.34,4.319,really just different input variables as
70.68,4.56,it's my hypothetical birthday I also
72.659,4.021,want to have a birthday party now if you
75.24,2.82,think about a birthday party in your
76.68,3.479,head you're probably thinking about
78.06,3.66,balloons and Banners and maybe someone
80.159,3.301,with a cake with candles on it coming
81.72,4.5,out at least that's what you all think
83.46,4.14,about now but everybody's idea of a
86.22,3.539,birthday party is going to be different
87.6,3.78,there's no set steps to follow there's
89.759,4.201,no recipe like you have with a cake
91.38,4.62,essentially a birthday party is going to
93.96,3.479,be different for every person like the
96.0,3.36,problems that we face in software
97.439,3.781,engineering but let's imagine that you
99.36,3.36,have this amazing superpower that lets
101.22,3.42,you see what everyone else is thinking
102.72,3.66,if everyone's thinking about a birthday
104.64,3.659,party even though they're very different
106.38,4.019,you would still recognize it as a
108.299,4.381,birthday party the birthday party in
110.399,4.141,this case is a design pattern it's the
112.68,4.02,concept of a birthday party that can be
114.54,3.899,reused even if everything else is
116.7,3.72,slightly different hopefully that
118.439,3.481,analogy makes sense but if it does let's
120.42,4.739,have a look at what the design patterns
121.92,5.699,actually are in 1994 four authors wrote
125.159,4.761,down 23 design patterns in the book
127.619,4.26,design patterns elements of reusable
129.92,3.88,object-oriented software
131.879,3.601,now obviously that's a bit of a mouthful
133.8,4.079,it's not something you can talk about at
135.48,4.32,a party for example so most people call
137.879,3.301,it the gang of four book if you've been
139.8,3.12,programming for a little while already
141.18,3.419,chances are you've probably already used
142.92,3.6,some of the design patterns even without
144.599,4.201,realizing it most of them are actually
146.52,3.84,just common sense I know when I first
148.8,3.54,started looking at them I recognized
150.36,3.78,them immediately for patterns I use in
152.34,3.96,my own code even if I gave them a
154.14,4.14,slightly different name so we have 23
156.3,4.019,design patterns and these are split into
158.28,4.02,three main groups we have the creational
160.319,4.441,design patterns so these relate to
162.3,4.74,creating objects in your code we have
164.76,3.66,the structural design pattern so how we
167.04,3.839,actually structure those objects
168.42,4.08,especially when they get quite large and
170.879,3.301,finally we have the behavioral design
172.5,3.12,patterns that covers the interaction
174.18,3.36,between those objects and their
175.62,3.6,responsibilities now you might be
177.54,3.419,looking at this list and thinking wow
179.22,4.019,I'm never going to remember any of those
180.959,5.101,but no one's really expecting you to
183.239,4.681,know all 23 design patterns but it's
186.06,3.66,worth looking through them all and being
187.92,3.539,familiar with them so that when you do
189.72,3.239,have a problem you can think ah that
191.459,3.481,sounds a bit similar to this design
192.959,3.601,pattern and then you can go look it up
194.94,3.96,and learn a bit more and see if it
196.56,4.02,applies and the thing is out of all of
198.9,3.419,these different design patterns there's
200.58,4.14,only really five that I find myself
202.319,3.901,using over and over again so let's have
204.72,3.0,a look at those so the first design
206.22,3.78,pattern we're going to look at is the
207.72,4.32,strategy pattern now let's go back a bit
210.0,3.959,to that cake baking analogy let's say
212.04,3.479,you love cake so much that you decide to
213.959,3.961,write an application that will give you
215.519,4.381,cake recipes so let's say you start off
217.92,3.78,with a birthday cake recipe but later
219.9,4.5,you want to add in a red velvet cake and
221.7,4.319,then a carrot cake now you could just do
224.4,3.66,this with if statements and switch
226.019,4.08,statements and add in all the cakes that
228.06,3.959,way but then you want to add in a coffee
230.099,4.021,cake and a lemon cake and all of these
232.019,4.021,different cakes and eventually your code
234.12,3.78,ends up more like spaghetti than cake
236.04,4.14,and it's all going to get really really
237.9,3.66,messy and the thing is the code in your
240.18,3.36,application shouldn't really care too
241.56,3.899,much about which cake you pick this is
243.54,3.479,where the strategy pattern comes in you
245.459,3.36,can split all of those cakes into their
247.019,4.261,own classes and have each of them
248.819,4.381,implement the same methods and then when
251.28,3.48,it comes to the making a cake all you
253.2,3.719,have to do is run two methods get
254.76,3.719,ingredients and get method and this is
256.919,2.94,really useful if you have multiple ways
258.479,3.6,of achieving the same thing in your
259.859,3.721,application let's say you've got a Maps
262.079,4.56,application and you want to provide
263.58,5.16,navigation via walking via car via
266.639,3.901,cycling they're all going to have the
268.74,3.12,same sort of functions but the actual
270.54,3.3,implementation is going to be different
271.86,3.24,for each of them this is definitely one
273.84,3.6,pattern that's worth having in your
275.1,4.02,toolbox to help you rightly encode the
277.44,3.06,next pattern that I use the most is The
279.12,3.48,Decorator pattern
280.5,3.84,now if you need to extend an object
282.6,3.659,without actually changing the original
284.34,3.72,implementation then The Decorator
286.259,3.361,pattern is one way to do that now I've
288.06,3.9,mentioned The Decorator pattern before
289.62,3.72,in my video about solid as it's one of
291.96,3.12,the ways that you can make your code
293.34,3.66,open to extension but close to
295.08,3.839,modification I'll put a link at the end
297.0,3.72,of the video to the solid video If you
298.919,3.06,haven't watched it already again this is
300.72,3.96,one of the patterns that I've used
301.979,4.681,without realizing it before whenever you
304.68,3.72,wrap a class in another class you're
306.66,3.72,effectively using The Decorator pattern
308.4,3.54,the way we normally do this is to have
310.38,3.36,The Decorator implement the same
311.94,3.78,interface as the component you want to
313.74,4.14,extend and then in The Decorator
315.72,3.96,Constructor we take in that component as
317.88,3.36,an argument you can then implement the
319.68,3.239,interface and still be able to call the
321.24,3.36,original component but now you can add
322.919,3.361,in additional functionality either
324.6,3.9,before or after you make that call
326.28,4.08,number three is the Observer pattern
328.5,3.66,this pattern is something you're
330.36,3.0,probably very familiar with already even
332.16,3.36,if you've never actually used this
333.36,3.96,pattern before the Observer pattern is
335.52,3.66,used whenever you want to notify
337.32,3.9,interested parties that something has
339.18,4.019,happened if your subscriber to my
341.22,3.419,newsletter the Curious engineer then
343.199,3.901,every Sunday you will get an email from
344.639,5.041,me it's not sent to everyone who watches
347.1,4.62,my YouTube videos or reads my blog it's
349.68,4.019,only sent to those select few who have
351.72,3.78,subscribed to my newsletter this is how
353.699,4.44,the Observer pattern works you have a
355.5,4.68,publisher that implements the Subscribe
358.139,4.141,unsubscribe and notify subscriber
360.18,4.14,methods you then have a subscriber
362.28,4.32,interface that all the subscribers need
364.32,4.5,to implement to let the publisher notify
366.6,4.319,them when a subscriber subscribes to a
368.82,3.84,publisher they get added to an array and
370.919,3.601,then all the publisher needs to do is to
372.66,4.08,Loop through that array calling the
374.52,3.3,update method on all the subscribers now
376.74,3.12,the next pattern that we're going to
377.82,4.08,look at is the Singleton pattern now
379.86,4.26,when we think about Singleton's we think
381.9,3.9,about creating one thing of course we
384.12,3.359,have things like Global variables that
385.8,3.72,you can specify and be able to access
387.479,3.601,anywhere in your code the problem with
389.52,3.119,that is you can also change it anywhere
391.08,3.899,and that causes lots of different
392.639,4.5,problems but there are cases where we do
394.979,3.421,need to have a single object and make
397.139,3.241,sure that we have a single object
398.4,4.5,everywhere such as if you've got a
400.38,4.14,database that you want to access you
402.9,3.359,don't want a different connection to the
404.52,3.66,database for every single time that
406.259,3.601,someone needs to use it the typical way
408.18,3.9,to do this is to create a sealed class
409.86,3.72,with a private Constructor having a
412.08,3.48,private Constructor means that no one
413.58,3.72,outside of the class can create a new
415.56,4.8,instance of it so you can't do new
417.3,5.22,whatever you then create a separate
420.36,4.619,method or a property that lets you
422.52,4.14,create an instance of that class this is
424.979,3.78,then stored in a static variable inside
426.66,4.08,the class the problem with this code is
428.759,3.78,is not thread safe you could have two
430.74,3.78,threads call this code at exactly the
432.539,4.081,same time they both reach that null
434.52,4.26,check the instance would be null and
436.62,4.079,they'd end up creating two instances of
438.78,3.419,the same object now to get around this
440.699,3.78,we need to have some form of locking
442.199,4.261,mechanism so we need a way to stop the
444.479,3.84,other threads from accessing the code if
446.46,3.48,one of the threads is already there so
448.319,4.5,to do this we have the same initial null
449.94,4.68,check but then we implement the lock and
452.819,3.301,then we check again to see whether the
454.62,3.24,instance is still null before then
456.12,3.299,creating it and this will prevent the
457.86,2.94,two threads from creating separate
459.419,3.441,instances of the object
460.8,4.799,another way to do this if you're using C
462.86,4.36,sharp.net4 is with the lazy type it's
465.599,3.421,still thread safe but it uses a lot less
467.22,3.78,code the last pattern that we're going
469.02,4.019,to look at is the facade pattern now
471.0,3.78,this is one that's essential to software
473.039,3.901,development and everyday life in general
474.78,4.38,the facade pattern is all about
476.94,4.199,Simplicity we're constantly using
479.16,3.599,different libraries and Frameworks and
481.139,4.321,even though they save us time they can
482.759,4.5,make our code messy and complicated and
485.46,3.299,in many cases the libraries do a lot
487.259,3.361,more than we actually need them to do
488.759,3.361,let's say you're making use of a
490.62,4.38,fictional logging library that isn't
492.12,4.74,very well designed this Library can send
495.0,3.36,logs to a file it can send it to the
496.86,3.66,console and it can even send you a slack
498.36,4.8,message the problem is this log Library
500.52,4.079,only has one method called log and you
503.16,3.659,have to specify with every single
504.599,4.081,request what type of log message it is
506.819,3.541,as well as how you want to log in rather
508.68,3.659,than clutter up your code with all these
510.36,3.84,implementation details you can create
512.339,3.301,your own logger interface with simple
514.2,3.719,methods that you can use throughout your
515.64,4.139,code all of this messy code that's
517.919,4.021,caused by this bad library is then just
519.779,4.021,restricted to one class and if you do
521.94,3.839,decide to change out the logging library
523.8,3.36,then you only have one place to change
525.779,3.361,it and the rest of your code doesn't
527.16,3.9,need to be affected so these are the
529.14,3.54,five patterns that I use the most and I
531.06,3.959,know a lot of other developers do too
532.68,3.659,but there's another 18 patterns that we
535.019,3.0,haven't covered today and it's worth
536.339,3.18,having a look at them so you're familiar
538.019,3.301,with them if you have them in the back
539.519,3.241,of your mind then you might remember at
541.32,3.12,least something about them when you come
542.76,3.36,to solve a problem there's a great
544.44,3.6,website called refactoring.guru that
546.12,3.779,covers the 23 design patterns from the
548.04,3.12,book and gives examples on when you can
549.899,2.821,use them it's definitely worth
551.16,3.54,bookmarking so you can reference it
552.72,3.299,later on if you like this video as I
554.7,2.88,mentioned earlier I have a video on
556.019,3.361,solid as well that's worth looking at
557.58,4.379,thank you for watching and I'll
559.38,5.12,hopefully see you in the next video
561.959,2.541,foreign
