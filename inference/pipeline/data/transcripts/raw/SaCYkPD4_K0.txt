second,duration,transcript
0.359,4.081,how do you decide what your next step on
2.399,4.44,a project is let's hope you're not
4.44,4.159,relying on a role of the dice especially
6.839,4.321,when the decision concerns something as
8.599,5.04,costly as software development in that
11.16,4.439,case we suggest a tried and true method
13.639,3.361,like the software development life cycle
15.599,3.881,or
17.0,4.439,sdlc it's a standardized process that
19.48,5.0,describes different stages of building
21.439,5.481,highquality software sdlc was conceived
24.48,4.28,in the 1970s as a way of formulating the
26.92,3.759,development of large-scale Business
28.76,4.04,Systems but it prevails today as a
30.679,5.001,reminder of What stages a product goes
32.8,5.16,through on the way to eventual we hope
35.68,4.08,success there are many methodologies
37.96,4.72,addressing this sequence of stages that
39.76,5.279,you might have heard of so today we will
42.68,5.76,talk about the phases of sdlc and the
45.039,3.401,methodologies applying
49.81,3.87,[Music]
51.6,3.92,them the father of the software
53.68,3.8,development life cycle was a computer
55.52,4.16,scientist and a director at Lockheed
57.48,3.48,software Technology Center in Austin
59.68,4.32,when instant
60.96,4.559,wroy in his influential article managing
64.0,3.479,the development of large software
65.519,4.041,systems he described implementation
67.479,4.96,steps that are similar to what we use
69.56,5.16,today there are generally six stages of
72.439,4.761,software development covered in
74.72,4.92,sdlc planning and
77.2,5.08,Analysis it's sometimes also called
79.64,5.08,requirement analysis or has analysis as
82.28,5.04,a separate stage before or after
84.72,4.68,planning all in all at this prolonged
87.32,4.0,stage the product team collects business
89.4,4.039,and use requirements about what the
91.32,5.52,final product must do and how it should
93.439,5.481,work cost and time estimation scoping
96.84,4.319,and other planning activities all go
98.92,4.0,here this is such an extensive phase
101.159,3.481,that we have several videos covering
102.92,4.799,software planning so make sure to check
104.64,5.4,them out after this one second is
107.719,4.161,designing after the planning stage you
110.04,4.56,prepare the product's architecture and
111.88,4.64,design here a software architect
114.6,3.68,analyzes the requirements and sets the
116.52,3.8,highlevel structure of the future
118.28,3.92,systems describing what components on go
120.32,4.0,where and how they interact with one
122.2,4.239,another they will also select a
124.32,4.48,technology for development user
126.439,5.241,experience and visual design can also be
128.8,5.24,drafted at this stage clearly without
131.68,5.279,this stage the following one can't
134.04,4.44,happen the next phase development is a
136.959,3.721,stage where programmers use the
138.48,4.68,architect's design to write code that
140.68,4.8,will finally turn the vision into a real
143.16,4.56,thing this is where some aspects of the
145.48,5.119,final product will be first revealed to
147.72,5.64,stakeholders then testing more quality
150.599,4.481,assurance takes place testers and QA
153.36,4.2,professionals review the products code
155.08,4.4,and useability for bugs and errors so
157.56,4.44,they can be fixed before the next
159.48,3.96,stage deployment is when the product is
162.0,3.8,released to the
163.44,4.4,users sometimes this stage is combined
165.8,3.96,with the following one maintenance where
167.84,3.96,feedback is constantly gathered and the
169.76,5.72,product receives continuous updates and
171.8,6.079,support this includes both fixes and new
175.48,4.8,features sometimes there's a prototyping
177.879,4.481,stage between planning and designing a
180.28,4.36,prototype is a simplified version of the
182.36,4.599,product used to validate the idea before
184.64,4.519,any major work begins it doesn't even
186.959,4.2,have to be coded the design can be used
189.159,5.201,to receive feedback from stakeholders
191.159,5.201,and users a prototype is the best way to
194.36,5.4,verify requirements with minimal effort
196.36,5.879,and costs so the number of phases and
199.76,4.36,their titles can differ depending on the
202.239,4.601,specifics of the projects or a
204.12,4.64,particular methodology but a common
206.84,3.8,understanding Remains the Same you start
208.76,4.679,with a plan then then you design and
210.64,7.08,develop after that you test and then
213.439,6.561,release a product but by itself sdlc is
217.72,4.4,just a concept and it's used as a base
220.0,3.92,for several models you apply that will
222.12,6.24,give your project Clarity and help
223.92,7.2,deliver the best results so what are
228.36,4.84,they waterfall was the first software
231.12,4.88,development approach described in Rey's
233.2,5.8,article back in the 1970s and it adheres
236.0,5.2,strictly to the sdlc stages the main
239.0,4.4,idea is that each stage starts only
241.2,4.64,after the previous one is finished the
243.4,5.24,timeline due dates and deliverables are
245.84,4.28,clearly set the waterfall model was
248.64,3.519,borrowed from the construction and
250.12,3.72,Manufacturing Industries where it makes
252.159,4.281,total sense you need to wait for the
253.84,4.6,blueprints before laying any bricks this
256.44,4.24,model is very straightforward and well
258.44,4.759,defined and the team can focus on just
260.68,5.32,one phase at each point in time so the
263.199,4.241,project is easier to manage but today
266.0,4.32,it's fallen out of favor in the
267.44,4.599,engineering World why
270.32,4.08,the main reason is that it's the
272.039,4.041,opposite of flexible whenever you need
274.4,3.76,to make a change in requirements or
276.08,4.119,design you need to roll back to stage
278.16,4.56,one and do the whole cycle all over
280.199,4.521,again what if at the Finish Line you've
282.72,3.4,identified some unforeseen risks that
284.72,3.56,should have been mitigated during
286.12,4.919,planning when testing happens so late in
288.28,5.52,the process and stages don't overlap it
291.039,5.241,inevitably leads to blown deadlines and
293.8,7.52,budgets so in modern software
296.28,8.32,development a different approach is used
301.32,5.68,today agile philosophy is the king the
304.6,5.48,agile Manifesto which was written by 17
307.0,5.479,software developers in 2001 was a direct
310.08,4.72,response to the heavyweight waterfall
312.479,4.521,methodology among its 12 principles
314.8,4.119,there are calls to welcome change even
317.0,5.24,in late development stages and to
318.919,5.4,deliver software continuously and early
322.24,4.92,agile solved the waterfall drawbacks in
324.319,4.681,a few ways firstly the testing phase
327.16,4.56,isn't separate from the building phase
329.0,4.68,but rather it's done at every iteration
331.72,3.68,for example in scrum one of the
333.68,3.84,Frameworks based on agile the
335.4,3.519,development is broken down into smaller
337.52,3.6,Cycles
338.919,4.0,Sprints Sprints are considered to be
341.12,3.56,part of the scrum development framework
342.919,4.961,and they are short periods of time
344.68,5.16,typically lasting from 1 to 4 weeks at
347.88,4.319,each Sprint cycle the team Works through
349.84,4.16,all stages at the end of the Sprint the
352.199,3.881,finished piece of product is shown to
354.0,4.16,stakeholders the short feedback loop
356.08,3.959,allows devs to adapt quickly and find
358.16,4.36,new approaches faster without
360.039,4.0,compromising the delivery date another
362.52,3.36,key change that agile brought to the
364.039,4.321,development life cycle is the approach
365.88,4.719,to planning or more specifically to
368.36,4.64,documentation one of the main values
370.599,5.081,listed in the agile Manifesto says
373.0,4.68,working software over comprehensive
375.68,4.959,documentation but the assumption that
377.68,5.519,agile teams use little to no docs is
380.639,5.041,wrong in waterfall the idea was to
383.199,5.041,create detailed documentation covering
385.68,4.84,project goals and the working process as
388.24,4.92,well as precise budget and time
390.52,4.92,estimates for agile where change is
393.16,4.72,welcome this would be just a waste of
395.44,5.12,time so the idea is to produce only
397.88,6.92,essential docks that is just barely good
400.56,6.24,enough yes this is a real term in agile
404.8,3.839,plus it must be a collaborative effort
406.8,3.88,where a tech writer asks the team for
408.639,3.921,feedback and encourages others to share
410.68,3.6,their ideas if you want to learn more
412.56,3.56,about documentation types and how
414.28,4.28,they're created we have a few videos
416.12,5.12,you'll find useful while originally
418.56,5.479,agile was more of a philosophy today it
421.24,6.12,has loads of specific tools and
424.039,6.121,techniques such Frameworks as scrum lean
427.36,5.2,extreme programming or conon are also
430.16,4.28,classified as agile approaches even
432.56,4.24,though they existed before the agile
434.44,4.8,Manifesto was formulated they now fall
436.8,4.56,under the agile umbrella each framework
439.24,4.799,has its best applications and specific
441.36,4.88,tool set apart from the aforementioned
444.039,4.72,scrum there's a lean methodology that
446.24,4.76,focuses on eliminating waste and at its
448.759,4.44,core is a feedback loop for testing your
451.0,4.759,assumptions it consists of three
453.199,4.361,recurrent steps build which basically
455.759,3.361,means drafting some version of the
457.56,4.72,product such as an
459.12,5.079,MVP measure meaning collecting feedback
462.28,4.879,and evaluating if this version of the
464.199,5.041,product succeeds and learn drawing
467.159,4.48,conclusions and deciding how you refine
469.24,4.799,your product for the next Loop another
471.639,5.24,framework called Extreme programming or
474.039,4.801,XP uses the usual life cycle but
476.879,3.081,emphasizes the technical aspect of
478.84,3.639,development
479.96,4.679,it uses such practices as test driven
482.479,5.241,development code refactoring pair
484.639,5.0,programming and more also kbon is more
487.72,4.159,of a management method than a framework
489.639,4.721,since it uses so-called conon boards to
491.879,4.121,visualize work for efficiency there are
494.36,3.64,many more Frameworks in the Agile
496.0,3.84,development process that can be used
498.0,2.84,depending on what the team wants or the
499.84,4.079,project
500.84,5.199,requires around 2008 A New Concept
503.919,4.041,emerged from agile that drastically
506.039,5.201,changed how software is built and
507.96,3.28,released today
513.64,4.279,devops is one of the most discussed
515.76,4.959,development approaches employed by such
517.919,6.121,Giants as Amazon Netflix Google and
520.719,6.201,Facebook it stands for development and
524.04,4.64,operations devops introduces a cultural
526.92,4.64,shift where different teams work
528.68,5.04,together developers qas and operations
531.56,4.24,are no longer writing the code testing
533.72,4.44,it and deploying and supporting the code
535.8,4.4,apart from one another now they merge
538.16,5.359,into a single team often having
540.2,5.24,multi-disciplinary skills devops life
543.519,3.641,cycle is typically visualized as an
545.44,3.76,infinity loop representing the
547.16,4.88,development processes on the left side
549.2,4.879,and operations on the right side a team
552.04,4.4,collaborates and communicates throughout
554.079,4.88,each phase we have a whole separate
556.44,4.639,video covering devops and a video series
558.959,5.081,about all devops aspects you need to
561.079,5.241,know so check it out after this one
564.04,4.6,what's important is that devops uses
566.32,3.92,typical agile planning the product
568.64,3.96,development has rough objectives
570.24,5.4,outlined and only the few future Sprints
572.6,4.919,are detailed so while agile is focused
575.64,4.28,on identifying features that users will
577.519,5.32,like devops make sure that existing
579.92,6.159,processes are optimized and streamlined
582.839,6.281,to do that devops uses CI
586.079,6.521,CD continuous integration and continuous
589.12,5.0,delivery or cicd is a set of principles
592.6,4.12,that allow developers to deliver
594.12,5.08,frequent code changes it means that
596.72,4.88,teams integrate code on a daily or even
599.2,4.52,an hourly basis by merging code changes
601.6,4.96,in a central repository and preparing
603.72,5.32,for deployment at any moment basically
606.56,4.88,all changes new features and Bug fixes
609.04,4.2,are always ready to be deployed and the
611.44,4.399,product can be updated multiple times
613.24,5.48,per day continuously delivering value to
615.839,6.321,users HubSpot shared that they add 200
618.72,5.88,to 300 deployments a day using cicd
622.16,6.919,"Netflix orchestrates over 20,000"
624.6,6.64,deployments daily in 2022 11% of organiz
629.079,5.521,Iz ation were considered high devops
631.24,6.32,performers and deployed 417 more times
634.6,5.2,than low performers this is of course
637.56,4.2,achieved by high levels of Automation
639.8,3.8,and the infrastructure that connects all
641.76,3.48,aspects of product delivery and a
643.6,4.72,unified
645.24,5.599,ecosystem although cicd facilitates
648.32,4.24,agile practices such as getting feedback
650.839,3.841,quickly and detecting errors in the
652.56,4.6,early stages it doesn't require short
654.68,5.36,iterations and introduces automation to
657.16,4.72,the development life cycle even in agile
660.04,4.28,introducing product changes can be a
661.88,4.88,long process especially today when
664.32,6.48,technological innovations happen so fast
666.76,6.16,and consumer needs change easily so cicd
670.8,4.12,solves this problem by adapting in a
672.92,4.159,short amount of time without disrupting
674.92,4.039,the whole development flow and consumers
677.079,4.681,get to see the new features added in
678.959,5.68,real time and provide their feedback
681.76,5.0,instantly for 60 years the phases of the
684.639,4.601,software development life cycle remained
686.76,4.24,relatively unchanged regardless of
689.24,4.2,whether you're building a house a rocket
691.0,5.48,ship or an app you will need to plan
693.44,5.32,design build test deploy and maintain
696.48,4.96,the product what matters is the
698.76,5.199,relations between these phases now when
701.44,4.8,testers and devs collaborate or are even
703.959,4.641,capable of doing the same job you don't
706.24,4.36,need to separate those tasks much
708.6,4.08,automation tools made it possible to do
710.6,5.479,many things at the same time and shrink
712.68,5.36,the cycle to days and hours agile and
716.079,3.641,many models and approaches that spurted
718.04,3.76,from it have remained relevant for
719.72,4.4,decades perhaps they will last another
721.8,3.88,decade or maybe a new hip technology
724.12,3.68,will show us a more efficient way to
725.68,4.56,follow the product development path
727.8,4.64,regardless we will keep you
730.24,4.399,updated let us know if you enjoyed the
732.44,4.839,video like And subscribe if you want
734.639,5.2,more videos like this we'll see you soon
737.279,2.56,in the next
742.23,3.149,[Music]
747.88,4.079,video yeah
