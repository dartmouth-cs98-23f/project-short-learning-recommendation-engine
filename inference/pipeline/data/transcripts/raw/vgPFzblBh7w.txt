second,duration,transcript
10.301,2.837,"You might not realize it,
but we are surrounded by CPUs,"
13.138,2.794,"or processors, and the
computing they do for us."
15.932,2.544,"They touch every aspect
of our lives."
18.476,3.254,"CPUs are in your laptop, in the
machines you use to check out"
21.73,2.544,"at the grocery store, in the
electronics that power the"
24.274,1.96,"instruments in your
car more efficiently."
26.234,2.544,"They enable our artists and
scientists to create things"
28.778,3.045,"that were
unimaginable only yesterday."
31.823,4.129,"CPUs are everywhere and shape
just about everything we do."
35.952,3.879,"Welcome to Architecture All
Access CPU Architecture,"
39.831,0.626,Part One.
53.678,2.461,"I've always been fascinated
with computers since I was"
56.139,1.877,"a kid, when I
was first captivated by those"
58.016,1.96,"revolutionary green screen
computers at my"
59.976,3.087,"elementary school, and a lot
has changed since then."
63.063,2.002,"And over the last twenty
three years, I've had the"
65.065,2.168,"privilege of working on some of
the most well known chip"
67.233,2.044,designs in Intel's history.
69.277,2.044,"From the architectural
definition and design of"
71.321,2.961,"the Pentium 4, to designing
the Nehalem, Westmere,"
74.282,3.295,"Haswell, Broadwell, and Tiger
Lake processors and many more."
77.577,2.252,"Today I helped lead the
development of Intel's Client"
79.829,2.253,"Engineering Teams, where I
oversee the development of"
82.082,2.419,current and future products.
84.501,3.003,"Hi, my name is Boyd Phelps,
and today I want to talk to"
87.504,2.627,"you about CPUs,
and more specifically about"
90.131,3.754,"CPU architecture, its future,
and the technologies involved"
93.885,2.294,in modern CPU design.
96.179,2.502,"As we do so, my hope is that
you will gain not only a"
98.681,3.921,"greater appreciation for what a
CPU is, what it does, and how"
102.602,2.628,"it does it, but that you'll
also be inspired about the"
105.23,3.753,"possibilities of what lies
ahead in the decades to come."
108.983,2.878,"And who knows, maybe some of
you will even have a hand in"
111.861,1.502,shaping that future.
113.363,2.461,"There is so much innovation
ahead of us in what is one of"
115.824,2.335,"the most amazing
industries on Earth."
118.159,2.711,"We divided the
content into two modules:"
120.87,2.211,"The first one focused on a
brief history of CPU"
123.081,2.419,"Computer Architecture,
the concept of"
125.5,2.002,"Computing Abstraction Layers,
and the"
127.502,1.793,Instruction Set Architecture.
129.295,3.087,"Module Two will cover the
building blocks of CPUs broken"
132.382,3.545,"down into what we call Front
End and Back End, as well as a"
135.927,2.169,Primer on Caching.
138.096,3.045,"Think of Module one as the
Architecture Module, where we"
141.141,1.751,"describe things at a
high level."
142.892,3.17,"In Module Two is a micro
architecture module for CPUs,"
146.062,3.378,"where we begin to click
down a bit into the details."
149.44,2.628,"We've got a lot to cover,
so let's get going."
157.824,1.877,So what is a CPU?
159.701,3.587,"Well, C.P.U. Stands for Central
Processing Unit, and it's often"
163.288,2.919,"called the brain
of the computer."
166.207,2.753,"The CPU sits at the center of
everything in the computer and"
168.96,3.045,"handles all of the computation
needed to turn inputs"
172.005,2.961,"from memory, like a photo on
your hard drive, into outputs"
174.966,3.086,"on your peripherals, like an
image on your monitor."
178.052,3.754,"CPUs are a general purpose,
flexible architecture that take"
181.806,2.878,"in a stream of instructions
from all types of workloads and"
184.684,3.879,"compute or process information
based on those instructions."
188.563,4.338,"Simply put, CPUs do what we
tell them or program them"
192.901,1.084,to do.
193.985,3.378,"CPUs are what run your
operating system, the web"
197.363,2.586,"browser that you're using right
now to watch this video,"
199.949,2.753,"your favorite photo
or video editing application,"
202.702,2.753,"your productivity software,
conferencing applications,"
205.455,1.877,"and much, much more."
207.332,2.794,"With the advances in silicon
technology over time and our"
210.126,2.377,"ability to continue
miniaturizing transistors and"
212.503,2.586,"make them more efficient,
we've been able to pull more"
215.089,3.462,"and more functionality onto the
same piece of silicon that"
218.551,1.96,contains the CPU.
220.511,3.003,"This ability to continue
shrinking transistors is based"
223.514,3.504,"on a famous law or observation
that we in the industry refer"
227.018,1.668,to as Moore's Law.
228.686,2.795,"Moore's Law is based on the
observed trend showing that we"
231.481,2.961,"can double the number of
transistors per unit area about"
234.442,1.418,every two years.
235.86,3.504,"This simple law drives
tremendous innovation,"
239.364,3.295,"making what was once
thought to be impossible not"
242.659,4.045,"only possible, but also
cheaper over time."
246.704,2.711,"Several decades ago,
computers were a luxury of"
249.415,3.504,"large institutions,
whereas today computers in some"
252.919,3.712,"form or fashion touch the lives
of nearly everyone on Earth."
256.631,2.919,"When we look at a computer
motherboard from 40 years ago"
259.55,3.629,"like this one, what we see is
we have numerous expansion card"
263.179,0.709,"slots that
have"
263.888,0.876,different functionalities.
264.764,2.669,"We have IO devices,
we have memory, we have"
267.433,2.378,"printer drivers, we have
graphics cards,"
269.811,1.626,display drivers.
271.437,2.628,"And what's really impressive is
when you take out one"
274.065,2.669,"of these, look at the number of
just discrete components that"
276.734,2.044,"you have on this,
we have here, and you can"
278.778,3.337,"probably count them, there are
well over 20, 30, or more"
282.115,1.877,discrete components on this.
283.992,3.67,"What's impressive is all of
this functionality today that"
287.662,4.171,"existed in a PC you know of
this size and this complexity"
291.833,4.629,"now fits essentially in a
microprocessor of this size."
296.462,3.379,"Yesterday's supercomputer that
once filled a large room now"
299.841,3.67,"easily fits on a chip
inside your laptop."
303.511,2.961,"And we've only begun
to scratch the surface of"
306.472,1.502,what is possible.
307.974,3.337,"The CPU, or ""brain,"" continues
to be the center of it all."
311.311,1.584,"While there are
other things like memory"
312.895,1.585,"and IO controllers,
display,"
314.48,2.586,"media, and graphics engines,
and other components in your"
317.066,3.712,"system-on-chip processor,
in this class we'll focus on"
320.778,2.461,"the ""brain,"" the central
processing unit,"
323.239,3.504,"which continues to be what we
call the spark of life in"
326.743,1.585,modern computer architecture.
329.454,2.752,"Since the focus of this class,
again, is on how an individual"
332.206,4.797,"CPU core works, when we
say CPU or processor, we'll be"
337.003,1.626,"referring to an
individual core."
344.177,3.503,"But before we jump into modern
CPU design, let's go back to"
347.68,1.543,where it all started.
349.223,1.794,"At the birth of
digital computing,"
351.017,3.462,"computers were fragile,
slow, and large;"
354.479,1.918,and I mean gigantic.
356.397,1.961,"ENIAC, the first
general purpose,"
358.358,4.129,"digital computer from 1946,
covered 1800 square feet,"
362.487,4.671,"or the size of a modern home,
and weighed about 30 tons."
367.158,2.753,"ENIAC, which stood for
Electronic Numerical"
369.911,3.295,"Integrator And Computer,
and other earlier computers,"
373.206,3.128,"were built using vacuum tube
technology which made them"
376.334,2.377,huge and unreliable.
378.711,2.378,"These were program
controlled computers,"
381.089,2.335,"meaning that an operator
programmed the computer with a"
383.424,2.878,"set of switches and
wires for each new calculation."
387.345,3.086,"These early computers were
technically ""general purpose,"
390.431,3.42,"but programming them was
complicated and error prone,"
393.851,1.544,often taking weeks.
395.395,2.46,"Even so, they were on the
cutting edge of technology in"
397.855,1.043,the late 1940s.
404.612,2.753,"As an aside, speaking of error
prone programming, the term"
407.365,3.253,"bug"" has been used as a part
of engineering jargon long"
410.618,2.92,"before the ENIAC, but it was
used in an account by the"
413.538,2.752,"famous computer pioneer Grace
Hopper in 1946,"
416.29,1.335,in an interesting way.
417.625,2.336,"While working the MARK
II and MARK III computers,"
419.961,3.879,"operators traced an error on
the MARK II to a moth trapped"
423.84,4.212,"in a relay, recoining the term
""bug."" The bug was carefully"
428.052,3.67,"removed and taped to the
logbook with the caption ""First"
431.722,2.253,"actual case of
a bug being found."
433.975,3.545,"Fun fact: The silicon die
of a modern microprocessor is"
437.52,2.002,smaller than that bug.
439.522,2.586,"On a more serious note,
the importance of the ease"
442.108,3.378,"of programmability, along with
an abstracted computer model to"
445.486,3.379,"make computers simpler to
program and use, is paramount"
448.865,0.959,and CPU design.
455.163,2.794,"In the late 1940s,
prominent mathematician John"
457.957,3.295,"von Neumann popularized a new
kind of computer architecture"
461.252,3.045,"that simplified computer
design and programming."
464.297,3.795,"His idea for a stored program
computer reimagined the general"
468.092,3.295,"purpose computer as three
separate systems: a bank of"
471.387,3.295,"memory for storing data
and instructions, a central"
474.682,3.42,"processing unit for decoding
and executing instructions,"
478.102,3.17,"and a set of input
and output interfaces."
481.272,2.878,"This von Neumann architecture
separated units for"
484.15,3.42,"processing information,
the CPU, from units"
487.57,3.337,"that stored information,
the memory, and allowed data"
490.907,3.753,"and instructions to be stored
and addressed in memory in"
494.66,1.293,the same way.
495.953,2.878,"It also introduced the four
step instruction cycle:"
498.831,2.002,"fetching instructions
from memory,"
500.833,3.629,"decoding the instructions,
executing the instructions,"
504.462,3.17,"and storing the results
back in memory."
507.632,2.502,"This architecture was so
revolutionary that modern"
510.134,4.046,"computers are still today based
on these basic principles."
514.18,2.669,"In the 1950s,
semiconductor based transistors"
516.849,2.461,"started to hit the market,
replacing the larger,"
519.31,2.127,"more unreliable mechanical
vacuum tube"
521.437,1.085,based technologies.
522.522,2.002,"This brought smaller
and faster circuits to"
524.524,1.543,the electronics industry.
526.067,4.129,"Then, in 1959, Robert Noyce
patented the first Monolithic"
530.196,2.377,"Integrated Circuit,
which combined multiple"
532.573,1.877,"transistors on a
single silicon chip."
535.451,2.461,"These early chips didn't have
many transistors, but they"
537.912,4.546,"enabled much smaller and more
complex circuit designs."
542.458,4.004,"By 1968, several companies were
making integrated circuits and"
546.462,3.337,"Robert Noyce teamed up with
colleague Gordon Moore to get"
549.799,2.419,"into the game, founding Intel,
which was short"
552.218,2.669,for Integrated Electronics.
554.887,3.629,"Intel quickly found a niche
making memory chips, but in"
558.516,4.921,"1971 they unveiled the Intel
4004 single chip microprocessor"
563.437,1.752,for the calculator market.
565.189,4.046,"With a whopping 2300
transistors and a ""blazing"
569.235,3.754,"fast"" clock speed of 740
kilohertz, it was the"
572.989,3.545,"first general-purpose
programmable processor and"
576.534,3.795,"packed all of the computational
power of the ENIAC into"
580.329,1.919,one tiny device.
582.248,2.669,"Engineers could now purchase a
single component that could be"
584.917,3.462,"customized with software for a
variety of functions."
589.38,3.921,"In 1972, Intel released the
first 8 bit microprocessor,"
593.301,3.044,"the Intel 8008,
but its successor,"
596.345,4.505,"which released in 1974,
known as the Intel 8080,"
600.85,1.668,was a real breakthrough.
602.518,5.297,"The Intel 8080 was a giant leap
in CPU design, one of the world's most"
607.815,1.71,widespread microprocessors.
609.525,5.798,"And when the 16 bit 8086 was
released in 1978, the world"
615.323,1.835,would never be the same.
617.158,4.171,"The Intel 8086 with its x86
instruction set architecture"
621.329,3.586,"became the foundation for
modern CPU designs that we"
624.915,1.711,still use today.
626.626,3.795,"Here you can see a die picture
of the 4004 microprocessor,"
630.421,4.546,"and here is the 11th
Gen Intel core processor named"
634.967,1.251,Tiger Lake.
636.218,2.586,"You might look at both these
die pictures side by side and"
638.804,3.921,"think that the physical size is
not that dramatic, but consider"
642.725,4.755,"this: The 4004 CPU
had 2300 transistors, while the"
647.48,2.961,"Tiger Lake processor actually
packs in billions and"
650.441,1.043,billions of transistors.
651.484,4.713,"In fact, I would have to have
about 4 to 5 million of these"
656.197,3.128,"chips to have the same number
of transistors as Tiger Lake."
660.451,3.42,"What's even more remarkable is
that the 4004 took a team of"
663.871,3.545,"engineers to design,
whereas today, due to the power"
667.416,3.879,"of computing abstraction,
a single engineer handles"
671.295,1.293,millions of transistors.
677.76,2.669,"There are a couple of concepts
that are key to understand with"
680.429,2.127,"regards
to computer architecture."
682.556,3.712,"First is the notion and
use of the binary system."
686.268,3.379,"And second is that concept of
computing abstraction layers I"
689.647,1.334,was just mentioning.
690.981,3.963,"Digital computers use a number
system based on zeros and ones"
694.944,2.127,"rather than the decimal system
that most people"
697.071,1.043,are familiar with.
698.114,2.586,"For computers to function,
it's critical that we represent"
700.7,2.836,"all control and data and
numbers in simple on"
703.536,1.751,or off states.
705.287,2.586,"It turns out that the
characters and numbers humans"
707.873,3.295,"use to communicate with can be
easily translated into a binary"
711.168,2.92,"based system of numbers or
encodings like the popular"
714.088,3.17,"ASCII representation for
characters of the alphabet."
717.258,2.919,"There is great power in what
the binary system allows"
720.177,0.918,us to do.
721.095,2.878,"By representing data as a
series of ON or OFF states in a"
723.973,2.753,"computer or memory, we can
simplify and create a"
726.726,2.46,"foundation for computer
engineers to do much"
729.186,1.669,more complicated tasks.
730.855,2.168,"The second concept
is that of computational"
733.023,3.129,"abstraction layers, and how you
can start with very simple"
736.152,2.544,"things like atoms and
transistors and"
738.696,3.086,"add abstraction layer,
to abstraction layer to build"
741.782,2.252,"things up to complex
applications that run in"
744.034,1.252,large data centers.
745.286,2.627,"In general, the abstraction
layers that make up computing"
747.913,3.17,"are well understood,
and building from one layer to"
751.083,3.253,"the next allows us to build
complex computing structures"
754.336,2.962,"from the bottom up that would
be almost impossible to"
757.298,2.335,visualize from the top down.
759.633,1.043,Allow me to explain.
762.344,2.628,"At the foundation of the
computing abstraction layers,"
764.972,3.128,"you have atoms which get put
together in materials like"
768.1,3.587,"silicon from which we
build tiny transistors."
771.687,3.42,"These transistors act as
switches that turn on or off"
775.107,1.877,"with the application
of an electrical current"
776.984,1.168,or voltage signal.
778.152,3.295,"By connecting switches together
in specific arrangements,"
781.447,2.711,"we can form what we call the
fundamental boolean logic"
784.158,1.543,"operators for
performing"
785.701,3.462,"calculations: AND,
OR,  and NOT."
789.163,4.379,"For example, one switch by
itself can convert a 1 to a 0,"
793.542,2.253,"and on its output it
is called a NOT or"
795.795,3.753,"an inverting operator, and two
switches arranged in series"
799.548,2.127,form an AND operator.
801.675,3.337,"If we wire switches in parallel
with each other, we get the OR"
805.012,1.251,operator at the output.
806.263,4.088,"These arrangements of switches
are known as logic gates, so we"
810.351,3.962,"can now organize, or abstract,
ones and zeros to a language of"
814.313,3.795,"logic that is more efficient to
understand than the language of"
818.108,2.294,"physics and the
flow of electrons."
820.402,2.795,"Using transistors as switches
and connecting the output of"
823.197,2.836,"one to the input of another,
we can build a variety"
826.033,2.961,"of logic circuits,
or functional blocks."
828.994,1.71,"These functional blocks can
take the form"
830.704,1.335,"of Adders,
Multiplexers,"
832.039,4.296,"Decoders, Latches, Flipflops,
Registers, Counters, the list"
836.335,1.919,goes on and on.
838.254,3.211,"The power of
abstraction is incredible."
841.465,2.711,"And as you might expect,
chaining functional blocks"
844.176,4.213,"together allows for even more
complex logical functions."
848.389,2.419,"With them we can build custom
execution units that"
850.808,2.419,perform specific calculations.
853.227,3.086,"For example, one of the most
important execution units in a"
856.313,3.712,"CPU is the Arithmetic
Logic Unit, or ALU."
860.025,3.42,"Designing a whole CPU comes
down to building multiple"
863.445,4.38,"specialized processing elements
and connecting them together in"
867.825,3.086,"ways that allow complex
computations to be done."
871.996,2.335,"The combination of those
processing elements into a"
874.331,2.795,"design that can fetch
instructions from memory,"
877.126,3.253,"decode the instructions,
execute those instructions,"
880.379,3.003,"and store the results back in
memory is what we call"
883.382,3.253,"a Microarchitecture, or the
instantiation of an"
886.635,2.92,"architecture
implemented in hardware."
889.555,2.377,"John von Neumann would
be proud."
891.932,3.337,"So how do we
get from hardware to software?"
895.269,2.252,"With yet
another abstraction layer,"
897.521,0.667,of course.
903.861,3.003,"The Instruction
Set Architecture, or ISA, is a"
906.864,2.627,"set of instructions that
defines what kinds of"
909.491,2.586,"operations can be
performed in hardware."
912.077,2.795,"It is nothing more than the
language of the computer."
914.872,4.212,"Much like English or Spanish
are languages, most languages"
919.084,3.379,"have dictionaries that describe
the words, the format,"
922.463,3.044,"grammatical syntax and meanings
to those who communicate"
925.507,1.627,in those languages.
927.134,4.004,"An ISA is an abstract model of
the computer, sometimes also"
931.138,3.921,"referred to as Architecture
or Computer Architecture."
935.059,2.002,"The ISA describes the
memory model,"
937.061,2.669,"supported data
types, registers, and behavior"
939.73,3.921,"of machine code - the sequences
of zeros and ones that the"
943.651,2.127,CPU must execute.
945.778,3.378,"You may have heard of several
types of ISAs like x86,"
949.156,1.627,ARM or MIPS.
950.783,2.419,"The ISA acts like
a sort of bridge between"
953.202,2.043,software and hardware.
955.245,2.878,"On the software side,
a compiler uses the ISA to"
958.123,2.294,"transform code written in a
high level language like"
960.417,3.629,"C, Perl, or Java into
machine code instructions,"
964.046,3.378,"or language, that the
CPU can process."
967.424,2.962,"The ISA is the dictionary
of instructions, data types,"
970.386,1.96,"and the formats that
the CPU adhering to that"
972.346,2.586,ISA must execute.
974.932,2.586,"This means the application
programmer can usually ignore"
977.518,3.587,"the ISA and focus on what the
programming language provides."
982.564,2.795,"On the hardware side,
when a CPU microarchitecture is"
985.359,3.754,"being designed, the ISA is used
as a design spec that tells the"
989.113,2.961,"engineer what operations it
needs to execute."
992.074,2.127,"Because of this
layer of abstraction,"
994.201,1.71,"the instructions in
the ISA are"
995.911,2.377,implementation independent.
998.288,2.503,"This means that even
if a different company creates"
1000.791,2.377,"different micro
architecture designs, they can"
1003.168,3.254,"all run the same code
based on the same ISA."
1006.422,3.211,"Computer architects continue to
evolve ISAs through extensions"
1009.633,2.795,"to the instruction set,
much like new words are often"
1012.428,1.543,added to dictionaries.
1013.971,2.794,"These additional instructions
are often created to perform"
1016.765,2.253,"certain operations
more efficiently,"
1019.018,1.835,"leveraging new processing
elements in"
1020.853,1.585,their microarchitecture.
1022.438,3.128,"These ISA extensions can
increase a CPU's performance by"
1025.566,2.21,"streamlining operations for a
particular arrangement"
1027.776,1.335,of processing elements.
1029.111,3.587,"Modern CPUs support thousands
of different instructions,"
1032.698,2.836,"but many of them are related to
arithmetic operations"
1035.534,1.293,"like Addition,
Subtraction,"
1036.827,2.461,"Multiplication,
logical operations"
1039.288,3.837,"like AND,
OR, NOT, memory operations"
1043.125,3.962,"like Loading, Storing,
Moving, and flow"
1047.087,1.835,control like Branching.
1048.922,1.669,"We'll explain what
branching is later."
1051.592,2.252,"In general,
instructions consist of an"
1053.844,4.796,"opcode, which is the operand
to be performed, like ADD,"
1058.64,3.671,"and a number of operands,
the data to be operated on,"
1062.311,4.796,"like add A in Register X
to B in memory location Y."
1068.15,3.67,"ISA instructions often also
include additional bits of data"
1071.82,2.294,"that give the CPU more
information relevant to"
1074.114,3.379,"the operation, which the CPU
uses to decode and execute the"
1077.493,2.127,"instruction in an
efficient way according to"
1079.62,1.501,its microarchitecture.
1081.121,2.628,"Of course, this is a highly
simplified description of"
1083.749,2.919,"instruction set architectures,
and it's important to realize"
1086.668,2.962,"that modern ISAs are much more
complex than we could hope to"
1089.63,2.085,explain in this short video.
1091.715,2.503,"ISAs are one of the most
critical parts of modern"
1094.218,3.67,"CPU design, as they are the
linchpin between software and"
1097.888,1.877,"hardware that
allows efficient,"
1099.765,3.42,"high performance computation,
and seamless software"
1103.185,3.712,"experiences across a variety of
CPU microarchitectures."
1107.94,2.878,"In part two of this series,
we'll go into the details of"
1110.818,2.085,"the microarchitecture,
the specifics of"
1112.903,2.836,"the instruction cycle, and the
different parts and functions"
1115.739,3.504,"of the front and back end of
a CPU, as well as a"
1119.243,1.543,primer on caching.
1120.786,0.625,Stay tuned.
