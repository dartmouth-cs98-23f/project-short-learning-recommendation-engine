hello guys so in this video we will
discuss about databases
and in databases we will discuss about a
relational and non or relational
databases
so in what is the relational databases
basically it consists of tables many
tables and uh and each table we have
rows which are Horizon horizontal and we
have vertical change which is called as
columns uh we might have seen the CSV
format dot PSP format file which we can
see in Excel and when we open that we
see that there are a tabular format data
and each cell has some value in it could
be numeric it could be some string
format data in each of the cell but in
whole horizontal if we see the
horizontal uh series of those cells are
known as rows and in columns we know
that it is the vertical series of the
cells so I think it is uh we already
know what is PSP format and what is the
table but in relational details we have
multiple tables so it can have 10 tables
or 20 tables like that depending on your
requirement
then uh before creating any database we
need to define the schema which is a
logical design of the database
so for defining the schema we need to
Define what would be the name of the
columns in each of the tables we have
so say we have 10 tables and each table
have maybe 50 200 uh columns we need to
Define each column names each of the
tables we need to define the data types
whether it is numeric uh whether it is
date time variable whether it is a
string data what kind of data format it
is you need to define the data type
depending
on the database which we are using and
so basically this is a logical design uh
and we need to plan it before we create
the database
we can also change it uh but uh it's
good to decide it before you create a
database so that uh there is nothing
wrong happens in future uh now uh let us
see what are the examples of relational
database now examples of relational
database is the myth equal Oracle
postgres and sqlite
these are some of the examples of the
databases which we have so if you create
the mySQL database it will have multiple
tables each table will have its own name
and inside each table you will have
multiple rows and multiple columns
so each of the columns will have its own
name again
uh so a table you can consider it as
some kind of tabular format dot CSV
format kind of data
now my SQL if you can talk about MySQL
it is an open source
first first of all it is free it has
some positive negatives each of the data
base has its own positive and negatives
and might equal uh you can you can have
null values you can have missing values
where you have got any kind of uh thing
uh but noise people does not support uh
data partitioning and accessible
we we know about the data partitioning
uh when we are partitioning the data in
the database we do it using some kind of
ID
and what does it do it it helps in
making the query faster in the database
tables
okay
okay now if you are coming to Oracle uh
it is not an open source and not a free
software uh it does not support null
values
and data partitioning and XML support is
available in it
so this is a positive point in Oracle
basically Oracle will be used for large
uh data sets when we have a large data
Enterprise kind of data we have then we
need Oracle
now let us uh
move to non-relational database
the basic difference between a
relational and non-relational database
is the that in it is not a traveler
format relational was a developer format
data right now coming to non-relational
it is not a tablet format
and we do not have a well-defined schema
whereas when the relational database uh
we did have a well-defined schema
there we have multiple tables
um in the database in one database here
we have a table and it is called as the
collection
a row is here known as document is one
observation
um
and column is kind of called as field
which columns we are talking of
right
basically non-relational databases will
be used for some kind of text Data audio
video
mostly some of the data which is coming
from social media kind of data
which is in the format of text audio
video kind of data right
so
we do use a relational and
non-relational in combinations and uh if
you have a very specific uh use case
where you have only text you might have
only might be using only one uh one type
of non-relational database and but when
we talk about come Enterprise level data
there you might have different kinds of
databases working together in the whole
system design
I will talk about all those uh in the
future videos the how to uh
how to design a complete system for uh
or maybe uh e-commerce or
traveling website or anything like that
so in that for that purpose you must be
knowing which database is important and
how these are being connected different
services are talking to each other and
which database is kept in which service
okay now let us see some of the
examples uh
so here we will talk about uh types of
non-relational databases so basically
broadly if you categorize non-relational
databases there are many more but these
are the most broadly classified
key value document based and graph paste
white column based when you talk of key
value based here you have a key is from
ID link to the value we want to store
value will be something which is with
the information which we need for a
corresponding ID
foreign
there are other also
it is also used when you want to Cache
the data to make the make the
communication faster in the network in
the data flow
now uh now coming to the document paste
the stored it is stored data similar to
the Json objects okay and it is a
TVs its example is mongodb
it is mostly used when kind of network
data uh like iot data or something like
that now you have graph based data
there's two data in nodes and edges
it has some application in
Telecommunications
uh neo4j is the database which we can
use
here white column based Dynamic columns
one of the examples
now coming to mongodb
where mongodb can be used is the example
of mongodb then iot platform requires 4
for data uh from many devices okay so as
I said that the company which is based
on iot
Internet of Things uh the smart things
which have been connected together it's
a network of smart things which are
connected it could be a home it could be
a office or it could be anything
wherever we have this kind of data uh
this data can be stored in in a database
similar to
um similar to mongodb
and it handles data from different types
of devices
and the database and the data structure
is Json Json based document database
it pulls the data using single index
or multiple index which is device ID
with location ID
a record for a particular device in
different rotations are easily accessed
okay so whenever you have a use case
similar to like you want to find the
rewards for a particular device in in
some in different locations for a
particular device you want to find all
the records and different locations you
can easily access using mongodb if you
use any any other database you might be
able to store the data which you have in
iot but it could be very difficult to
fetch the data or also it would be very
difficult to store the data in that
format
okay basically uh we would prefer a
mongodb because it is using a Json based
document database
okay now let us coming to neo4j when you
will be using this kind of database uh
one example would be wherever you have a
videos and maybe you can consider as a
educational video tutorial but portal uh
the data which you collect uh get it
from these kind of websites the portals
that can be stored in a new code
and why why what is the positive point
in this new approach is that uh whenever
it is serving uh to the clients or to
the users the videos which a website has
so the users can move from one lesson to
the another because then there is one
chapter and it has 10 lessons so user
can move from one lesson to the other
very easily if you have a neo4j database
in the back end
okay now we talk about elasticsearch and
fourth grade equal again it is a no
music
non-relational database
basically these are kind of search
engines and uh it allows the users to
search for menu items and restaurants
this is one of the example so whenever
you see a website which is the which is
allowing the user to search for menu
items different items food items on
different restaurants who are delivering
the pro food items then we can use uh
elasticsearch in the back end for
storing the data for the food items we
have and the restaurant and their uh
each of the food catalogs they have
what is what happens is the user is
searching for something in the website
of that
oh
and a user is putting some text on the
search bar
in the website lookbook
what what it will be delivering is the
we'll be delivering all the results in
the recommended uh format so it will do
recommend based on the text search
uh the thing is why is the elastic
search because when you're putting the
text in the third
it will be delivering the result to the
user in no seconds so it is very fast
if you using some other database it will
take uh some some time to deliver it to
the user because user is looking at some
some and and the database is in some
other place and it is far it is
communicating through wireless
communication so what happens is when
the user is sending uh its query on the
database of elastic research it will be
it will be responding with the results
recommended results very easily in no
time
okay now we will talk about the asset
properties of dbms database management
system
basically uh before talking of asset
properties of dbms we will first talk
about what is the transaction basically
transaction is the group of operations
and operations could be any read and
write for different variables
so what do you mean by
City okay by atomic City means that
whenever there is a transaction some
some may be some variable is red some
other variable is red
uh some transaction is happening
either it will get completed or it will
not complete at all so it it won't be
like that it happens and it stops in the
middle so it is either completed or not
complete it is like that so A is for
like that t for consistency
so so whenever the transaction is
happening before and after the net value
Remains the Same so it won't be changing
if it is changing that means the our
database has become inconsistent there
is something wrong happened
uh maybe something is someone is reading
the data before it is being written so
we need to make sure the database is
such that that it remains consistent at
all the times
what is the uh isolation isolation is
when we have
different transactions which are
happening in parallel
they will happen in parallel without any
interference without any interference
okay that should also happen as a
property in dbms
now
he is for durability what does it mean
after some transaction is successful all
the changes which has happened in that
transition which will remain saved okay
now that these asset properties of dbms
is not present in all the databases some
database do have
asset properties some do not have so we
need to make sure that what kind of data
we have
if it is kind of mostly in the real-time
data uh and in the monetary transactions
it is very important that we should have
asset properties to be fulfilled
otherwise there will be some something
wrong happened and the database and
whatever the analysis you do will not be
good either in the present or in the
future
now we will talk of the cap theorem it
is it is the consistency
availability and what it can now the
acid properties which we discussed
earlier it is it was for the transaction
to focus the focus point is when we
whenever we are talking of passive
properties uh please remember that we
are talking about the transactions so
for each of the atomicity consistency
isolation durability it is it is we are
talking of transaction and transaction
is actually a group of operations and
where operations means the read and
write for different uh variables now
when whenever we are talking of the cap
theorem uh we need to make sure that we
are not talking of the transactions here
we are talking of the servers or cluster
we have which are storing the data so
consistency what does it means
consistency or not consistency of data
Remains the Same among the machines
so if you want to make that consistency
what we do any data right on the master
or the primary machine should also
instantly be replicated on the slave
over the secondary machine before the
right is declared successful
so if we have a cluster in the cluster
we have multiple muscles
same thing so we need to make sure
whenever we are writing on the master
that should also be replicated
instantaneously on the screen also
before the right is declared in Texas
otherwise the data is not consistent
among the machines and if the data is
not consistent among the machines there
might be some breed is happening from
some machine where the data is not
consistent from the other machine then
there will be an issue so uh we we
should always make it consistent across
the machines availability data is
available to all the clients machine all
the time that means whenever the client
is communicating to the database
uh and the data is in the servers right
so
all the cluster whatever we have the
cluster should be available 24 7.
and it shouldn't be down so it is not
like that one of the machine goes down
there and it is there is some breakdown
and it is not available
there are some issues with the server or
cluster so that that is again a
liability of the cluster or server
uh now for detail tolerance uh cluster
must continue to work despite any
Communications breakdown
so again it is the similar kind of thing
in the Gap theorem we are almost we are
always talking about the cluster of
server it uh whatever the machines we
have in the cluster that should be
kept in such a way that whenever there
is a read from the client side there
shouldn't be any issues also there
should be a consistency across of the
data across all the machines and there
should be a partition tolerance as well
that means the cluster must continue to
work despite any any Communications
breakdown between any of the machines
so whenever we talk of asset properties
be careful that we are talking of the
transactions because here also we have
consistently and in the capital also we
have consistency but here in the Gap
theorem we are talking about the servers
or the machines clusters
but in the asset properties we are
talking of the transactions in the next
video I will try to create uh more
videos on
something related to databases in more
detail
thanks for watching this video
