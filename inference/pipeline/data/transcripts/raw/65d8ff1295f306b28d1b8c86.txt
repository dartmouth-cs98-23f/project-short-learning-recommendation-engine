- Good morning.
Okay, so I'm Zahra Ashktorab
from IBM Research and I'm
really excited to present to you
the work we did on Quantum
Human-Computer Interaction.
I did this work with my colleagues,
Justin Weisz and Maryam
Ashoori, from IBM Research.
So, quantum computing was once considered
a purely theoretical domain,
but it's rapidly becoming a
reality with the availability
of publicly accessible
quantum computing systems
and has recently gained a lot of attention
for the things that it can
potentially accomplish.
It has the potential
to accomplish problems,
considered intractable
for classical computers.
For example, scientists
have used computers
to determine the ground state energy
for Beryllium hydride, a
complex inorganic molecule.
Performing these kinds of simulations,
has a tremendous computational cost,
often intractable for classical computers
but the results of these simulations
may lead to discovery of
new drugs and materials
and even bolster clean energy efforts.
So, one might ask, how did HCI researchers
get involved with quantum HCI?
And are interested in
defining a new practice
of quantum HCI, stem from our experiences
in joining a new team, that was focused
on building tools for quantum scientists.
As HCI researchers new
to quantum computing,
we found ourselves spending a lot of time
familiarizing ourselves
and learning new concepts
and terminology that were quite outside
of our comfort zone.
And during this process, we
realized the tremendous impact
that good HCI research and
practice could have on the field.
So in this talk, I'm gonna begin
with a short primer on quantum computing.
So in classical computing,
information is encoded
with bits that are either
in the state of zero or one.
In quantum computing,
information is encoded in qubits
and as with classical computing,
they can be in a state of zero or one
but they may also exist in
the state of superposition
in which their true state is
unknown until it is measured
and they may also be entangled
with each other such that,
measuring the state of one qubit tells us
about the state of the
other without measuring it.
And so these are just
some very basic features
that make quantum computing so powerful.
Next, I'm gonna talk about
existing quantum computing tools.
So there's a number of tools available
for programming quantum systems,
both in simulation and
with actual hardware.
GUIs such as IBM's composer and Quirk,
enable people to program
their own quantum circuits
and visualize the results.
There's also programming
languages and SDKs such as,
IBM's Qiskit and Microsoft's LIQUi.
And they allow people to
develop quantum algorithms
and run them in simulation,
sometimes on actual hardware.
Next, I'm gonna talk about
the methods that we used.
So we recruited a small
batch of participants
from our own organization
through an email,
seeking individuals who conduct research
and quantum computing.
We then did snowball sampling by asking
who they would recommend to speak with
both internal and external
to our organization.
We had a total of seven participants
from industry, government and academia.
Our interviews were semi-structured
and probed the following areas;
education and background,
application and algorithms,
programming tools and
workflow and community.
So the next couple of slides,
I'm gonna talk about the areas of inquiry
which we identify
through these interviews.
The first of which was,
understanding quantum users,
developing and evaluating
educational materials,
designing programming and debugging tools
and finally, visualizing quantum.
Designing effective technologies
for effective programming quantum systems
requires an understanding of
the different types of people
who will use those systems.
And our quantum development team
had conducted early stage user research
that identified three quantum users;
quantum scientists, science
enthusiasts and developers.
Our first group quantum
scientists, include professors,
postdocs and graduate students in physics
and quantum information science.
They perform experiments
using quantum simulators
on real quantum computers.
Science enthusiasts are
people who have an interest
in quantum computing
but no formal background
or training in it.
They may be university students, academics
and industry professionals
all with varying levels
of expertise and programming
and their primary needs are
for educational materials.
Our third group are developers
and though this group may have
an extensive knowledge
on classical computing,
their knowledge of quantum
computing is limited.
For this audience, SDKs
that provide a higher level functionality
and hide the lower level technical details
of their quantum
implementation are desired.
So we believe that we captured
only a preliminary snapshot
of quantum computing users,
and additional research is needed
to more comprehensively
identify the people
who are currently using quantum computers.
One of our participants said,
"I think there's another layer
"of user that we will
eventually connect with,
"which is, I want to
use a quantum computer
"to accelerate a certain
aspect of a certain problem
"but I wanted as a piece
of a much bigger solution.
"The technical folks and banks and finance
"and chemical design
already have environments
"they are using to work inside
and I think I will eventually
"take quantum and plug it in."
Quantum computing is a
highly technical subject
and that said, there are
several notable efforts
that have aimed to make quantum computing
more accessible, interesting and fun.
There are introductory
guides that have low math
or no math introductions
to quantum computing,
metaphor based approaches
to teach the fundamental
principles of quantum mechanics,
quantum games and online
quantum communities.
So over the last decade,
there've been emergence
of introductory books
that are intended for general audiences.
Additionally, institutions
like IBM, D-Wave,
and Microsoft provide
introductory tutorials
for beginners to quantum computing.
Another approach to teach
principles of quantum
computing is via metaphors.
So, Schrodinger's cat explains
the concept of superposition
via thought experiment.
A cat is kept in a box
with a bottle of poison
and is simultaneously dead and alive
because it is unknown whether
the cat drank the poison.
And for HCI researchers here,
there's an opportunity
to evaluate the extent
to which these guides and metaphors
teach beginners about quantum computing.
There's also been several
noteworthy digital games,
designed to specifically
teach about quantum computing.
Quantum tic-tac-toe, mechanic
and Hello quantum are games
that both require players to solve puzzles
by trying to teach quantum concepts.
Entanglion is a board game designed
to teach fundamental concepts
of quantum computing.
And for HCI researchers
here, there's an opportunity
to both design and
evaluate the effectiveness
of these games for their
ability to scaffold learners
through the process of understanding
core quantum computing
concepts to the point
of programming quantum systems.
So from our interviews, we
found that many of issues
with the online communities
stem from the fact that,
the platforms did not distinguish
between these novices and experts,
and our participants,
experts in their field,
which is one of the
limitations of our study,
express preferences for
specialized communities
that encourage deep discussions
and information exchange.
That being said, we're not advocating
for creating a separation
or information gate
between the novices and experts,
but a lot of these issues,
these online communities
can be vastly improved
by applying the lessons learned
by HCI and CSCW researchers
in building successful online communities.
I'm gonna go ahead and
read one of the quotes
from an applied mathematician.
"When you go in the community,
you sometimes read questions
"from people who clearly have no idea
"what quantum computing is,
"because they have high
expectations of what it can do
"and that is not the case."
We also ask participants about the tools
and programming languages they
use and discuss the potential
of HCI research in the following areas;
Paper, GUI and code,
documentation and sharing,
debugging quantum algorithms
and quantum native programming.
Despite the numerous tools available
for programming quantum systems,
low fidelity tools have a strong foothold
in the day-to-day workflow
of quantum scientists
but, visual tools like
IBM's composer and Quirk,
are also really helpful in
applying what has been drawn
on these low fidelity tools.
And they use circuit-like
metaphor in which each qubit
is represented by a horizontal line.
One quantum chemist said,
"There's a big difference
"between writing a circuit
on a piece of paper
"and actually trying to
implement it on a machine.
"It's like trying to learn computing,
"just reading the theory of computing
"but never learning a programming language
"or getting anything to
work or debug anything."
As more people delve
into quantum computing
such as science
enthusiasts and developers,
a need arises for environments
that better integrate
documentation and sharing tools
and well-documented workflows
are integral to the learning process.
As with any development
workflow, debugging is a part
of the quantum computing process.
One participant described
how she debunked her code
by switching amongst different tools.
"When I'm tryna figure out an algorithm
"or debug something, I will
start with the composer
"and if I wanna make any
changes, I go over to QASM."
Which is quantum assembly language.
"To change things there,
"and I go back and forth between the two."
Another described how he
used the quantum simulator
to perform debugging as a simulator
and able to want to
view the internal state
of all the qubits.
"To debug, we used a C
simulator for everything.
"Out of the simulator,
"you can get the internal
state of all the qubits."
A deeper understanding of
how quantum programmers
could conduct the debugging process,
would provide opportunities
for developing new kinds
of quantum debugging tools
and this work should
build on previous research
that demonstrates the best practices
for scientific computing.
So the development of
programming languages
for quantum computers largely mirrors that
of classical computers but on
a much more rapid time scale.
Early quantum system programming evolved
from placing quantum gates
directly on a circuit
to writing assembly style code,
using the open quantum
language, assembly language.
But there's also newer
SDKs such as Qiskit,
that rely on Python to provide
a high-level abstraction
which are then translated
down to the level of QASM
before executing on real
quantum hardware simulation.
A one opportunity for HCI researchers,
is to consider whether
these abstractions use
to programming classical
computers should be applied
for programming quantum systems.
Visualization of qubit states
are difficult to create
because the number of
achievable quantum states
is exponential with respect
to the number of qubits.
And so, HCI researchers here can utilize
information visualization methods
to build more effective visualizations
for quantum computing.
User studies exploring
the interpretability
of large-scale graphs
and other large-scale
visualizations can contribute
to improve visualizations
of quantum states.
So I'm going to also
talk about moving forward
and what next, what the
future might look like.
So, while we favorably
suggest potential directions
for the expansion of quantum computing,
we acknowledge that our
optimism must be tempered
with realities of the field.
So a lot of these scientists
did talk about skepticism.
One of the quantum chemist said,
"The same thing happened with nano and AI.
"At one point, they get hyped
"because they make a
few advances and then,
"they don't deliver on their promises
"and then they get trashed so then,
"no one gives them attention.
"While they are being ignored, they slowly
"or maybe even incrementally improve.
"So suddenly, they have
some major advances."
One of our other participants said,
"We don't want the same thing happening
with quantum as with AI.
"Over hyping it and then realizing,
"that you can't accomplish
what you want to accomplish
"and then abandoning it."
But these insurgencies
around quantum computing
and potential for disillusionment
should not be reasons
to avoid approaching the field,
instead, we see them as
opportunities to show the strength
that great HCI research can bring.
Thank you.
(applause)
- [Woman] Thank you.
So, if anybody has questions,
we have this microphone here,
we also have a loose microphone
and the student volunteer
who's gonna run around, so
you can just raise your hand.
Any questions?
Yeah.
- [Eliana] Hey, I'm Eliana Husky Douglas
from Alta University.
So I've actually heard quantum
physics not in this sense,
but more in the sort
of adjunct on realism,
STS, sort of societal thing.
Do you see that more merging
with this area of work?
- That's not something
that we really asked about,
we were focused on these front end tools
for quantum computing but I think
it's such an expansive field
and it's continuously growing.
So I can imagine that there
are front ending tools
for those for those applications as well.
- [Woman] Any other
questions from the audience?
Last chance, all right.
Let's thank Zahra again.
