second,duration,transcript
0.03,5.13,hey everyone this is my introduction to
2.76,4.47,their analysis slash data visualization
5.16,3.99,with Python in this video I'm gonna
7.23,4.44,cover why you might want to use data
9.15,4.83,visualization and why you might want to
11.67,4.29,use Python and map lot live for it and
13.98,4.32,then we're gonna go over some simple
15.96,5.31,examples of how to actually use these
18.3,5.37,tools and then using these tools we're
21.27,4.769,gonna do sort of a real analysis with a
23.67,4.56,real data set at the end and in this
26.039,4.74,video I'm only gonna cover line charts
28.23,4.739,just to keep everything simple I'm also
30.779,3.69,gonna put a more detailed version of
32.969,2.881,this outline in the comment section
34.469,1.77,below so you don't have to watch the
35.85,2.729,whole thing
36.239,4.41,if you don't want to okay so why should
38.579,4.471,you use data visualization in the first
40.649,5.011,place well error visualization is
43.05,4.86,actually often the first step of any
45.66,4.44,type of data analysis work whether it's
47.91,4.379,simple there analysis or statistical
50.1,4.34,analysis or machine learning analysis
52.289,4.561,and the reason for that is because
54.44,4.419,visualizing data often gives you an
56.85,4.38,intuitive understanding of the data and
58.859,4.561,it often helps you see patterns that are
61.23,4.65,otherwise hard to see and we're gonna
63.42,5.04,see an example of that later okay and
65.88,5.25,why should you use Python for this well
68.46,5.04,python is not the only good choice but I
71.13,3.96,would say it's one of the best and the
73.5,3.33,reason is first of all it's a
75.09,4.41,general-purpose language that's pretty
76.83,4.62,easy to use and learn and it also has
79.5,5.52,many libraries for scientific computing
81.45,6.0,and data science including Mapple lib
85.02,4.08,and if you work at a company your
87.45,4.11,company might already use Python for
89.1,5.01,something else and if that's the case
91.56,4.44,that's really nice because then you and
94.11,4.259,your team are not gonna have to learn a
96.0,5.04,totally new language to do some data
98.369,3.421,analysis and why are we using Mapple
101.04,3.359,live for this
101.79,5.189,well Mapple live is not the only good
104.399,4.11,visualization library for python but
106.979,3.631,it's still one of the most popular
108.509,5.07,choices and there are actually other
110.61,4.049,libraries that are based on MATLAB so if
113.579,2.79,you learn MATLAB
114.659,3.39,it's gonna help you learn these you know
116.369,3.54,other libraries for example this one
118.049,4.92,called C born later on if you want to
119.909,5.521,and Mapple lib is also pretty easy to
122.969,4.921,get started with anyway let's dive into
125.43,4.38,a demo for this demo we're gonna use
127.89,4.17,something called Jupiter notebook and a
129.81,3.38,few other Python libraries and we're
132.06,3.02,gonna use anaconda
133.19,4.59,to install them if you're not familiar
135.08,4.77,with JIRA notebook and anaconda I have
137.78,4.5,an explanation about them in my Python
139.85,4.38,tutorial video so I'm gonna leave a link
142.28,4.31,to that in the description anyway to
144.23,6.15,install anaconda just search for
146.59,7.27,anaconda Python or directly go to
150.38,6.33,anaconda org and there find the button
153.86,5.25,that says download anaconda and select
156.71,5.43,whatever OS you are using I'm using Mac
159.11,4.86,here and click download under Python
162.14,4.2,three-point-something version instead of
163.97,5.28,python 2 point something because we're
166.34,5.16,gonna use python 3 here and select where
169.25,5.16,you want to download this package save
171.5,4.5,it and once it's downloaded open up the
174.41,4.35,package that you just download it and
176.0,6.48,then just click continue continue
178.76,5.67,continue continue agree install for me
182.48,4.29,only you or install on the specific disk
184.43,5.37,it doesn't matter which one and continue
186.77,5.16,and click install and this process is
189.8,3.89,gonna take a while after some waiting
191.93,4.86,you might see this prompt to install
193.69,5.95,microsoft vs code we don't need that so
196.79,6.12,let's just continue here and then close
199.64,4.55,and then to launch jupiter notebook you
202.91,2.91,can do it through this thing called
204.19,4.54,anaconda navigator
205.82,5.76,so just launch it like you launch any
208.73,6.96,other application just dismiss whatever
211.58,6.33,comes up and then click launch in that
215.69,4.38,jibra notebook section and then you
217.91,4.799,should see a browser window show up with
220.07,4.26,the jupiter notebook interface now if
222.709,3.271,you want to follow this tutorial the
224.33,5.73,first thing you should do is you should
225.98,7.039,create a new folder let's say on desktop
230.06,5.73,and let's call this one data
233.019,5.051,visualization and we're gonna put all
235.79,5.43,our data and to put a notebook file here
238.07,5.52,so let's first download our data to do
241.22,6.9,that just go to CS dojo dot io slash
243.59,8.25,data and download these two files sample
248.12,6.81,data CSV and country's that CSV and then
251.84,5.07,put these CSV files in the folder that
254.93,4.05,you just created data visualization
256.91,4.68,after that go back to the Jupiter
258.98,5.61,notebook interface and you can just
261.59,5.49,navigate to desktop and then the folder
264.59,4.74,that we just created data visualization
267.08,5.01,and to create a new jabber notebook file
269.33,6.209,here just find the new button on the
272.09,6.15,right and click Python 3 right now this
275.539,6.571,notebook file has untitled as the title
278.24,8.16,so let's change it to data visualization
282.11,6.39,with Python click rename and you have a
286.4,4.97,notebook called data visualization with
288.5,5.43,Python you can check it just by going to
291.37,4.63,desktop and then to the folder that you
293.93,4.56,just created and you should see that
296.0,5.129,there's a file called data visualization
298.49,4.679,with python dot I PI and B and it's
301.129,5.76,really important that this notebook file
303.169,5.43,is in the same folder as the data that
306.889,4.71,you just downloaded countries that CSV
308.599,5.66,and the other one and once everything is
311.599,8.16,set up just right in the first cell
314.259,8.921,import pandas as PD this means we want
319.759,5.46,to import a module called panels as P D
323.18,4.829,or we want to give it sort of a nickname
325.219,5.25,and that's going to be P D you can run
328.009,5.791,the cell by clicking this button and now
330.469,6.211,pandas is imported as P D and here we're
333.8,6.089,gonna use pandas for importing and using
336.68,5.579,some data from our CSV files and we need
339.889,6.18,to import another module here so for
342.259,8.58,that just right from my plot lib import
346.069,8.1,PI plot as PRT so this says from the
350.839,6.45,matplotlib package import PI pop module
354.169,6.36,and then call it PLT let's run this cell
357.289,6.24,and now PI plot is imported we're gonna
360.529,5.281,use PI plot from Apple lib for making
363.529,4.26,our charts so here let's first take a
365.81,4.8,look at a really simple example of how
367.789,7.05,to use PI plot so here I'm going to
370.61,9.6,write x equals 1 2 3 it's a list of 3
374.839,7.621,elements and y equals 1 4 & 9 and to
380.21,7.109,plot this set of data you can just write
382.46,8.04,PLT the plot X comma Y and this plots X
387.319,6.361,on the x axis and y on the y axis and
390.5,6.839,then you can show this graph by writing
393.68,6.06,PLT - OH when you run the cell you
397.339,3.691,should see a graph like this you see
399.74,5.16,that the values of X
401.03,8.46,our one two and three as expected and
404.9,6.9,the values of y are 1 4 & 9 if you want
409.49,3.06,to add a title to this graph you can do
411.8,5.49,so by writing
412.55,6.75,PLT dot title tests plots right after
417.29,4.47,the plot statement before the show
419.3,4.35,statement and then you can add an X
421.76,5.85,label and the y they bow as well by
423.65,7.83,writing PLT dot X label let's call the X
427.61,6.6,label X and Quixote dot y label let's
431.48,5.13,call it y label Y here and when you run
434.21,4.8,this cell you see that there's a title
436.61,5.16,called test plot and the X label called
439.01,4.47,X and why they both called Y okay what
441.77,4.14,if you wanted to plot multiple lines
443.48,5.64,here well to do that let's create
445.91,6.3,another list let's call it D and this
449.12,7.56,one is gonna have ten five and there
452.21,8.31,inside and to plot X and D on top of x
456.68,8.37,and y you can just right PLT the plots X
460.52,8.55,comma Z right after PR T dot X comma Y
465.05,7.11,and then let's fix the Y level here to Y
469.07,6.57,& Z and when you run this cell you
472.16,6.63,should see these two lines so the blue
475.64,6.57,line represents x and y and the orange
478.79,7.83,line represents x and z so PR t dot plot
482.21,6.63,x and z plot x on the x axis and z on
486.62,4.32,the y axis but right now it's kind of
488.84,5.34,hard to tell which line represents which
490.94,6.15,data so we can fix it by adding a legend
494.18,5.73,statement let's add that after the y
497.09,6.33,level statement by writing quixote dot
499.91,7.53,legend parentheses square brackets
503.42,7.68,double quotes this is y comma double
507.44,6.99,quotes this is Z so note here that this
511.1,6.3,legend function takes a list as an
514.43,5.43,argument and when you run this so you
517.4,5.16,should see this legend that says the
519.86,5.55,blue line is this is y and the orange
522.56,5.37,line is this is d okay that's the basics
525.41,5.52,of body now let's see how to load data
527.93,6.66,from a CSV file for that you can just
530.93,7.89,write sample and the score data equals
534.59,7.11,d or pandas that read CSV by the way I
538.82,5.97,just press tab here to do autocomplete
541.7,6.42,and then parentheses sample underscore
544.79,5.82,data dot CSV now before you run this
548.12,4.77,cell make sure that the notebook file
550.61,5.46,data visualization with Python that I PI
552.89,6.57,and B is in the same folder as sample
556.07,6.24,data dot CSV when you run this cell this
559.46,5.55,data sample data dot CSV is loaded by
562.31,4.77,the pandas module which we call PD and
565.01,4.32,then it's assigned to this variable
567.08,4.38,called sample data you can check what's
569.33,4.68,inside this variable sample underscore
571.46,5.49,data just by writing sample underscore
574.01,4.77,data in this new cell and then when you
576.95,4.2,run this cell you should see something
578.78,5.07,like this so as you can see this data
581.15,6.24,has three columns column a column B and
583.85,6.06,column C and five rows and you see a
587.39,4.59,bunch of values inside this table if you
589.91,4.26,want to check if this set of data is
591.98,5.16,exactly the same as the original data
594.17,6.03,you can do so by opening up the original
597.14,5.4,data file sample data dot CSV with Excel
600.2,4.86,or any other spreadsheet application and
602.54,5.55,when you open it you should see exactly
605.06,5.84,the same data column a column B column C
608.09,5.1,with five rows with a bunch of values
610.9,4.69,okay the only difference that you might
613.19,4.89,see is that in Jupiter notebook you
615.59,4.8,might see these numbers zero one two
618.08,5.07,three and four and these are just
620.39,5.82,indices for the rows and you can check
623.15,6.51,what type this variable is by writing
626.21,6.57,type parentheses sample underscore data
629.66,5.73,and when you run this cell it says that
632.78,5.1,this is pandals d'accord a friend data
635.39,5.07,frame so this is a data frame type
637.88,5.97,that's defined by the pandas module and
640.46,5.49,the data frame type is used to contain a
643.85,4.41,table like piece of information just
645.95,4.56,like this one okay now what if you
648.26,5.55,wanted to plot data in this data frame
650.51,6.15,for example the values of column a on
653.81,5.31,the x-axis and column C on the y-axis
656.66,4.95,what to do that you need to be able to
659.12,4.74,retrieve a specific column and you can
661.61,6.03,do that by writing sample underscore
663.86,4.13,data dot column dot C column underscore
667.64,2.75,C
667.99,4.86,when you run this cell you see that a
670.39,6.03,column see its retrieved it has the
672.85,6.3,values 10 8 6 4 and 2 and the numbers
676.42,5.4,you see on the left are just indices 0 1
679.15,5.04,2 3 & 4 just like before you can check
681.82,4.89,what type this is by writing type
684.19,4.89,parentheses sample data column C and
686.71,4.56,when you run the cell you see that this
689.08,4.5,is Parnell's duck or that series that
691.27,5.16,series so this is basically a series
693.58,5.37,type that's defined by the pandas module
696.43,4.95,and it's a type that's used to store a
698.95,5.7,series of values for example these
701.38,5.7,values 10 8 6 4 & 2 now what if we
704.65,4.41,wanted to retrieve a specific value out
707.08,3.66,of this series well if you want to
709.06,4.53,retrieve for example the second value
710.74,7.47,here 8 you can do so by writing sample
713.59,8.04,data column C dot I'd lock I LOC square
718.21,5.97,brackets 1 and this retrieves the second
721.63,4.92,value of the series 8 and if you want to
724.18,5.52,retrieve the third value 6 you can write
726.55,5.22,I lock 2 and that gets the third value
729.7,5.16,and if you want to retrieve the first
731.77,7.26,value you can write I lock 0 and this
734.86,6.33,should give us 10 and it does ok and
739.03,4.26,using what we've just learned here we'll
741.19,4.08,be able to plot the data in this data
743.29,5.67,frame so let's say we want to plot
745.27,7.32,column a on the x-axis and column B on
748.96,7.71,the y-axis we can do that by writing PRT
752.59,8.67,dot plots sample data dot column a comma
756.67,7.44,sample data dot column B and we can show
761.26,7.26,it by writing PLT that show let's see
764.11,8.07,how it looks we have 1 2 3 4 and 5 on
768.52,7.68,the x-axis and on the y-axis we have 1 4
772.18,6.27,9 16 and 25 as expected if you want to
776.2,5.4,add a column C to this data you can
778.45,6.42,write PRT dot plots sample data dot
781.6,6.42,column a so let's use column a as the
784.87,6.12,x-axis again and the sample data dot
788.02,5.4,column C when you run the cell you see
790.99,4.32,that there are two lines here just like
793.42,4.11,before if you want to make this graph a
795.31,5.13,little bit easier to read you can add a
797.53,4.31,titles and a legend and by the way in
800.44,4.34,this plot function
801.84,5.85,you can use the third argument to change
804.78,6.0,how the plot looks so for example if you
807.69,6.12,give it o in a string as the argument in
810.78,5.22,the first line for column B and when you
813.81,4.95,run the cell the plot becomes dots
816.0,4.62,instead of just a line and there's a lot
818.76,4.62,more you can do you can find more about
820.62,4.8,it in the official documentation anyway
823.38,4.23,let's move on and do sort of a real
825.42,5.16,analysis with a real data set now for
827.61,5.55,this analysis we're gonna use this data
830.58,5.04,country's dot CSV it should be in the
833.16,4.95,same folder as well and when you open it
835.62,5.1,you should see this data so we have a
838.11,6.54,bunch of countries and a bunch of ears
840.72,6.81,ranging from 1952 to 2007 for every five
844.65,4.89,years and population for each year for
847.53,4.22,that country and you can see that there
849.54,4.92,are a lot of rows in this data
851.75,6.16,so let's now import that data just like
854.46,6.48,before by writing PD or pandas that read
857.91,6.99,CSV parentheses single quotes or double
860.94,6.72,quotes countries dot CSV and by the way
864.9,5.55,this is a string single quotes country's
867.66,4.5,dot CSV and in Python you can use either
870.45,4.47,double quotes or single quotes to
872.16,5.22,express a string let's assign that to a
874.92,5.1,new variable called data by writing data
877.38,5.64,equals and when you run the cell this
880.02,5.34,data is loaded onto data so once you
883.02,5.43,write data in this new cell and run it
885.36,5.19,you should be able to see this data in a
888.45,4.62,data frame now let's say that the
890.55,4.5,analysis we want to do here is we want
893.07,5.22,to compare the population girls in the
895.05,5.31,US and China now to do this analysis the
898.29,5.22,first thing we want to do is we want to
900.36,5.61,isolate the data for the US and China we
903.51,5.4,can do that for the US by writing us
905.97,6.69,equals data square brackets there that
908.91,7.11,country EKOS United States in single
912.66,6.33,quotes and when you run this cell us now
916.02,4.89,only contains the data for the United
918.99,3.3,States so let's break down this
920.91,4.41,statement a little bit more
922.29,5.4,let's click insert here and insert cell
925.32,6.21,bill when you write the other country
927.69,6.57,equals United States this actually gives
931.53,4.26,a series of a bunch of choose and forces
934.26,5.82,so when the roll
935.79,7.53,is not us this gives us false and when
940.08,5.25,it is us it gives us true we don't see
943.32,4.68,any cheese here but there are a bunch of
945.33,5.19,cheese here where the rows are for the
948.0,5.85,US and then when you right there a scrub
950.52,6.09,buckets this a series of bunch of trues
953.85,5.25,and falses this gives us a portion of
956.61,5.88,the data where the value of the series
959.1,5.82,is true and that's the data for that us
962.49,4.71,as you can see here and then we just
964.92,4.5,assign it to this variable called us
967.2,4.29,okay let's now do the same thing for
969.42,4.8,China by writing China
971.49,5.73,EKOS theta square brackets that are the
974.22,5.61,country equals China and when you run
977.22,5.28,this so and when you write China here
979.83,5.46,and run this cell you should only see
982.5,5.31,the data for China and using these two
985.29,5.01,variables US and China will be able to
987.81,4.95,compare their population growth so let's
990.3,3.0,first plot u.s. population here by
992.76,5.07,writing
993.3,6.96,PLT dot plot us dear comma u.s. top
997.83,4.89,population you can show this plot with
1000.26,5.91,TLT does show and when you run this cell
1002.72,6.57,used to see this graph you see that US
1006.17,5.91,dollar is party on the x-axis and US the
1009.29,4.67,population is plotted on the y-axis but
1012.08,5.82,you see this scientific notation thing
1013.96,6.34,1e8 because the numbers are so big so
1017.9,5.04,let's divide the whole population each
1020.3,6.54,number in the series with 1 million or
1022.94,6.63,10 to the power of 6 that's 10 star star
1026.84,5.13,6 in python and when you run the cell
1029.57,6.39,again you now see the population in
1031.97,6.54,millions so this is 160 million and it
1035.96,5.85,goes up to I think more than 300 million
1038.51,5.01,in 2007 and let's plot China's data on
1041.81,5.7,top of the spot by writing
1043.52,5.88,PLT dot china that year actually you
1047.51,4.02,could use us that year or China that
1049.4,4.35,year because we have exactly the set of
1051.53,6.0,ears but for now let's just use China
1053.75,6.42,deer for the x-axis and China dot
1057.53,4.98,population for the y-axis and we're
1060.17,4.74,gonna divide this by 1 million as well
1062.51,4.65,to make the population show in millions
1064.91,4.77,when you run the cell you should see
1067.16,4.41,these two lines let's add a
1069.68,5.49,and titles here to make this graph
1071.57,7.92,easier to read so PLT legend parentheses
1075.17,9.09,square brackets United States and China
1079.49,9.12,and the X label PRT da hex label should
1084.26,7.23,be just here and PRT da Y label should
1088.61,5.94,be population run this cell again and
1091.49,4.92,this graph is much easier to read so you
1094.55,5.19,can see that China's population started
1096.41,5.82,out much larger than the US in 1952 and
1099.74,4.29,it seems like it's going faster as well
1102.23,3.84,now what if you wanted to compare
1104.03,4.77,instead of the absolute amount that you
1106.07,6.03,see here the percentage girls from the
1108.8,5.34,first year that we have in our data 1952
1112.1,3.72,well there are several different ways of
1114.14,4.53,doing this but I'm gonna show you just
1115.82,6.75,one way so to do that let's first copy
1118.67,5.88,this whole block of code over here now
1122.57,3.87,let's say that for each country we want
1124.55,4.23,to find the percentage girls from the
1126.44,6.96,first year so we want to set the first
1128.78,6.78,years amount to 100 as a 100% and show
1133.4,4.59,the rest of the data in percentage
1135.56,4.86,relative to the first year and we can do
1137.99,4.59,that by dividing this whole series for
1140.42,4.17,example us stop population with the
1142.58,5.1,first years population and then
1144.59,5.61,multiplying everything by 100 so to show
1147.68,5.34,you what I mean let's just create a new
1150.2,5.34,cell here above by clicking insert cell
1153.02,5.76,above here and here first I'm gonna
1155.54,5.58,write us that population and you see a
1158.78,5.19,series of population here for each year
1161.12,4.23,and the first row you see here is the
1163.97,5.73,first year's population or the
1165.35,7.44,population in 1952 I think let's insert
1169.7,5.61,a new cell below here now to retrieve
1172.79,5.55,the first years population you can just
1175.31,6.75,write us top population the Eyelock
1178.34,5.49,square brackets 0 and this gives us the
1182.06,4.05,first years population which is this
1183.83,4.59,amount then we can divide the whole
1186.11,4.56,population this whole series by the
1188.42,5.79,first years population just by writing
1190.67,5.43,us the population divided by us the
1194.21,5.28,publishing dialogue square brackets
1196.1,5.34,there and this gives us this series so
1199.49,4.14,as you can see the first year is set to
1201.44,4.62,1 and the rest of the years are
1203.63,4.74,shown in relative amounts and if you
1206.06,4.86,multiply everything by 100 just by
1208.37,5.34,writing start 100 here you'll be able to
1210.92,4.8,show everything in percentage amounts so
1213.71,7.41,you can see that the first year is shown
1215.72,7.56,as 100% and from 1952 to 2007 which is
1221.12,4.62,the last year we have the population
1223.28,4.56,grew by 90 percent now like I said
1225.74,4.26,earlier this is not the only method to
1227.84,4.26,show the relative girls in population
1230.0,3.78,but I chose this method here because
1232.1,3.96,it's pretty simple to implement
1233.78,6.44,anyway let's copy this whole thing and
1236.06,6.9,paste it over here to replace the y-axis
1240.22,5.47,let's do the same thing for China as
1242.96,5.97,well so copy the whole thing for China
1245.69,5.21,here and then replace us with China once
1248.93,5.52,you do that let's change the population
1250.9,6.73,my label to population girls and let's
1254.45,5.64,just write first year equals 100 just
1257.63,5.82,for clarity here when you run this cell
1260.09,5.94,you should see this graph so you can see
1263.45,4.86,that even in percentage amount China's
1266.03,4.56,population grew much faster than that of
1268.31,7.11,the United States the u.s. population
1270.59,6.98,grew by 90 percent from 1952 to 2007 but
1275.42,6.54,during the same time China's population
1277.57,6.76,grew by more than 120 percent okay this
1281.96,3.96,was a pretty simple example and it
1284.33,4.26,actually came from my course called
1285.92,4.47,introduction to data visualization if
1288.59,3.9,you liked this video I'd actually highly
1290.39,4.29,recommend it it's a course with more
1292.49,4.8,videos just like this one and I cover
1294.68,4.23,more realistic and complex examples and
1297.29,3.69,more different types of data
1298.91,4.05,visualization techniques not just line
1300.98,4.29,charts so if you want to check out the
1302.96,5.07,course you can just go to CS dojo da io
1305.27,5.4,/ more data you can actually take this
1308.03,5.28,course for free by signing up to plural
1310.67,5.94,sites 10 day free trial that's the site
1313.31,5.88,the course is hosted on anyway as always
1316.61,5.45,thanks for watching this video and I'll
1319.19,2.87,see you in the next one
