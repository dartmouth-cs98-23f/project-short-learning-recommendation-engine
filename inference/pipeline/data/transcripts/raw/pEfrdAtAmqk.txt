second,duration,transcript
0.08,2.96,you've likely seen videos on youtube
1.599,3.121,telling you the number one programming
3.04,3.44,language to learn right now if you want
4.72,3.839,to be rich that's not what we're doing
6.48,3.76,today instead we're going to travel to
8.559,3.441,the deepest darkest depths of the
10.24,3.439,software engineering field to discover
12.0,3.679,the programming languages that are loved
13.679,4.241,hated beautiful ugly and compiled
15.679,3.76,interpreted useful weird and everything
17.92,3.279,in between if you make it to the end
19.439,3.6,you'll have a roadmap for everything you
21.199,4.24,need to know to land a job as a junior
23.039,4.08,developer in 2023 or it might just make
25.439,3.521,you extremely depressed because this
27.119,3.121,iceberg is just the tip of the iceberg
28.96,2.719,of what you actually need to learn
30.24,3.36,choose any language and you'll find
31.679,3.921,another iceberg within this iceberg that
33.6,3.6,goes on forever like a mandelbrot set
35.6,3.279,which ironically you can represent and
37.2,3.6,code with any one of the languages we're
38.879,3.761,about to look at before we get started
40.8,3.759,there's quite a few programming icebergs
42.64,3.04,out there but this one ranks languages
44.559,2.881,based on where i think you might
45.68,3.68,encounter them as a beginner learning
47.44,3.84,how to code from scratch each level has
49.36,3.6,its own theme so let's get right into it
51.28,3.759,with languages that are designed to make
52.96,3.279,programming as easy as possible if you
55.039,2.881,know absolutely nothing about
56.239,3.761,programming the best place to start in
57.92,4.08,my opinion is scratch it was developed
60.0,4.0,at mit like some other languages on this
62.0,3.6,list but instead of typing out code you
64.0,3.439,drag and drop these blocks together like
65.6,4.4,lego bricks to represent things like
67.439,3.921,variables control flow and operators it
70.0,2.96,makes the thinking process behind
71.36,2.799,programming much more accessible and you
72.96,3.92,might be surprised at what you can
74.159,4.801,actually build with it
76.88,3.919,long before scratch though we had basic
78.96,3.199,or beginner's all-purpose symbolic
80.799,4.32,instruction code which came out of
82.159,4.561,dartmouth in 1964. at the time fortran
85.119,3.841,was all the rage but it wasn't beginner
86.72,4.88,friendly basic provides a bunch of basic
88.96,4.4,commands like print go to and four and
91.6,3.28,was included in most personal computers
93.36,3.36,which made it the go-to option for
94.88,3.76,people learning to code for the next 50
96.72,3.759,years now moving on to the next tier we
98.64,3.6,have the extremely popular dynamic
100.479,3.521,high-level languages the language most
102.24,3.919,people start with today is python
104.0,3.6,primarily because of its minimal syntax
106.159,3.441,it doesn't require curly braces
107.6,4.24,semicolons and stuff like that and
109.6,3.76,instead uses indentation to represent
111.84,2.959,different blocks of code the other
113.36,3.439,popular high-level language is
114.799,3.6,javascript syntactically it's pretty
116.799,3.201,ugly but it's a requirement if you want
118.399,3.04,to do web development and almost every
120.0,3.04,developer will have to touch it at some
121.439,3.121,point in their career any application
123.04,3.439,that can be written in javascript will
124.56,3.44,eventually be written in javascript now
126.479,2.721,after learning one of these languages
128.0,2.64,you'll be able to build pretty much
129.2,3.039,anything you can imagine and you could
130.64,3.28,have an entire career as a software
132.239,3.201,engineer without going any further down
133.92,2.8,the iceberg but you don't want to be on
135.44,3.439,your deathbed wondering if you should
136.72,3.519,have tried out php on this next tier we
138.879,3.36,have languages that are extremely
140.239,3.441,popular but a little more specialized
142.239,2.801,programmers like to get things done from
143.68,3.6,the terminal and there are scripting
145.04,3.919,languages like bash and powershell that
147.28,3.44,allow you to interact with your computer
148.959,3.36,programmatically instead of typing out
150.72,3.04,the same commands over and over again
152.319,3.041,write a bash script to make it
153.76,3.199,reproducible now if you get into web
155.36,3.76,development you'll also need to learn
156.959,4.401,html and css which when combined
159.12,3.52,together arguably form a turing complete
161.36,2.879,programming language they're not used
162.64,3.36,for programming in the traditional sense
164.239,3.521,but rather to define the structure and
166.0,3.519,style of a website and if i were to say
167.76,3.119,html is not a programming language i
169.519,3.201,would be immediately canceled by the
170.879,3.281,tech community in addition most apps
172.72,3.28,need a database and the most common
174.16,3.68,language for working with databases is
176.0,4.959,structured query language you can call
177.84,4.399,it sql sql or squeal this turn complete
180.959,3.121,although not used for regular
182.239,4.241,programming but rather to read and write
184.08,3.76,data in a relational database now python
186.48,3.2,is great and all but there are many
187.84,4.479,other dynamic languages that might be a
189.68,4.4,better fit for certain projects like php
192.319,3.441,made it easy to build server-side web
194.08,4.159,apps in the 90s and is still very
195.76,4.32,popular today lua is easier and faster
198.239,3.601,than python and is embedded into many
200.08,4.079,engines like roblox and world of
201.84,4.0,warcraft ruby is an easy to learn object
204.159,3.36,oriented language also commonly used to
205.84,3.119,build web apps with the rails framework
207.519,3.841,if you work in data science you'll come
208.959,4.721,across r which is used for statistics
211.36,4.159,and data vis or julia a more modern
213.68,3.199,option also used for scientific
215.519,3.36,computing the one thing all these
216.879,3.92,languages have in common is a dynamic
218.879,3.841,type system however as you build more
220.799,3.681,complex software you may realize that
222.72,3.68,you need a more rigid framework and one
224.48,3.839,way to accomplish that is with a static
226.4,3.52,type system this tier makes up the bulk
228.319,3.361,of production code out in the world
229.92,3.679,first up we have java which kind of
231.68,4.16,revolutionized programming with the java
233.599,4.081,virtual machine it compiles to bytecode
235.84,3.679,that runs on the jvm and that allows
237.68,3.759,developers to target any computer
239.519,3.761,architecture from a single codebase
241.439,3.52,syntactically it's an absolute dumpster
243.28,3.679,fire for beginners i made an entire
244.959,3.84,video about why people hate java but
246.959,3.601,having explicit types in your code can
248.799,4.321,make it much easier to understand and
250.56,4.0,refactor and modern ides like intellij
253.12,3.519,will pretty much make the code write
254.56,4.239,itself java is legendary but it was
256.639,4.0,followed up by microsoft with c-sharp
258.799,3.84,it's similar to java in many ways but
260.639,3.601,gets a lot more love from its users it's
262.639,3.761,used to build games with unity as well
264.24,3.76,as web and desktop apps with the.net
266.4,3.6,framework another well-loved tool from
268.0,4.32,microsoft is typescript it takes
270.0,4.24,javascript and adds a type system on top
272.32,3.84,of it making it much easier to work with
274.24,3.44,on large complex projects if you're
276.16,3.2,building a mobile app today you'll
277.68,4.239,likely be working with kotlin for
279.36,4.16,android swift for ios or dart with the
281.919,3.361,flutter framework these languages are
283.52,3.76,all statically typed but they go about
285.28,3.76,it in a more modern concise way with
287.28,3.84,features like type inference that
289.04,3.84,minimize boilerplate code next up we
291.12,3.68,have go which is a high performance
292.88,3.92,language developed at google to build
294.8,4.16,low-level systems it was designed as a
296.8,3.92,replacement for c and ken thompson one
298.96,4.0,of the original creators of c helped
300.72,4.0,design it the syntax is nice and concise
302.96,3.679,making it approachable to beginners and
304.72,4.08,it has a garbage collector which means
306.639,4.4,unlike c developers don't need to worry
308.8,3.76,about manual memory management okay so
311.039,3.44,at this point we've reached the level of
312.56,3.6,the iceberg where most people are afraid
314.479,3.201,to go any deeper things are gonna get
316.16,3.28,weird what happens is that many
317.68,4.079,developers get jaded with these big
319.44,4.319,heavy object-oriented languages and go
321.759,3.761,searching for a better way at this level
323.759,3.761,we have functional languages the most
325.52,3.84,famous of which is haskell instead of
327.52,3.519,classes inheritance and all kinds of
329.36,3.279,crazy design patterns the only
331.039,3.681,abstraction you really need is the
332.639,3.441,function it was inspired by the miranda
334.72,3.36,language and is named after the
336.08,4.48,mathematician haskell curry most
338.08,4.0,importantly variables are immutable and
340.56,2.96,functions have no side effects
342.08,3.2,surprisingly you can build almost
343.52,3.119,anything with these limitations although
345.28,3.199,most production code out there is not
346.639,3.441,functional most of us run into problems
348.479,3.361,when trying to figure out what a monad
350.08,3.92,is which in layman's terms is just a
351.84,4.4,monoid in the category of n-functors
354.0,4.56,haskell is great but microsoft developed
356.24,4.239,a functional sister language to c-sharp
358.56,3.919,called f-sharp unlike haskell which is
360.479,4.081,purely functional f-sharp is also
362.479,3.761,imperative and object-oriented making it
364.56,3.6,more approachable to developers coming
366.24,4.32,from higher up in the iceberg now if you
368.16,3.759,hate java a good alternative is scala
370.56,2.88,like f-sharp it supports both
371.919,3.761,object-oriented and functional
373.44,4.479,programming but it runs on the jvm it's
375.68,4.16,statically typed but there's another jvm
377.919,3.84,language called clojure that is both
379.84,3.44,functional and dynamic and this makes it
381.759,3.201,more well suited for getting things done
383.28,3.199,quickly with the trade-off of type
384.96,3.6,safety other popular functional
386.479,4.321,languages include ocaml which is used
388.56,4.639,extensively at facebook and elixir which
390.8,4.239,has a very nice ruby-like syntax and is
393.199,3.84,capable of building high-performance
395.039,3.761,real-time web apps there's also elm
397.039,3.6,which is a purely functional language
398.8,4.239,that compiles to javascript which can
400.639,4.241,build front-end uis with zero runtime
403.039,3.841,errors but now it's time to go one level
404.88,4.0,deeper to the heart of the iceberg these
406.88,3.84,languages are absolute chats they're
408.88,4.159,low-level systems languages that can
410.72,3.84,manually manage and optimize memory and
413.039,3.681,are used to build things like operating
414.56,3.68,system kernels and compilers that make
416.72,3.68,all the other soy-based languages
418.24,4.16,possible the most legendary of which is
420.4,3.76,c it was used to build the windows mac
422.4,3.68,and linux operating system kernels and
424.16,3.36,its curly brace syntax inspired many
426.08,3.04,other languages on this list
427.52,3.2,surprisingly it's not all that hard to
429.12,3.6,learn and has a relatively small set of
430.72,4.16,keywords to memorize however being able
432.72,3.919,to use it effectively requires extensive
434.88,3.92,knowledge of algorithms and computer
436.639,4.081,architecture for example c doesn't have
438.8,3.119,hash maps or dictionaries so you'll have
440.72,2.96,to learn how to code up that data
441.919,3.12,structure on your own c was the perfect
443.68,3.919,programming language when it came out in
445.039,4.241,1969 but it only supported procedural
447.599,4.081,programming and eventually developers
449.28,4.319,wanted more c plus was originally a
451.68,3.6,super set of c designed to extend it
453.599,3.761,with object-oriented programming
455.28,4.0,patterns like classes and inheritance
457.36,3.6,unlike c it's extremely hard to learn
459.28,3.52,and provides many opportunities to not
460.96,3.76,only shoot yourself in the foot but blow
462.8,3.6,your entire leg off this is a reference
464.72,3.36,to manual memory management with
466.4,3.359,pointers which got that name because
468.08,3.2,they're just as dangerous as pointing a
469.759,3.12,gun at someone despite its learning
471.28,3.44,curve it's an extremely prolific
472.879,4.241,language used to build highly optimized
474.72,4.64,software like game engines compilers and
477.12,4.4,so on d and c plus are still extremely
479.36,4.48,relevant today but the modern chad tends
481.52,4.399,to prefer rust for low level programming
483.84,4.639,it doesn't have a garbage collector but
485.919,4.241,unlike cnc plus plus it uses a technique
488.479,3.521,called borrow checking instead of
490.16,3.52,pointers for memory management this
492.0,3.919,makes it much easier to write memory
493.68,4.079,safe programs and consistently ranks as
495.919,3.521,the most loved language in the world the
497.759,3.681,languages on this tier are extremely
499.44,4.159,popular but now we descend further into
501.44,4.08,the modern languages that you probably
503.599,3.521,haven't heard of first up we have v
505.52,4.079,which is a high performance systems
507.12,4.639,language that feels very similar to go
509.599,4.32,but unlike go it doesn't use a garbage
511.759,3.921,collector and unlike rust it doesn't do
513.919,3.68,borrow checking but it can still create
515.68,4.08,memory safe applications with its own
517.599,4.0,auto free innovation where the compiler
519.76,3.6,basically cleans everything up i have no
521.599,4.24,idea how it works but it looks cool
523.36,4.32,another modern replacement 4c is zig
525.839,3.761,it's designed to simplify low level
527.68,3.839,programming by eliminating features like
529.6,3.52,macros and meta programming and is very
531.519,3.921,explicit when it comes to memory
533.12,4.48,management and it can cross compile cnc
535.44,3.76,plus plus just like clang zig is not to
537.6,3.2,be confused with nim another high
539.2,3.52,performance language that's very
540.8,4.159,expressive like python but is statically
542.72,4.08,typed and interestingly it has a tunable
544.959,3.601,garbage collector that can be turned off
546.8,3.52,altogether to enable manual memory
548.56,3.92,management recently google announced
550.32,4.079,carbon designed to be a successor to c
552.48,4.16,plus plus what makes it special is that
554.399,4.0,it can fully interop with a legacy c
556.64,3.759,plus code base another low-level
558.399,3.521,specialty language is solidity it's a
560.399,2.88,statically typed object-oriented
561.92,3.28,language but is designed for
563.279,3.68,implementing smart contracts especially
565.2,3.68,on the ethereum blockchain then we've
566.959,4.161,got hack from facebook which is designed
568.88,3.92,to interop with php the original website
571.12,3.279,was built with php but they needed a
572.8,3.28,language with better performance and a
574.399,3.601,type system to scale it up to the
576.08,3.92,monstrosity that it is today there are
578.0,4.24,many other good modern languages at this
580.0,4.16,point in the iceberg like crystal hacks
582.24,3.52,and pharaoh just to name a few but now
584.16,2.96,it's time to go down to the next level
585.76,3.44,where we look at languages that are
587.12,3.52,still either widely used or historically
589.2,3.44,important but not something you would
590.64,3.36,likely choose to program in fortran was
592.64,3.28,the first high-level programming
594.0,4.0,language and was by far the most popular
595.92,4.32,language for many years intel c came
598.0,5.12,around not long after fortran lisp was
600.24,4.719,invented in 1958 it pioneered many ideas
603.12,4.08,we take for granted in computer science
604.959,4.401,today like dynamic typing higher order
607.2,3.84,functions recursion and repel it
609.36,3.84,inspired many other languages like
611.04,4.08,racket scheme closure and to a certain
613.2,3.44,extent javascript another highly
615.12,4.0,influential language that came out this
616.64,4.24,year was algorithmic language it's a big
619.12,4.0,complex language and never got as
620.88,3.92,popular as fortran but its type system
623.12,3.6,and use of expressions had a major
624.8,4.64,influence on the development of c and c
626.72,4.32,plus plus the following year in 1959
629.44,3.76,cobalt was born if you want to make
631.04,4.08,money in the 2020s learn cobol because
633.2,3.84,over 40 percent of banking systems still
635.12,5.04,use it with over 200 billion lines of
637.04,5.28,code in production today in 62 apl first
640.16,4.16,appeared which stands for a programming
642.32,3.519,language it implements linear algebra
644.32,3.6,directly into the language with a
645.839,3.761,multi-dimensional array or matrix being
647.92,3.44,the central data type this leads to
649.6,3.52,extremely terse code that resembles
651.36,4.56,mathematical notation and makes heavy
653.12,4.399,use of the greek alphabet in 1970 pascal
655.92,3.359,was invented and took the programming
657.519,4.081,world by storm it's a procedural
659.279,4.081,language with a familiar syntax and also
661.6,3.12,had very fast compile times it
663.36,3.44,eventually became the most popular
664.72,3.84,language in the early 1980s before the
666.8,3.36,rise of c a few years later there are
668.56,3.519,many other important languages from this
670.16,3.76,time period like simula the first
672.079,4.161,object-oriented language that went on to
673.92,4.32,inspire small talk which itself inspired
676.24,4.159,many other object-oriented languages
678.24,3.76,like python java and ruby then there's
680.399,3.201,erlang a concurrent functional
682.0,3.44,programming language that basically
683.6,3.84,powered the entire telecom industry and
685.44,3.92,is still in use today there's ada a
687.44,3.68,general purpose language named after ada
689.36,3.68,lovelace who's generally considered the
691.12,3.92,world's first computer programmer it was
693.04,3.44,extremely popular in the 1980s and is
695.04,3.52,still used today by the department of
696.48,3.68,defense to blow people up in addition we
698.56,3.36,should mention prologue the language
700.16,3.28,that pioneered logic programming and
701.92,3.44,meta language which pioneered the
703.44,3.6,polymorphic type system used by other
705.36,3.28,statically type functional languages
707.04,3.359,like haskell there are many other
708.64,3.68,historical languages we could talk about
710.399,3.921,but now it's time to descend into the
712.32,3.68,realm of the esoteric where we find rare
714.32,3.84,and bizarre languages that feel more
716.0,3.839,like works of art than engineering tools
718.16,4.08,the first known esoteric language came
719.839,4.24,out in 1972 and was called intercal
722.24,3.839,which stands for compiler language with
724.079,3.76,no pronounceable acronym it was designed
726.079,4.081,as a parody to make fun of the languages
727.839,4.161,of the day like algol and fortran it has
730.16,3.28,an entire paradoxical reference manual
732.0,3.04,that makes no sense and has an
733.44,3.44,interesting choice of keywords like
735.04,3.44,please and mingle please doesn't
736.88,3.44,actually do anything but it makes you a
738.48,4.4,more polite programmer next up we have
740.32,4.56,brain brain is most well known for being
742.88,3.6,extremely minimal urban mueller created
744.88,3.36,breakback in college and it works by
746.48,3.44,initializing an array then gives you a
748.24,3.76,pointer and eight different characters
749.92,3.76,to manipulate memory in that array this
752.0,3.12,results in a code base that will
753.68,3.76,your brain up it inspired another
755.12,4.159,language called male bulge or maybe it's
757.44,3.519,malbulgia which is named after the
759.279,3.68,eighth circle of hell in the divine
760.959,4.0,comedy or dante's inferno if you thought
762.959,3.68,brain was difficult this language takes
764.959,3.12,things to a whole nother level it makes
766.639,3.121,programming so difficult that i can't
768.079,3.521,even summarize how it works in a single
769.76,3.92,sentence if that's a little too dark a
771.6,3.76,far more fun language is chef which is
773.68,3.68,stack based and is designed to make your
775.36,4.159,code look like a cooking recipe instead
777.36,4.24,of concise keywords it uses sentences
779.519,3.921,like put ingredient into mixing bowl to
781.6,3.44,push a value onto the stack put these
783.44,3.6,commands together to create a hello
785.04,3.52,world souffle then specify how many it
787.04,2.96,serves to write it to the standard
788.56,3.2,output that's pretty cool but it may
790.0,3.279,seem kind of silly to an intellectual
791.76,2.879,the shakespeare programming language
793.279,3.36,will make your code look like a
794.639,3.521,shakespearean play it provides the low
796.639,4.081,level control of assembly with the
798.16,3.84,verbosity of 16th century poetry but if
800.72,3.119,words aren't really your thing then a
802.0,4.0,good language choice would be piet which
803.839,4.24,is named after piap mondrian it's also
806.0,4.0,stack based but you write code utilizing
808.079,3.921,patterns of 20 different colors on a
810.0,4.0,bitmap image the end result is a code
812.0,3.519,base that looks like abstract art now if
814.0,3.519,you're a crazy cat lady you're really
815.519,3.44,going to love this next language lol
817.519,4.081,code which provides a developer
818.959,4.801,experience similar to an llcap meme you
821.6,4.239,open a program by saying hi then end it
823.76,4.0,by saying k thanks bye loops can be
825.839,3.68,performed with i'm in your or broken out
827.76,3.519,of with i'm out of year that's nice and
829.519,4.0,easy to understand but it would be even
831.279,3.92,better if it included emojis emoji code
833.519,3.521,is a language where the syntax is
835.199,3.76,entirely based on emojis modern
837.04,3.599,developers like to use so many emojis in
838.959,3.601,their documentation that this language
840.639,3.841,would just streamline the entire process
842.56,3.36,it's a fully featured object-oriented
844.48,3.039,language where you can define code
845.92,3.68,blocks with grapes and watermelons
847.519,3.841,classes with rabbits and generics with
849.6,4.08,shells and eggplants another language
851.36,4.56,that's not necessarily esoteric is c
853.68,4.0,minus minus it's designed as a portable
855.92,3.919,assembly language that borrows heavily
857.68,4.56,from sea but omits many of its features
859.839,4.641,the ultimate dialect of c though is holy
862.24,4.32,see which was created by terry a davis
864.48,3.599,used to build temple os an operating
866.56,3.279,system written under the direction of
868.079,3.681,god holy c is actually really cool
869.839,3.761,because it works like c but it's just in
871.76,3.04,time compiled on the operating system
873.6,2.799,which means you can use it like a
874.8,3.12,scripting language that can interact
876.399,3.201,directly with the operating system
877.92,3.52,kernel and that brings us to the final
879.6,3.52,tier the absolute lowest level you can
881.44,3.839,go with your learning as a software
883.12,3.76,engineer assembly is a language of which
885.279,3.761,there are many variations that
886.88,4.72,correspond directly to the architecture
889.04,4.88,on the cpu different cpu architectures
891.6,4.239,like x86 and arm require different
893.92,3.44,machine code instructions assembly
895.839,3.601,allows you to represent this code with
897.36,4.32,simple commands that manipulate values
899.44,4.399,on the cpu's registers now if that looks
901.68,3.839,too easy the next level down is machine
903.839,3.921,code at this point we're looking at ones
905.519,4.401,and zeros or raw binary usually
907.76,3.68,represented in hexadecimal format to
909.92,3.039,code at this level you'll need to have
911.44,3.6,intimate knowledge of the computer's
912.959,3.841,architecture and also be able to count
915.04,3.44,in binary but if we go beyond machine
916.8,4.64,code now we're looking at billions of
918.48,5.76,transistors on a cpu a single transistor
921.44,4.399,represents one bit like a one or zero by
924.24,3.52,controlling the amount of electricity
925.839,3.761,that flows through a piece of silicon
927.76,3.84,now in order to do anything useful the
929.6,5.2,transistors need to be organized into
931.6,5.44,logic gates like not and or exclusive
934.8,4.08,ore and so on ultimately it's these very
937.04,4.0,simple chunks of logic that perform the
938.88,3.519,miracle of taking some electricity as an
941.04,3.2,input that can produce some other
942.399,3.36,electricity as an output and do it
944.24,3.039,billions of times per second all over
945.759,3.2,the world so you can play video games
947.279,3.281,with your friend in vietnam if that was
948.959,3.921,too easy then you may want to look into
950.56,3.839,the field of quantum electrodynamics you
952.88,3.6,fully understand how these particles
954.399,4.0,behave in the electromagnetic quantum
956.48,4.24,vacuum you can then use your skills to
958.399,4.24,build a next-gen blazingly fast quantum
960.72,3.6,computer and become the richest person
962.639,3.281,in history at this point in the iceberg
964.32,4.079,there's only one place left to go the
965.92,4.32,scariest place of all yourself once you
968.399,4.0,know everything the question becomes
970.24,3.839,what is knowledge epistemology is the
972.399,3.041,theory of knowledge and philosophers
974.079,3.44,still don't have a good answer to this
975.44,4.24,day reality only exists within my own
977.519,3.44,mind for all i know the entire external
979.68,2.88,world and all the knowledge i've
980.959,3.521,acquired are just illusions and
982.56,3.519,projections from my own ego maybe
984.48,3.039,there's a god-like being that controls
986.079,3.281,all the sensations and knowledge
987.519,3.68,received by my mind or perhaps my real
989.36,3.68,body isn't a vat of goo and i'm already
991.199,3.521,living in zuckerberg's metaverse or
993.04,3.52,maybe i never came out of that ayahuasca
994.72,3.44,trip i took 10 years ago the only thing
996.56,3.44,i really know is that i know nothing
998.16,5.32,thanks for watching and i will see you
1000.0,3.48,in the next one
