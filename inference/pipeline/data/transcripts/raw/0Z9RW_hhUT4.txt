second,duration,transcript
0.719,4.161,for the love of god stop spending all of
3.04,2.96,your precious interview study time on
4.88,2.399,coding problems
6.0,2.8,if you've been studying for a tech
7.279,3.201,interview you've probably been prepping
8.8,2.56,for software engineering interviews the
10.48,2.72,wrong way
11.36,3.76,especially if you want to land a senior
13.2,4.32,principal or staff engineering role at a
15.12,4.4,fan company in this video i'll explain
17.52,4.16,why most interview prep resources
19.52,3.999,especially on youtube are garbage
21.68,3.599,and what you should do to effectively
23.519,8.321,prepare for a technical interview if you
25.279,6.561,want to land a senior role
33.76,4.56,meta here i'm a principal engineer at
36.16,4.399,amazon where i've spent the entirety of
38.32,4.16,my almost 15-year career
40.559,3.441,i've conducted over 800 technical
42.48,3.12,interviews i've also
44.0,3.36,trained hundreds of software engineers
45.6,3.36,on how to conduct tech interviews
47.36,2.8,you can disagree with my opinions but
48.96,2.0,you can't say i don't know what i'm
50.16,2.879,talking about
50.96,3.84,my advice is based on my experience and
53.039,2.641,i believe that it holds true for most
54.8,4.079,large companies
55.68,4.8,especially fang companies okay so why is
58.879,3.2,most advice about software engineering
60.48,3.679,interviews garbage
62.079,4.241,the reason simple it's all geared toward
64.159,3.921,junior and entry level positions
66.32,3.36,the emphasis on coding data structures
68.08,3.359,and algorithms is warranted if you've
69.68,3.6,just graduated from college or even
71.439,3.841,completed a boot camp
73.28,4.479,even then grinding leak code questions
75.28,3.199,or god forbid you spend good money on
77.759,2.961,interview prep
78.479,3.68,courses this is so much about the point
80.72,4.48,of tech interviews
82.159,4.881,what do you mean let's get meta you have
85.2,3.2,to understand why tech interviews exist
87.04,2.96,in their current form
88.4,2.96,there's simply not enough time to know
90.0,2.24,if you're a good fit for the role in
91.36,2.32,level
92.24,3.199,they have to make as good use of what
93.68,3.68,little time they have because they're
95.439,2.961,about to make a big decision
97.36,3.28,let's think about it from their
98.4,3.999,perspective they need a good software
100.64,4.08,engineer and if they're a big company
102.399,4.801,they need an army of software engineers
104.72,4.16,stakes are high if they hire a bad one
107.2,3.12,it will take them six months to know
108.88,3.279,that it's not working out then it'll
110.32,2.479,take at least six months if not a year
112.159,3.041,to
112.799,3.68,manage them out all the while they're
115.2,2.959,paying high salaries
116.479,3.361,benefits they have to pay for the rent
118.159,3.681,in the office and the computer they're
119.84,3.68,writing bad code on
121.84,3.36,if you factor in the cost of recruiting
123.52,3.12,this higher is gonna cost on the order
125.2,2.239,of five hundred thousand to a million
126.64,3.119,dollars
127.439,4.16,all of this on top of opportunity costs
129.759,3.521,there are also knock-on effects
131.599,4.081,bad hires bring the software quality
133.28,3.36,down cause more problems that cost money
135.68,2.96,to solve
136.64,3.76,they lower team morale and if it's a
138.64,4.319,small company it might even make the
140.4,5.12,difference as to whether they survive
142.959,3.521,no business has 12 to 18 months to waste
145.52,3.439,on the other hand
146.48,4.0,a good hire does the exact opposite not
148.959,3.041,only do they write amazing code
150.48,3.6,they solve business problems before they
152.0,3.519,happen and increase quality not only of
154.08,2.799,the existing software
155.519,3.681,but they install mechanisms that
156.879,3.44,increase future quality they grow other
159.2,3.6,engineers on the team
160.319,3.601,and replicate themselves also because
162.8,3.04,they have experience
163.92,3.76,they know a lot of other good engineers
165.84,3.6,if it's an awesome place to work
167.68,3.12,they'll recruit other top performers to
169.44,4.0,come to the team
170.8,4.4,okay fine stakes are high the second
173.44,2.799,part is that even though tech interviews
175.2,2.959,take all day
176.239,4.0,there's not enough time to do a proper
178.159,3.761,assessment that's why internships are
180.239,2.481,the best path for getting an entry-level
181.92,3.36,job
182.72,4.4,it's a two-month job interview for
185.28,2.72,senior and principal roles the maximum
187.12,2.72,you have is six
188.0,3.68,hours to determine if a person is a good
189.84,4.16,fit for the roll-in level
191.68,4.32,that's just not enough time at amazon
194.0,3.68,some teams don't expect new hires even
196.0,2.08,at a senior level to make meaningful
197.68,2.72,design
198.08,3.92,contributions for six months much less
200.4,3.199,six hours
202.0,3.28,therefore there are two pillars to
203.599,3.92,modern interview theory
205.28,4.56,first since actual code design and
207.519,4.321,leadership evaluation takes too long
209.84,4.16,the only reasonable approach is to rely
211.84,4.479,on proxies for the same
214.0,3.84,second these proxy should be very
216.319,3.041,difficult to imitate
217.84,3.52,i don't apply data structures and
219.36,4.08,algorithms daily but i do know about
221.36,3.599,them and i also know how to code
223.44,3.04,that's why people ask data structures
224.959,3.2,and algorithms questions
226.48,3.119,if you don't know how to code there's no
228.159,3.281,chance you could fake it
229.599,3.761,so it's a proxy that allows companies to
231.44,3.359,effectively screen people out
233.36,3.599,if you're interviewing for a senior
234.799,3.281,principal role coding is necessary but
236.959,2.56,not sufficient
238.08,3.28,companies are looking for people that
239.519,3.761,can contribute meaningfully to projects
241.36,3.2,that take many people potentially years
243.28,3.36,to complete
244.56,3.679,for fan companies these are usually big
246.64,3.28,systems and they're looking for people
248.239,3.441,that are engineering leaders
249.92,3.519,the best proxies for system design and
251.68,3.6,leadership are stories about people that
253.439,4.161,have prior experience building big
255.28,3.919,systems and leading teams of engineers
257.6,3.44,so the way to think about this is that
259.199,4.161,there are three levels to the software
261.04,3.92,engineering interview video game
263.36,4.16,you won't get an offer unless you beat
264.96,4.56,all three levels level one is coding
267.52,3.76,software engineers code if you don't
269.52,3.52,know how to code you don't know why n
271.28,3.68,squared algorithms are bad
273.04,3.2,you don't know that stack overflow isn't
274.96,3.36,just a website
276.24,4.399,the proxy has done its work this is the
278.32,4.24,level most interview prep focuses on
280.639,3.361,focusing on beating the first level over
282.56,2.56,and over again is a waste of your
284.0,3.68,precious time
285.12,4.4,level two is system design i'm defining
287.68,3.44,a system as a set of software components
289.52,2.959,that work together to achieve an outcome
291.12,1.84,that takes the coordination of many
292.479,2.881,people
292.96,4.08,to design implement test and maintain
295.36,3.119,the reason system design questions are
297.04,2.8,asked is because they need people to
298.479,4.241,make positive and significant
299.84,4.48,contributions to their existing systems
302.72,2.88,you can't get good at system design
304.32,2.8,questions by approaching them like
305.6,3.36,coding problems
307.12,3.68,building a big bridge takes years and
308.96,2.64,the collective efforts of many many
310.8,2.239,people
311.6,3.28,you can design and create a scaled
313.039,3.521,version of the bridge but until you've
314.88,2.319,built a few you won't know what to look
316.56,2.16,out for
317.199,3.361,what things could be real problems if
318.72,3.039,you take shortcuts and where you can
320.56,2.32,save time by doing things more
321.759,3.681,efficiently
322.88,3.28,here's a secret system design questions
325.44,2.479,on the surface
326.16,3.68,look like situational questions but in
327.919,3.28,reality they are veiled behavioral
329.84,2.639,questions
331.199,3.44,let me explain the difference between
332.479,4.241,situational and behavioral problems
334.639,4.481,situational questions take the form of
336.72,4.88,what would you do in this situation
339.12,4.32,all coding questions are situational
341.6,2.879,take the example of balancing a binary
343.44,2.64,tree
344.479,3.201,when you ask this coding problem you're
346.08,3.6,saying hey candidate
347.68,3.68,you want a job here pretend you needed
349.68,2.32,to balance a binary tree or you got
351.36,3.04,fired
352.0,3.759,how exactly would you do that the other
354.4,3.359,type of question you'll see in an
355.759,4.0,interview is behavioral they take the
357.759,2.961,form of tell me about a time you were in
359.759,2.961,this situation
360.72,3.599,and tell me exactly what you did the
362.72,3.199,distinction between situational and
364.319,3.921,behavioral questions is really
365.919,4.161,important situational questions are the
368.24,3.12,best proxy for the ability to code
370.08,3.04,during an interview
371.36,3.6,behavioral questions are the best proxy
373.12,3.76,for system design and leadership
374.96,3.92,asking a coding question as a behavioral
376.88,3.36,one sounds really odd
378.88,3.36,tell me about a time you needed to
380.24,4.48,balance a binary tree
382.24,4.239,similarly companies avoid asking
384.72,3.52,leadership questions in a situational
386.479,3.681,manner because it's easy to answer these
388.24,3.2,sorts of questions abstractly
390.16,3.36,which means that it would be easy to
391.44,4.16,imitate tell me what you would do
393.52,3.76,if you disagreed strongly with your team
395.6,3.28,is a much different question then tell
397.28,2.479,me about a time you disagreed strongly
398.88,4.08,with your team
399.759,4.72,so back to my secret system design
402.96,3.28,questions sound like situational
404.479,3.201,questions but in reality they're veiled
406.24,3.04,behavioral questions
407.68,3.04,when the interviewer asks you about how
409.28,3.28,you would design the facebook feed
410.72,3.52,it sounds like a situational question
412.56,3.12,but in reality the interviewer is
414.24,3.12,probing you on whether you have built
415.68,2.959,systems like this in the past
417.36,3.04,you might sketch out a system that
418.639,4.0,solves this problem on a small scale
420.4,3.519,but the inevitable follow-ups will be
422.639,3.84,what would you do if this needed to
423.919,3.921,scale to millions or billions of people
426.479,3.601,how would you ensure uptime and
427.84,3.84,resiliency how do you make sure it's
430.08,3.119,lightning fast even though there's so
431.68,3.44,much data worldwide
433.199,3.12,these questions are easiest to answer if
435.12,3.12,you have the experience
436.319,3.6,if you don't it will be exceedingly
438.24,3.359,apparent if you want to know how to get
439.919,2.72,good at system design or find this type
441.599,2.561,of content useful
442.639,3.201,let me know in the comments below or by
444.16,3.84,smashing that subscribe button
445.84,4.639,so level one is code level two is system
448.0,4.8,design and the final level is leadership
450.479,3.601,why is the last level leadership you ask
452.8,3.119,the reason is because senior and
454.08,2.8,principal engineers are responsible for
455.919,2.641,the tech teams
456.88,4.56,but do not have direct reports like a
458.56,5.039,manager leadership without authority is
461.44,3.759,really hard to do it requires that you
463.599,3.6,have the technical drops to contribute
465.199,3.68,meaningfully to big projects
467.199,3.84,handle problems and headaches that pop
468.879,2.88,up make sure that the software quality
471.039,2.56,is high
471.759,3.761,that the software architectures the
473.599,3.361,system of systems will scale to the
475.52,3.6,product or business
476.96,3.919,but you can't order people around the
479.12,3.28,set of skills is exceedingly rare and
480.879,3.521,that's why fang companies pay the big
482.4,3.68,bucks for senior engineers
484.4,3.6,behavioral questions have a wonderful
486.08,3.119,property that makes them particularly
488.0,3.12,good proxies
489.199,3.601,you can ask the same question to junior
491.12,3.68,senior and principal engineers
492.8,3.76,their answers will both tell you whether
494.8,3.6,they are a good fit for the company
496.56,3.84,but also based on the scope of their
498.4,4.079,answers they also tell you indirectly
500.4,3.519,what level the candidate is
502.479,3.521,it doesn't matter if people are really
503.919,3.84,strong coders or system designers
506.0,3.68,if they have small potato answers to
507.759,3.601,leadership questions they will be either
509.68,4.159,down leveled or passed on
511.36,3.44,let's play a game i'll start to answer
513.839,2.64,the same question
514.8,3.84,in different ways tell me if it's a good
516.479,3.44,answer and what level they should be
518.64,3.04,tell me about a time you strongly
519.919,3.281,disagreed with your team
521.68,3.36,let me tell you about the tabs versus
523.2,3.759,spaces war of 2019
525.04,3.6,i configured all of our builds to fail
526.959,8.88,if the formatting didn't comply with my
528.64,7.199,personal formatting template
537.68,3.2,i wanted to refactor some code so that
539.44,2.959,it was easier to test
540.88,3.04,we had a bunch of bugs that were due to
542.399,3.041,poor software quality
543.92,3.28,my team disagreed not because they
545.44,5.12,didn't like tests but because we had
547.2,3.36,crazy tight deadlines
557.839,6.0,so i really like emacs
564.959,4.241,we were having operational issues with
566.8,4.08,the big kitchen sink api so i proposed
569.2,2.96,that we moved to an asynchronous
570.88,2.72,processing model
572.16,3.2,it would make our lives so much better
573.6,3.28,in the long run but my team didn't like
575.36,2.4,it because it would be a lot of work
576.88,2.72,and they didn't think it was
577.76,4.48,commensurate with the operational issues
579.6,2.64,we were facing
588.399,4.401,we made an acquisition of a company and
590.56,3.12,my vp wanted to create an aws service
592.8,2.32,out of it
593.68,3.04,my team wanted to position the web
595.12,3.44,service with underlying abstractions
596.72,3.44,that catered more towards developers who
598.56,2.64,were okay with handling low-level
600.16,2.72,details
601.2,3.6,but i wanted to create a service that
602.88,3.92,packaged the functionality in higher
604.8,3.44,level apis that made it easy for
606.8,11.2,developers of a certain type of
608.24,12.08,application to move quickly
618.0,3.68,so how should you prepare the first step
620.32,3.28,is to allocate your study time
621.68,2.8,proportionally based on expectations at
623.6,2.799,that level
624.48,3.76,the three aspects of interviews are all
626.399,3.68,important but in different amounts
628.24,3.279,for junior entry-level interviews i
630.079,3.681,recommend prepping 90
631.519,3.681,coding and 10 behavioral questions if
633.76,2.4,you're coming straight out of school or
635.2,2.48,a boot camp
636.16,3.28,if you have some but not a lot of
637.68,2.64,industry experience i would adjust this
639.44,3.76,to 75
640.32,4.32,coding and 25 behavioral you won't be
643.2,2.24,expected to know much about system
644.64,2.8,design
645.44,3.519,and the expectation is that you don't
647.44,3.12,have a lot of experience to draw from
648.959,3.12,for behavioral questions
650.56,3.519,if you have some experience but aren't
652.079,3.921,targeting a senior engineering role i
654.079,3.921,recommend forty percent coding
656.0,3.839,twenty percent design and forty percent
658.0,4.0,behavioral leadership
659.839,4.161,note at that these levels while coding
662.0,3.76,is still a significant percentage
664.0,2.88,design and behavioral questions are more
665.76,2.319,than half of what you should be
666.88,3.04,preparing for
668.079,3.681,for senior engineers the percentage i
669.92,4.8,recommend is 30 code
671.76,4.8,30 design and forty percent leadership
674.72,3.92,and for principal engineers i recommend
676.56,3.12,twenty percent code forty percent design
678.64,3.68,and forty percent
679.68,4.719,leadership preparation to be clear i'm
682.32,3.92,not saying don't do coding problems
684.399,3.041,no fang company will hire you if you
686.24,3.12,can't code
687.44,3.92,my point is that it's not smart to
689.36,3.52,overemphasize the coding aspect because
691.36,2.159,assuming you do well enough with the
692.88,2.399,code
693.519,4.721,the focus will immediately shift to
695.279,4.481,figuring out how senior you actually are
698.24,3.839,here's the best piece of advice i can
699.76,4.16,give you for behavioral questions the
702.079,4.241,most effective way to answer behavioral
703.92,4.24,questions is to tell a good story
706.32,3.36,why because stories allow you to
708.16,3.2,communicate multiple dimensions of
709.68,3.36,information efficiently
711.36,3.039,the best stories have good character
713.04,3.52,development built in
714.399,4.081,have a beginning middle and end and are
716.56,3.2,therefore memorable and can communicate
718.48,3.039,many points
719.76,3.28,and best of all since you already know
721.519,2.481,that interviews are about employing
723.04,2.72,proxies
724.0,3.2,stories about how you led your team
725.76,3.079,through difficult situations
727.2,4.24,make the job of the interviewer much
728.839,5.0,easier their cognitive load is lessened
731.44,3.68,because you've done their work for them
733.839,2.881,it's the secret that will take your
735.12,2.719,interview performance from good to
736.72,3.2,exceptional
737.839,3.601,it's critical you create a stable of
739.92,3.84,stories that demonstrate that you have
741.44,3.68,the experience that the company needs
743.76,3.36,you can't communicate that you've been
745.12,3.76,operating at a senior level the outcome
747.12,3.279,will be the same as if you completely
748.88,4.639,bomb the coding interviews
750.399,5.12,you'll be rejected so please for the
753.519,3.921,love of god don't spend all of your time
755.519,3.12,grinding lead code questions
757.44,2.88,if you want to know what it takes to
758.639,2.32,grow into a senior staff or principal
760.32,2.0,engineer
760.959,3.12,hit that subscribe button for more
762.32,2.8,content that will help guide you through
764.079,2.961,that journey
765.12,3.12,i really enjoy making this content and i
767.04,1.919,would love to go on this journey
768.24,5.599,together
768.959,4.88,have an awesome day
776.56,2.079,you
