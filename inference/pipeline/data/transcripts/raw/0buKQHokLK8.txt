second,duration,transcript
0.13,2.87,NoSQL databases have become very popular.
3.0,5.13,"Big companies rely on them to store hundreds
of petabytes of data and run millions of queries"
8.13,1.3,per second.
9.43,2.48,But what is a NoSQL database?
11.91,5.579,"How does it work, and why does it scale so
much better than traditional, relational databases?"
17.489,5.081,"Let's start by quickly explaining the problem
with relational databases like MySQL, MariaDB,"
22.57,2.65,"SQL Server, and alike."
25.22,3.959,"These are built to store relational data as
efficiently as possible."
29.179,4.941,"You can have a table for customers, orders,
and products, linking together logically:"
34.12,3.95,"customers place orders and orders contain
products."
38.07,5.75,"This tight organization is great for managing
your data, but it comes at a cost: relational"
43.82,2.37,databases have a hard time scaling.
46.19,4.5,"They have to maintain these relationships,
and that's an intensive process, requiring"
50.69,2.62,a lot of memory and compute power.
53.31,4.72,"So for a while, you can keep upgrading your
database server, but at some point, it won't"
58.03,2.209,be able to handle the load.
60.239,5.891,"In technical terms, we say that relational
databases can scale vertically, but not horizontally,"
66.13,4.629,"whereas NoSQL databases can scale both vertically
and horizontally."
70.759,5.07,"You can compare this to a building: vertically
scaling means adding more floors to an existing"
75.829,4.461,"building, while horizontal scaling means adding
more buildings."
80.29,5.17,"You intuitively understand that vertical scaling
is only possible to a certain extend, while"
85.46,3.699,horizontal scaling is much more powerful.
89.159,2.63,Why do NoSQL databases scale so well?
91.789,4.091,"Well, first of all, they do away with these
costly relationships."
95.88,4.189,"In NoSQL, every item in the database stands
on its own."
100.069,4.561,"This simple modification means that they're
essentially key-value stores."
104.63,5.549,"Each item in the database only has two fields:
a unique key and a value."
110.179,4.021,"For instance: when you want to store product
information, you can use the product's bar"
114.2,4.229,"code as the key and the product name as the
value."
118.429,3.991,"This seems restrictive, but the value can
be something like a JSON document containing"
122.42,3.539,"more data, like price and description."
125.959,4.231,"This simpler design is why NoSQL databases
scale better."
130.19,4.9,"If a single database server is not enough
to store all your data or handle all the queries,"
135.09,3.69,"you can split the workload across two or more
servers."
138.78,4.38,"Each server will then be responsible for only
a part of your database."
143.16,4.65,"To give an example: Apple runs a NoSQL database
that consists of 75,000 servers."
147.81,7.38,"In NoSQL terms, these parts of your database
are called partitions, and it brings up a"
155.19,1.0,question.
156.19,4.86,"If your database is split across potentially
thousands of partitions, how do you know where"
161.05,2.14,an item is stored?
163.19,1.71,That's where the primary key comes in.
164.9,6.38,"Remember, NoSQL databases are key-value stores,
and the key determines on what partition an"
171.28,1.49,item will be stored.
172.77,6.11,"Behind-the-scenes, NoSQL databases use a hash
function to convert each item's primary key"
178.88,3.29,into a number that falls into a fixed range.
182.17,2.52,Say between 0 and 100.
184.69,5.3,"This hash value and the range is then used
to determine where to store an item."
189.99,4.63,"If your database is small enough or doesn't
get many requests, you can put everything"
194.62,1.87,on a single server.
196.49,3.59,"This one will then be responsible for the
entire range."
200.08,4.05,"If that server is becoming overloaded, you
can add a secondary server, which means that"
204.13,2.55,the range will be split in half.
206.68,5.29,"Server 1 will be responsible for all items
with a hash between 0 and 50, while server"
211.97,3.48,2 will store everything between 50 and 100.
215.45,5.42,"Theoretically, you've now doubled your database
capacity: both in terms of storage and in"
220.87,2.95,the number of queries you can execute.
223.82,2.69,This range is also called a keyspace.
226.51,4.84,"It's a simple system that solves two problems:
where to store new items and where to find"
231.35,1.7,existing ones.
233.05,4.87,"All you have to do is calculate the hash of
an item's key and keep track of which server"
237.92,2.64,is responsible for which part of the keyspace.
240.56,5.05,"Now, in this example, the range of 0 to 100
is a bit small."
245.61,4.47,"It would only allow you to split up your database
into 100 pieces at most."
250.08,5.76,"So, real NoSQL databases have much bigger
key spaces, allowing them to scale almost"
255.84,2.89,without restrictions.
258.73,5.74,"Besides great scalability, NoSQL is schemaless,
which means that items in the database don't"
264.47,2.32,need to have the same structure.
266.79,2.47,Each one can be completely different.
269.26,4.53,"In a relational database, you have to define
your table's structure, and then each item"
273.79,1.72,must conform to it.
275.51,5.15,"Changing this structure isn't straightforward
and could even lead to loss of data."
280.66,4.18,"Not having a schema can be a big advantage
if your application and data structure is"
284.84,2.34,constantly evolving.
287.18,5.19,"At this point, it's clear that NoSQL databases
have certain advantages over relational ones."
292.37,4.97,"But that's not to say that relational databases
are obsolete, far from it."
297.34,5.75,"NoSQL is more limited in the way you can retrieve
your data, only allowing you to retrieve items"
303.09,2.13,by their primary key.
305.22,5.32,"Finding orders by ID is no problem, but finding
all orders above a certain amount would be"
310.54,2.3,very inefficient.
312.84,3.66,"Relational databases, on the other hand, have
no trouble with this."
316.5,4.53,"There are workarounds for this issue, but
only if you know how you're going to access"
321.03,1.18,your data.
322.21,2.72,And that might not always be the case.
324.93,4.59,"Another downside is that NoSQL databases are
eventually consistent."
329.52,3.99,"When you write a new item to the database
and try to read it back straight away, it"
333.51,2.03,might not be returned.
335.54,3.879,"As I've explained, NoSQL splits your database
into partitions."
339.419,4.341,"But each partition is mirrored across multiple
servers."
343.76,3.41,"That way, a server can go down without much
impact."
347.17,4.13,"When you write a new item to the database,
one of these mirrors will store the new item"
351.3,3.39,and then copy it to the others in the background.
354.69,2.56,This process might take a little bit of time.
357.25,5.31,"So when you read that item, the NoSQL database
might try to read it from a mirror that doesn't"
362.56,1.609,have it yet.
364.169,5.28,"This is not a big issue in practice because
data is replicated in just a few milliseconds."
369.449,4.941,"And if you want consistency, most NoSQL databases
do have that option."
374.39,5.8,"So, in summary: both NoSQL and relational
databases will be around for the foreseeable"
380.19,1.06,future.
381.25,2.919,Each with their own strengths and weaknesses.
384.169,4.311,"So now you know how NoSQL works, let's look
at a few examples."
388.48,4.58,"Cloud providers heavily promote NoSQL because
they can scale it more easily."
393.06,6.64,"AWS has DynamoDB, Google Cloud has BigTable,
and Azure has CosmosDB."
399.7,5.93,"To give you another example of their scalability:
during Amazon Prime Day in 2019, Amazon's"
405.63,4.96,"NoSQL database peaked at 45 million requests
per second."
410.59,1.96,That's mind-boggling!
412.55,5.45,"But you can also run NoSQL databases yourself
with software like Cassandra (which was developed"
418.0,3.77,"by Facebook), Scylla, CouchDB, MongoDB, and
more."
421.77,4.29,"Before ending this video, let's quickly talk
about the name ""NoSQL."
426.06,3.36,"It's a bit confusing as it can be interpreted
in two ways."
429.42,5.94,"First up: ""NoSQL"" can mean ""not only SQL,""
pointing to the fact that some NoSQL databases"
435.36,6.15,"partially understand the SQL query language,
on top of their own query capabilities."
441.51,5.71,"And secondly, it's often called ""NoSQL"" in
the sense of ""non-relational"" because it can't"
447.22,2.61,easily store relational data.
449.83,1.68,So that was it for this video.
451.51,3.26,"Please subscribe if you learned something
from it, and I hope to see you in the next"
454.77,0.5,video!
