second,duration,transcript
0.86,5.32,good evening my name is Kara Weber I'll
4.049,5.76,be talking tonight a little bit about
6.18,5.28,algorithms and complexity I was
9.809,3.96,interested in algorithms and wanted to
11.46,5.01,talk to them to some aspect of them in
13.769,4.59,my tech-talk this topic proved to be a
16.47,5.28,bit intractable but I'm hoping to
18.359,5.271,provide an introduction into some of the
21.75,4.019,ways that
23.63,5.52,computer scientists and theorists think
25.769,6.361,about complexity and algorithms so my
29.15,6.339,my screen is showing you a fractal
32.13,4.71,pattern fractals are geometrical
35.489,4.41,patterns that can be broken down into
36.84,5.969,smaller units and each smaller unit is a
39.899,6.601,like half size or reduced size copy of
42.809,7.32,the pattern as a whole fractals are
46.5,5.059,found throughout nature which we can see
50.129,5.671,in this
51.559,6.371,nice image of a cactus some flowers and
55.8,6.239,cauliflower which is everyone's favorite
57.93,5.46,fractal image but fractals fractal
62.039,2.991,patterns can also be generated by
63.39,3.81,algorithms
65.03,3.76,recursive algorithms and that's I think
67.2,5.209,this is one example of that that you see
68.79,3.619,on the screen now so
72.53,5.17,briefly to give an introduction to an
75.15,5.67,algorithm it's defined simply as a
77.7,4.55,precise rule or set of rules specifying
80.82,4.2,how to solve a problem
82.25,5.59,algorithms are complete they are finite
85.02,4.44,they may be exact in terms of their
87.84,3.87,solution to a problem or they may be in
89.46,6.29,exact they may be approximate in
91.71,4.04,programming they are evaluated
96.5,4.81,among other ways but one important way
99.15,6.41,is by their Big O notation which we are
101.31,7.169,all familiar with and this the Big O
105.56,5.44,represents the upper bound on the number
108.479,4.861,of operations a function will have to
111.0,4.5,produce well when it is called so the
113.34,5.01,number of operations and how this number
115.5,5.67,changes as the size of input grows gives
118.35,4.94,us some information about how long the
121.17,5.809,process is going to take to complete
123.29,5.55,another graph which will be familiar
126.979,6.031,this is
128.84,7.85,a plotting of inputs n on this access
133.01,8.22,little n versus the number of operations
136.69,6.6,to complete the function big n on the
141.23,5.43,y-axis
143.29,5.919,constant operations that remain constant
146.66,4.71,even as the size of input grows will
149.209,5.401,give us a big n of a constant some
151.37,7.74,constant call it 1 this is an ideal
154.61,7.62,scenario but not always possible a Big O
159.11,6.36,of n is when the number of operations
162.23,5.24,grows constantly at a constant rate as
165.47,5.549,the input size grows and
167.47,5.079,these are less these are the sort of
171.019,4.411,bago you'd see for less complex
172.549,5.131,algorithms as we get more complex you
175.43,3.99,start to move to this area of the graph
177.68,4.139,and I'll just draw your attention to
179.42,5.159,these three clustered here where you
181.819,6.931,have N squared o of M squared this is
184.579,6.091,called polynomial time which is the
188.75,4.41,largest factor in that time is going to
190.67,3.8,be and to some power could be N squared
193.16,3.99,can be in cubed
194.47,4.51,then in the orange next thing to it you
197.15,6.149,have 2 to the end this is exponential
198.98,6.629,time and then finally factorial time and
203.299,4.47,so one of the significant divisions in
205.609,4.44,terms of how computer scientists think
207.769,5.34,about complexity occurs in the change
210.049,6.211,from polynomial time to exponential time
213.109,4.771,so more on that in a minute but just to
216.26,4.02,return to our fractals I wanted to start
217.88,5.219,with fractals because they're pretty
220.28,4.26,they're interesting to look at they use
223.099,4.381,recursive functions which we're familiar
224.54,4.74,with but also they represent a case that
227.48,4.409,might be kind of surprising I think for
229.28,4.859,complexity which is that the patterns
231.889,4.32,can look complex but the process to
234.139,6.63,construct them might not necessarily be
236.209,5.971,so so this is via Khan Academy a common
240.769,4.111,fractal pattern called the sierpinski
242.18,4.98,gasket here you see the finished product
244.88,3.719,and then they also helpfully provide a
247.16,3.63,step-by-step of how to construct this
248.599,4.621,pattern you start with a square you
250.79,5.129,divided into four squares you put an X
253.22,4.35,in all of this the nude subdivided
255.919,4.981,squares except for the one on the bottom
257.57,4.6,left and then for the squares that have
260.9,3.67,X's in them
262.17,3.99,you repeat the process again removing
264.57,3.45,any marks from that bottom left square
266.16,4.74,it should remain empty you repeat this
268.02,6.54,process again notice each time the size
270.9,5.13,of the square is diminishing and we have
274.56,4.38,more lines and a more complicated
276.03,5.67,picture finally we'll reach a point
278.94,4.74,where we decide our dimensions are small
281.7,4.5,enough we don't want to subdivide
283.68,4.77,anymore and at this point if you fill in
286.2,4.83,all the squares with X's in them you get
288.45,6.03,the sierpinski gadget so although this
291.03,6.09,pattern looks complex you have a finite
294.48,6.11,and constant number of steps for it each
297.12,7.17,iteration of the function so
300.59,5.4,if I were to posit what the o of n of
304.29,4.35,that particular
305.99,5.2,fractal function would look like I would
308.64,5.52,guess that it would be constant n
311.19,5.87,because as if we take the number of
314.16,5.94,iterations as the input as that
317.06,4.96,increases in size the number of
320.1,4.11,operations is just going to increase at
322.02,4.74,a constant rate so that puts it in the
324.21,4.76,lake not so complicated region of our
326.76,2.21,graph
329.51,6.01,which brings me to the more complicated
331.83,6.68,region of the graph there these terms P
335.52,6.45,versus NP are ways that
338.51,7.63,theoreticians think about complexity P
341.97,6.54,means polynomial time that means a time
346.14,6.75,to execute which has an upper limit
348.51,7.05,marked by and to some power NP time is
352.89,5.34,anything to the left of this anything
355.56,5.39,that grows at a rate faster than that
358.23,4.85,described by n to some power
360.95,6.13,a
363.08,6.49,more a more theoretical definition of
367.08,4.92,them is problems in the set P can be
369.57,5.1,solved on a deterministic Turing machine
372.0,3.9,I'll explain what that is in a second by
374.67,4.74,an algorithm that runs in polynomial
375.9,5.28,time whereas those in the said NP can be
379.41,4.44,verified like if you have a positive
381.18,4.53,solution you can verify it on such a
383.85,3.39,machine in polynomial time but you
385.71,4.23,couldn't find a solution in polynomial
387.24,5.24,time a Turing machine is named for the
389.94,2.54,British mathematician
394.36,5.29,whose first name is escaping me Alan
397.58,3.809,Turing I think um who was a quote
399.65,3.6,breaker during World War two actually
401.389,3.541,developed the model the conceptual model
403.25,3.9,that a lot of people still use for a
404.93,4.65,computer before the first computer even
407.15,5.34,existed he was working on breaking a
409.58,5.489,German ciphers during World War two
412.49,4.14,side note there is a 2014 movie called
415.069,3.211,the imitation game with Benedict
416.63,4.05,Cumberbatch and it's pretty good and
418.28,4.44,it's about Touring's code breaking work
420.68,5.269,during the war it has a pretty sad
422.72,3.229,ending which reflects his
426.25,4.93,prosecution at the hands of a moralizing
428.509,4.851,state so just be warned if you watch it
431.18,5.9,but I would recommend it
433.36,7.0,so NP problems can be verified but not
437.08,5.41,solved in polynomial time they can't
440.36,4.589,however be solved in polynomial time on
442.49,4.32,a non-deterministic turing machine which
444.949,3.331,is just a concept of some kind of
446.81,3.93,computer that would be able to be in
448.28,5.97,different states so performing different
450.74,5.489,operations at the same time which I
454.25,4.56,don't think exists in real life it may
456.229,5.87,be quantum computing but that's a
458.81,5.97,question for someone besides me
462.099,5.711,then we have within the class of NP
464.78,5.09,problems to further complexity labels
467.81,5.19,and P hard and np-complete
469.87,5.68,as far as I can tell the definition of
473.0,5.09,NP hard means it's just as hard as any
475.55,5.79,hard problem in a set NP +
478.09,4.62,np-complete shares that criterion but
481.34,5.609,also and this is kind of interesting
482.71,6.609,they're an NP complete problem is kind
486.949,5.011,of a representative problem for the set
489.319,5.611,of all NP problems the idea is if you
491.96,5.25,could solve an NP complete problem your
494.93,6.289,algorithm could solve with a little bit
497.21,6.48,of tweaking every other NP problem and
501.219,4.92,the reason this is interesting is that a
503.69,5.279,lot of internet encryption relies on NP
506.139,4.87,problems remaining unsolvable in any
508.969,3.151,reasonable amount of time and so if
511.009,3.861,somebody were to come up with a solution
512.12,4.529,to an NP complete problem
514.87,4.0,internet security would be in big
516.649,5.101,trouble because you'd be able whoever
518.87,5.64,had that solution would be able to with
521.75,5.85,work Shirley but not you know crazy
524.51,5.22,exponential amounts of work break every
527.6,5.63,or solve every other NP problem and
529.73,6.719,therefore break a lot of encryption
533.23,5.979,but what if you still need a solution to
536.449,4.741,an np-hard problem so one approach is to
539.209,4.171,develop an approximation algorithm this
541.19,4.11,is gonna be the case of like Goodenough
543.38,3.78,gives us a working solution may not be
545.3,3.539,the best may not be ideally optimized
547.16,3.44,but will at least get us a working
548.839,3.831,solution for our problem
550.6,5.169,so for the remainder of the presentation
552.67,5.77,which may not be much longer I'm just
555.769,5.281,gonna take a quick look at one such case
558.44,5.25,where it's a very well studied problem
561.05,4.92,called the vertex cover problem and this
563.69,4.05,is a case in which an approximation
565.97,3.929,algorithm so sort of relaxing the
567.74,3.92,constraints on your ideal case will
569.899,4.201,enable the problem to be solved
571.66,4.179,the vertex cover problem comes from
574.1,4.169,graph theory so it's quite convenient
575.839,5.541,that Karen talked to us last week about
578.269,6.63,what graphs are
581.38,6.519,these slides that are formatted in this
584.899,5.391,way are from a course offered at the
587.899,6.93,NSBA quill normale supérieure in france
590.29,6.52,and made available via Coursera so I
594.829,3.661,have references at the end of the slide
596.81,4.68,if you're interested but I just want to
598.49,5.25,make clear that this is not my work so
601.49,3.779,the vertex cover problem is you start
603.74,3.269,with a graph here's an example of a
605.269,4.951,graph it's defined by vertices which are
607.009,6.031,blue dots the vertices are labeled they
610.22,4.739,have little letters they they also have
613.04,4.049,weights which are the red numbers so
614.959,4.471,each vertice each vertex has a weight
617.089,4.771,which is at least in this case fairly
619.43,4.889,arbitrary the edges are the black lines
621.86,5.43,and in a vertex cover problem you want
624.319,5.401,to make sure that for each edge like
627.29,4.59,this edge C be at least one of its
629.72,4.94,endpoints ends up in your solution set
631.88,2.78,of vertices
636.25,7.449,the reason if if speeding along here the
641.449,3.681,conclusion about this problem is that it
643.699,3.531,is going to be
645.13,4.87,np-hard and
647.23,4.81,why you might ask me and I might tell
650.0,3.54,you well a lot of people have studied it
652.04,3.599,and they said so and they've proven so
653.54,3.81,and a really smart professor at the
655.639,4.021,Ecole Normale says so so we should all
657.35,5.69,agree with that but
659.66,6.99,I try to work out one reason myself
663.04,5.67,which is that if this each if we have a
666.65,5.19,problem with four vertices here right
668.71,5.74,ABCD for each vertex you have two
671.84,4.49,possible States yes or no if we are
674.45,4.59,brute force coding through all possible
676.33,5.92,configurations we end up with two to VN
679.04,6.18,possible configurations shown here so
682.25,5.58,this is a problem with only four
685.22,5.82,vertices and it ends up with 16 possible
687.83,6.75,solution States so this if we go back to
691.04,7.55,that graph earlier to zdn is outside of
694.58,4.01,the bounds of polynomial time
699.25,6.82,again briefly it turns out that if you
703.22,4.74,take the word of scientists past and
706.07,4.5,scientists present that this problem is
707.96,4.44,np-hard it's only because the vertex can
710.57,3.99,either be in or out of your solution set
712.4,5.0,so it's either a zero if it's out or
714.56,5.64,it's a one if it's in and
717.4,6.06,this integer constraint is what makes
720.2,6.57,the problem unsolvable um a
723.46,6.76,cheesy math example of a situation where
726.77,5.46,you might have no integer solution is
730.22,4.71,the second set of equations here or the
732.23,5.04,second equation here where there's
734.93,4.13,there's no energy integer solution that
737.27,4.2,will satisfy this equation but if we let
739.06,4.57,X be a real number instead of an integer
741.47,3.47,you can find a solution it's just going
743.63,3.78,to be messy
744.94,4.54,so long story short that's what happens
747.41,5.28,with the vertex cover problem if you
749.48,5.91,relax your condition and allow your
752.69,4.38,solution to be a non integer you allow
755.39,3.18,the vertex to be kind of like partly and
757.07,4.29,partly out for the sake of solving the
758.57,5.61,problem you can in fact find a solution
761.36,4.56,it may not be like ideally optimized but
764.18,4.8,the magic moment and I'll just tell you
765.92,4.86,this about the end is that you round
768.98,3.87,this is what you do when you have your
770.78,5.19,decimal points between 0 and 1 for each
772.85,5.73,vertex is you round up to one for that
775.97,3.93,particular vertex if it's if if it ended
778.58,5.15,up with a value that was greater than or
779.9,6.81,equal to 0.5 and zero otherwise and
783.73,6.85,the limit on this is that it would be at
786.71,5.1,most two times the cost of the sum
790.58,3.27,you're trying to minimize the sum for
791.81,4.709,all the vertices that are included but
793.85,5.19,apparently in like day-to-day working
796.519,4.56,scenarios it's usually within about 10%
799.04,4.65,of an optimal solution which doesn't
801.079,6.401,seem that bad so so much for a very
803.69,11.54,quick look at complexity in dollars
807.48,7.75,[Applause]
