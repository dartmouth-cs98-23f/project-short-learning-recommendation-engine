second,duration,transcript
0.48,4.96,what's up guys back today with another
3.04,4.4,longer video which is to build a job
5.44,4.4,board app that could actually be a real
7.44,4.64,startup that people use there's a lot of
9.84,4.56,different places to find
12.08,5.119,entry level or junior developer jobs on
14.4,5.039,the internet for example github jobs
17.199,5.761,stack overflow jobs
19.439,4.961,you have angel list you have indeed but
22.96,2.8,filtering through those especially
24.4,3.68,because you kind of have to spam
25.76,4.48,applications for your first job can take
28.08,4.4,a long time so the good thing about all
30.24,4.319,these job boards
32.48,3.84,is they have public apis for the most
34.559,5.361,part you always want to start with an
36.32,5.04,mvp that is the minimum viable product
39.92,3.68,today that means we're going to start
41.36,4.32,with a single data feed that is a single
43.6,4.16,job board api
45.68,3.92,feeding into our app and then finally
47.76,4.479,we're gonna have a super minimal simple
49.6,5.2,front end we're gonna do this in react
52.239,6.401,and material ui on the front end
54.8,5.919,we're gonna use an express server
58.64,4.719,redis for our data storage because we're
60.719,4.961,not writing or persisting any data that
63.359,4.481,is not part of the job feed
65.68,5.6,and then finally a
67.84,5.84,node cron job to fetch these jobs and
71.28,3.68,refresh them at a certain interval which
73.68,3.52,are going to be filtered through an
74.96,4.96,algorithm so let's draw this all out to
77.2,3.919,get a better idea of our plan here's our
79.92,3.519,front end
81.119,3.921,what we basically want here is a
83.439,3.201,list of jobs
85.04,2.64,this is going to be pulling data from
86.64,2.88,our
87.68,3.439,api
89.52,3.68,and that will be express and then this
91.119,3.841,will pull from
93.2,3.44,our
94.96,5.96,store
96.64,4.28,which is actually going to be
102.079,2.481,redis
104.64,4.96,and redis will be populated by
108.159,2.561,our
109.6,3.04,cron
110.72,3.31,called a worker
112.64,2.799,which is pulling from
114.03,3.81,[Music]
115.439,4.481,one or more apis it's going to be
117.84,4.879,eventually multiple this is going to be
119.92,4.0,job uh board apis so like in let's say
122.719,2.4,indeed
123.92,2.4,we have
125.119,4.961,github
126.32,5.76,we have stack jobs
130.08,3.76,and this is going to be filtered through
132.08,3.76,our algorithm
133.84,3.44,we're filtering down the jobs
135.84,3.28,getting rid of the senior jobs getting
137.28,3.92,rid of the
139.12,3.119,manager jobs and
141.2,2.32,eventually when we make it more
142.239,3.681,complicated we could even look through
143.52,5.04,the description for years of experience
145.92,3.84,and create uh search indexes and
148.56,2.8,different things like that but again the
149.76,4.72,minimum is just going to be pulling the
151.36,4.879,jobs in and filtering them down
154.48,3.839,okay so this is our plan let's start
156.239,5.36,with the front end i know a lot of you
158.319,6.481,guys like react
161.599,5.201,and it's gonna actually be super simple
164.8,4.159,let's just do a create react app to get
166.8,4.24,started
168.959,5.201,uh i already have a folder our directory
171.04,4.4,here called junior dev so let's uh do a
174.16,5.359,create
175.44,4.079,react app and then call it client
180.08,4.48,you guys know that i love
182.8,3.76,material ui
184.56,4.08,so let's install that as well once we
186.56,6.92,get into our client
188.64,4.84,and let's do yarn add
199.84,5.679,okay that's done
201.92,3.599,and we will start
205.92,2.72,our
206.72,4.92,react
208.64,3.0,at
214.959,4.161,okay let's go through the stuff we can
217.28,3.36,actually delete
219.12,2.88,no tests you always want to write tests
220.64,2.959,in real life but
222.0,4.599,not today
223.599,3.0,logo
226.879,2.64,and
230.56,3.2,also clear this out here
237.36,4.959,now let's open the material ui docs
242.4,4.16,let's get our component api and
245.04,3.919,let's get a
246.56,5.84,title for our page
248.959,3.441,typography h1
253.2,3.759,let's just copy this
255.28,2.959,and
256.959,4.081,instead of putting it directly in app
258.239,5.201,let's make a new component for
261.04,2.4,jobs
263.6,3.92,and then let's make a new component for
265.919,3.521,a single job
267.52,4.8,all job
269.44,6.56,which we'll use in jobs
272.32,3.68,and then let's import react
278.32,5.159,exports default
280.479,3.0,functions
288.88,4.319,okay
290.96,4.48,in this we will
293.199,3.921,use typography
295.44,2.96,okay so just to explain what i'm doing
297.12,2.799,here i am
298.4,3.04,making a separate component because i
299.919,3.12,want our app just to hold our state and
301.44,5.68,then jobs will actually hold our
303.039,6.241,component tree our render styling and
307.12,3.919,app will hold our application state our
309.28,3.919,use state and
311.039,3.761,call our hooks for kubota did mount and
313.199,4.801,for state
314.8,3.2,that was really confusing sorry
321.36,5.6,we're using typography here
324.639,2.321,and
327.68,6.519,let's do
329.199,5.0,variant typography variant
349.039,5.281,okay i'm naming our page entry level
350.8,5.92,software jobs i think it's a good name
354.32,5.2,then save
356.72,2.8,import jobs
364.4,3.44,throw that in there like this
372.08,4.64,okay that is some huge text but we're
374.319,4.32,gonna leave it for now
376.72,4.08,within jobs
378.639,4.641,we already know we're gonna um
380.8,2.48,import
383.68,2.32,job
387.199,6.761,make this a similar
389.68,4.28,export we'll just copy this whole thing
396.639,3.761,almost sneezed
399.199,2.72,okay
400.4,3.359,turn div and then this will just be a
401.919,4.481,single job row
403.759,4.801,which will put on a class name of
406.4,3.44,a single job and then we'll just do this
408.56,4.16,in advance because we know we're going
409.84,5.759,to eventually have to write some css to
412.72,2.879,style this stuff
416.319,4.16,let's make a job list
418.96,3.519,should probably actually be matching our
420.479,3.201,component name
422.479,3.601,just to
423.68,4.639,change that back jobs and then
426.08,2.239,job
431.12,2.24,okay
433.919,3.0,so
439.44,3.28,let's just say that we're passing down
441.599,3.681,some props
442.72,6.4,for all our jobs from our
445.28,5.28,uh app which is holding our state
449.12,4.4,let's just do it like this and let's do
450.56,5.52,some mock json that we might return from
453.52,2.56,our api
460.479,5.361,swe software engineer one
462.96,2.88,and company
466.8,3.44,google
469.199,2.321,um
470.24,5.2,there's gonna be a bunch of fields but
471.52,3.92,let's just leave them like that for now
476.0,5.199,and my mock job so we don't get it mixed
477.599,5.04,up mock just being mock json data
481.199,3.041,and
482.639,3.68,it should work
484.24,4.32,then we can do jobs
486.319,4.56,map
488.56,2.319,job
491.36,4.239,this will return a
493.28,2.319,job
496.08,3.519,job job
498.24,3.679,equals
499.599,2.32,job
503.919,5.601,hopefully that's not too confusing
507.12,3.68,okay now you could just
509.52,3.92,hear
510.8,5.84,the structure job
513.44,5.839,in the box but job.title let's see if
516.64,4.879,this works
519.279,5.56,there it is job.title
521.519,3.32,and job.company
527.2,3.759,and let's actually add some css
531.04,4.08,for
533.12,4.88,job and just make it a
535.12,6.32,display flex
538.0,3.44,next direction
545.6,4.48,oh that's right
548.8,3.52,it's always freaking
550.08,3.84,hard switching from jsx to javascript
552.32,3.76,okay there we go boom
553.92,3.52,i'll leave it like that for now
556.08,3.68,we can
557.44,4.8,add more
559.76,5.04,stuff to this
562.24,5.599,this list if we want
564.8,5.44,like this facebook
567.839,2.401,apple
570.64,5.12,it'll map it out for us
573.76,5.28,let's give that a little bit of
575.76,3.28,margin a little bit of padding
579.839,3.841,let's do a
581.279,7.0,10 pixel top left right zero
583.68,4.599,and then padding will be the same
590.72,4.48,okay not too bad not too bad
592.959,3.681,so our front end we could call this like
595.2,4.24,kind of done let's call this done for
596.64,5.199,now and let's return to it
599.44,3.68,after doing some full stack stuff
601.839,2.801,so i'm gonna
603.12,3.52,collapse our client
604.64,4.24,let's see what our actual data feed is
606.64,5.04,gonna look like coming from
608.88,4.8,uh our source which i'm just gonna use
611.68,4.64,as github jobs because i know that has a
613.68,6.159,really good clean api output that you
616.32,3.519,don't need a key for or anything
620.399,4.081,so api github jobs
622.48,3.52,open it up you can see some examples
624.48,3.599,here
626.0,5.12,okay so it says that the api supports
628.079,4.241,pagination it'll return 50 at a time
631.12,3.12,and you could do it by adding a
632.32,4.32,parameter to your queries before jumping
634.24,4.0,ahead we just know we want these json
636.64,5.92,representation of these jobs so we can
638.24,4.32,manipulate it with our node worker
642.88,5.6,so what i'm actually going to do is
645.519,5.841,call a similar url like this
648.48,4.16,in our node side
651.36,3.2,which is going to give us output like
652.64,4.72,this
654.56,4.56,just by eyeballing this i could see that
657.36,4.479,it is somewhat matching what we already
659.12,2.719,wrote out here
662.079,4.081,in app.js
663.76,4.88,where there's a title
666.16,2.48,somewhere
671.04,4.96,yes like that
673.12,6.959,senior full stack node.js developer and
676.0,4.079,there is a company
680.64,3.84,somewhere and we can also tell in
682.72,5.72,advance that location's going to be an
684.48,3.96,important field too
689.36,3.919,but basing our
691.36,4.0,analysis on this
693.279,4.401,we could start to model kind of what our
695.36,4.479,worker is going to do
697.68,5.44,as well as how
699.839,6.0,we want our api to
703.12,2.719,act as well
709.76,2.16,so
714.24,2.719,looking back at our plan let's actually
715.519,4.481,just make a folder
716.959,4.721,for uh all our boxes here so this is the
720.0,3.6,client right
721.68,3.68,api is going to be
723.6,4.0,simplexpress server
725.36,4.08,and then the worker is going to have our
727.6,3.039,algorithm and it's going to be calling
729.44,4.399,our
730.639,5.44,apis on a cron job which is
733.839,5.921,at a set interval
736.079,4.481,so maybe every hour in the day we want
739.76,3.68,to
740.56,5.36,refresh these apis refresh our redis
743.44,4.16,and make sure that everything is up to
745.92,3.2,date
747.6,2.72,there's no expired jobs that the
749.12,3.44,companies don't want people to see
750.32,5.68,anymore and we're basically staying in
752.56,7.279,sync with whatever is in uh our
756.0,3.839,upstream data source
765.68,3.92,so within worker i want to create an
767.76,4.16,index.js which is going to manage all
769.6,5.919,our worker tasks and i know already that
771.92,4.96,we're going to need the cron node
775.519,2.56,library
776.88,3.759,it's just going to help us run simple
778.079,3.521,cron jobs
780.639,3.041,which is
781.6,4.08,what i was saying before is the
783.68,3.68,it's the way you run a task on an
785.68,2.8,interval basically forever if you want
787.36,3.44,to
788.48,3.84,opening up a new terminal tab going out
790.8,2.64,to our main directory
792.32,2.639,and
793.44,2.32,within our main directory i'm just going
794.959,3.761,to
795.76,4.96,create a package json which is
798.72,3.76,going to be accessible from
800.72,4.16,all our different
802.48,2.4,folders
808.48,4.24,so you can see that was created here and
810.32,6.24,then we just want to install
812.72,3.84,cron as a dependency
818.079,4.081,okay
820.32,4.72,now inside a worker i just this is the
822.16,4.32,way i pretty much start with every uh
825.04,3.12,with every app you just copy kind of the
826.48,4.159,basic usage and you build your way out
828.16,2.479,from there
831.519,3.68,so all this does is it's running a node
833.519,4.241,process where we're importing the
835.199,3.601,library and then this is called a
837.76,3.28,um
838.8,5.68,cron shorthand cron syntax something
841.04,4.799,like that uh cron.guru you can see it
844.48,3.76,here
845.839,5.841,okay so this site is really useful
848.24,6.32,no not this site crown guru
851.68,2.88,crontab guru
854.72,4.32,okay so
857.12,4.159,these asterisks are called a cron
859.04,4.0,schedule expression
861.279,4.24,and it's basically
863.04,3.44,symbols for how often you want your job
865.519,3.281,to run
866.48,4.24,you can test it over here
868.8,4.0,slash one that's actually every minute
870.72,4.0,this is every second
872.8,3.039,this is every second minute it's every
874.72,2.64,third minute
875.839,2.56,right so
877.36,3.039,you just have to play around with the
878.399,3.44,syntax that'll tell you here how to do
880.399,2.88,it and then you could do kind of
881.839,2.721,whatever interval you want so you could
883.279,4.321,do like once
884.56,4.399,uh a day i think one
887.6,2.479,yeah so you got it you just got to mess
888.959,2.401,with it to do what you want and then you
890.079,2.721,could just google exactly what you want
891.36,2.719,to do and you get pulled the chronic
892.8,2.8,especially from that but this is kind of
894.079,3.281,a playground to
895.6,3.28,get the chronic expression you you
897.36,4.0,definitely want to do
898.88,4.399,all right so let's test this um
901.36,5.479,this basic implementation of cron to
903.279,3.56,just see if it works
913.36,3.68,and in our real production app this is
915.04,4.72,actually going to run every second not
917.04,4.72,every second every um let's say hour to
919.76,4.079,fetch our jobs so this will fire off
921.76,3.439,some function which is now being passed
923.839,3.841,in as this
925.199,4.161,a anonymous function that is just
927.68,3.12,console logging but what we're
929.36,3.68,eventually going to put in there is our
930.8,4.719,script to fetch the jobs and then filter
933.04,2.479,them down
935.68,5.2,so in this worker folder i'm going to
937.199,7.281,make a github um or rather let's do it
940.88,5.04,this way i'm gonna make a tasks folder
944.48,4.44,and then we'll do one called
945.92,3.0,fetchgithub.js
950.079,3.921,and we just want to play around with
951.519,4.721,that you know github api and get it to
954.0,4.72,do what we want so the good part about
956.24,4.159,the github api the the good thing about
958.72,3.6,the github api and part of the reason
960.399,3.761,why i picked it is because it is pretty
962.32,2.639,much all developer jobs
964.16,2.16,so
964.959,2.8,we don't have to filter out for
966.32,2.48,developer jobs we could just assume
967.759,2.961,they're all
968.8,4.08,tech jobs and then we will take the ones
970.72,4.4,that are just junior software engineer
972.88,4.639,or more specifically not senior or not
975.12,2.399,manager
977.759,3.44,so we know our
979.12,4.959,url is roughly going to look like this
981.199,4.88,to do a back-end url fetch request i'm
984.079,3.601,going to install the node fetch library
986.079,2.88,which is the same as the client-side
987.68,5.719,fetch library
988.959,4.44,but you could use it in node.js
999.68,4.8,okay so we're just required like that
1002.0,4.48,then let's do
1004.48,3.68,an anonymous async function
1006.48,2.4,just to actually now let's do it this
1008.16,2.239,way
1008.88,2.639,export default
1010.399,3.601,async
1011.519,2.481,function
1016.88,5.399,just did a hey siri for some reason
1019.279,3.0,nope
1026.4,4.799,okay so fetch github there
1028.959,2.24,and
1033.839,5.641,i'll just call it here just for
1036.0,3.48,testing purposes
1041.039,3.201,and within here let's do a
1045.679,4.961,jobs await
1048.319,4.561,etch
1050.64,5.84,and we'll do
1052.88,3.6,asurl equals
1057.919,3.12,this
1058.88,3.6,without the query string
1061.039,2.721,so let's break this down a little bit we
1062.48,2.88,have a
1063.76,4.08,question mark
1065.36,4.16,then a description equals
1067.84,4.24,and ruby
1069.52,4.24,and page equals one so this is called a
1072.08,3.36,query string here
1073.76,3.2,it's a way to pass parameters through a
1075.44,3.92,url so
1076.96,5.52,so we're passing parameters to the
1079.36,4.8,server through the query string
1082.48,4.48,syntax which is
1084.16,6.08,key equals value like this
1086.96,5.04,so in our case we're going to want to
1090.24,2.88,iterate through the pages that is we
1092.0,3.2,want to
1093.12,4.559,get all the results from all the pages
1095.2,3.92,and combine them together
1097.679,4.24,the way i think we want to do that is
1099.12,4.48,just by leaving this like this
1101.919,4.321,so this is just our
1103.6,4.319,truly base url and then let's actually
1106.24,4.64,see what happens let's see how many jobs
1107.919,4.961,we get back just by doing this
1110.88,3.84,and then logging out jobs
1112.88,3.84,length
1114.72,3.36,keep in mind that this function is
1116.72,3.68,going to run because we're calling it
1118.08,5.32,here when we just run a node on fetch
1120.4,3.0,github.js
1130.559,4.921,okay i forgot we still can't do that
1141.76,2.64,and
1145.84,3.959,let's just do this
1155.039,5.76,okay undefined
1157.919,5.88,let's console like this
1160.799,3.0,jobs
1165.52,4.0,oh i forgot we also have to do this
1170.64,4.08,this is just our raw response this is
1172.88,4.84,jobs
1174.72,3.0,press.json
1183.6,5.199,still not resolving because this is an
1185.84,2.959,async function too
1191.12,4.48,okay 50.
1193.6,3.68,i already kind of knew this going in but
1195.6,4.64,if you put no parameters here it just
1197.28,4.48,gives you the first page only
1200.24,3.679,so we have to add a query string for
1201.76,5.12,each page and iterate through to get all
1203.919,5.281,the results until we get back an empty
1206.88,2.32,page
1209.36,4.559,best way to solve this is to
1211.28,5.04,keep adding one to the page number so we
1213.919,5.521,start at zero then we try page one then
1216.32,6.32,we try page two until we get back a page
1219.44,4.479,with zero results
1222.64,2.32,so if this is the way we do it for one
1223.919,4.081,page we're just going to want to run
1224.96,5.36,this same subroutine
1228.0,6.12,for every um
1230.32,3.8,page that's not empty
1235.679,2.88,to make this a little more clear i don't
1237.12,3.12,like really how we've written this out
1238.559,4.801,so far
1240.24,6.12,uh let's just do it like
1243.36,3.0,this
1250.48,4.96,maybe it's just me being lazy
1252.72,5.92,so while the uh page
1255.44,3.2,result count is not
1260.84,3.959,empty we're going to do this
1266.0,3.6,and we have to keep track of the page
1267.84,3.28,we're on
1269.6,3.84,as well as the result count so let's
1271.12,4.24,make uh result counts and not
1273.44,4.16,zero value because
1275.36,4.0,if it's zero it'll break our loop so
1277.6,3.36,let's just start at an arbitrary value
1279.36,3.28,one and then
1280.96,4.32,after we fetch the first page it'll be
1282.64,5.44,50 then it'll be whatever the second
1285.28,5.12,page is until it's zero at which point
1288.08,4.32,this while loop will break so we'll
1290.4,5.279,initialize it to one
1292.4,4.159,and then let's also initialize
1295.679,3.521,our
1296.559,5.6,what where are we going to call it
1299.2,6.16,on page equals zero
1302.159,4.801,we'll start on page zero
1305.36,4.319,okay so
1306.96,4.719,base url we'll do a template literal
1309.679,5.041,here
1311.679,4.88,and then slash or instead of slash we'll
1314.72,4.16,do our query string
1316.559,4.401,h equals
1318.88,4.08,on page
1320.96,4.48,okay so we loop
1322.96,5.12,we get our jobs we get our jobs length
1325.44,4.08,we're gonna want to also
1328.08,4.56,push
1329.52,6.08,the jobs we get back into an array
1332.64,2.96,called all jobs
1337.84,5.35,let's do all jobs push
1340.0,4.72,the jobs we get back from that page
1343.19,3.69,[Music]
1344.72,4.72,let's keep this in here just so we know
1346.88,2.56,what's happening
1350.799,3.441,and then finally
1354.96,6.839,increase our on-page value
1358.799,3.0,okay
1362.72,3.76,again just to review
1364.88,2.96,setting our result count to a non-zero
1366.48,4.0,value
1367.84,4.959,starting on page zero
1370.48,3.6,creating an empty array to hold
1372.799,3.76,the results we're getting back from the
1374.08,2.479,api
1376.72,4.4,we start a while loop that's gonna run
1378.559,4.961,as long as we're getting results back by
1381.12,4.24,increasing one page at a time so getting
1383.52,4.639,page zero getting page one getting page
1385.36,5.12,two
1388.159,4.721,here's where the url is constructed base
1390.48,4.96,url from up here and then page starting
1392.88,2.56,at zero
1396.24,4.64,pulling out the json from the response
1398.48,4.88,putting that json in
1400.88,4.72,our array
1403.36,4.48,logging out how many jobs we got back
1405.6,4.72,increasing the page count repeating
1407.84,6.56,until we run out of
1410.32,4.08,or rather we run into an empty page
1414.559,3.841,finally we
1416.64,4.399,have all our jobs
1418.4,5.92,so let's just log out
1421.039,3.281,how many jobs we got total
1425.919,4.12,which we're going to eventually be
1427.039,3.0,returning
1431.36,3.84,all right
1432.48,4.559,now these console logs give us an idea
1435.2,3.68,of what's happening in our
1437.039,4.24,function here otherwise we would have no
1438.88,3.84,idea
1441.279,4.0,since we refactored a little bit we have
1442.72,5.36,to call the function again
1445.279,2.801,let's see what happens
1453.36,5.6,hopefully this is not infinite loop
1455.52,4.399,please oh
1458.96,2.079,oh
1459.919,3.441,oh no
1461.039,2.321,okay
1463.84,4.88,okay what happened there
1466.559,3.36,i guess we didn't break
1468.72,2.48,oh because we're not setting result
1469.919,3.601,count okay
1471.2,3.76,so
1473.52,4.159,we got to do this
1474.96,4.079,result count
1477.679,3.681,equals
1479.039,2.321,length
1481.919,2.921,okay
1483.44,5.52,there that should work
1484.84,4.12,now but for the most part good
1498.96,2.64,okay
1500.72,2.4,okay
1501.6,2.8,so there's one thing we also overlooked
1503.12,4.159,i think
1504.4,2.879,let's look back at this
1508.24,2.64,this is a sample response we're getting
1509.679,2.401,back
1510.88,2.72,and
1512.08,3.839,if we look at this whole object let's
1513.6,3.199,just assume this is like page zero
1515.919,2.64,it's
1516.799,2.961,coming back with an array
1518.559,4.161,but then we're pushing that array
1519.76,6.88,directly into our all jobs so this is
1522.72,6.72,actually creating an array of arrays
1526.64,4.48,whereas really we want a flat array
1529.44,3.119,just a single array holding all these
1531.12,2.88,job objects
1532.559,4.081,so the simple way to do that is to
1534.0,4.0,spread that in with a spread operator
1536.64,5.84,we're just dumping the array into
1538.0,6.64,another array by spreading the values in
1542.48,3.439,if we run that
1544.64,4.399,we're totally gonna see this is gonna
1545.919,3.12,work super confident
1550.53,3.07,[Music]
1552.4,5.44,why
1553.6,4.24,i did not work that time that's weird
1563.76,3.6,interesting
1566.08,3.36,okay that's probably something we have
1567.36,3.919,to debug maybe it was a weird response
1569.44,3.359,from the server
1571.279,4.081,so our fetch github function is done
1572.799,3.601,we're returning all our jobs
1575.36,2.96,now uh
1576.4,4.32,i think we actually want a way to save
1578.32,3.839,these jobs
1580.72,4.0,into a local storage that we can
1582.159,3.921,retrieve through our api and actually
1584.72,4.079,before we do that i'm getting ahead of
1586.08,4.959,myself but we want to call this
1588.799,3.141,entire function on an interval
1591.039,3.041,so um
1591.94,3.82,[Music]
1594.08,2.719,let's go back to crontab let's just call
1595.76,3.2,it every
1596.799,2.88,uh no let's yeah let's let's let's call
1598.96,3.04,it
1599.679,2.321,uh
1602.159,2.64,every minute
1605.84,4.48,make sure i'm doing that right
1607.44,6.08,yeah every minute
1610.32,4.719,every minute
1613.52,3.279,here we'll import our fetch github
1615.039,4.801,function
1616.799,3.041,patch github boom
1620.24,2.72,just throw it in here
1624.159,3.441,and
1625.6,4.64,the beauty of this is we can
1627.6,5.12,repeat this for as many um
1630.24,4.799,functions as we want right we could we
1632.72,4.079,could fetch github we could fetch stack
1635.039,3.841,overflow jobs we could fetch indeed and
1636.799,4.48,we could create a crontab for each one
1638.88,4.48,that is not dependent on one another to
1641.279,4.161,succeed or fail so these could be all
1643.36,4.559,trying in parallel and they could also
1645.44,4.239,um give us kind of a rolling refresh of
1647.919,4.081,our jobs so maybe
1649.679,4.401,one could run every
1652.0,4.32,10th minute of the hour one could run
1654.08,4.479,every 20th minute and it'll just
1656.32,4.479,continuously refresh without hitting any
1658.559,4.0,one of these apis too often
1660.799,3.841,let's test the uh the cron aspect of
1662.559,2.961,that i just turned it on and it's
1664.64,3.759,running
1665.52,5.12,for the first time now
1668.399,4.561,but then it should run again after a
1670.64,4.159,minute
1672.96,3.28,okay
1674.799,2.641,and that's not going to work because i
1676.24,3.679,actually
1677.44,3.68,ran directly to fetch get github one
1679.919,2.48,but if i do
1681.12,4.559,index
1682.399,3.28,okay it's gonna wait a minute
1690.24,5.2,oh okay
1691.84,3.6,i messed up i messed up
1695.6,4.319,okay so i copied exactly over from cron
1697.84,4.24,tab every minute
1699.919,4.0,okay well i guess if you put six stars
1702.08,4.16,it'll do seconds and if you put five
1703.919,4.081,it'll do minutes
1706.24,4.159,so lesson learned there so we'll see if
1708.0,5.2,that works after a minute
1710.399,5.361,and in the meantime
1713.2,4.0,let's uh let's talk about storage
1715.76,3.039,and like i mentioned earlier we're going
1717.2,3.52,to want to store these jobs actually in
1718.799,4.721,redis
1720.72,4.8,now i already have redis installed
1723.52,3.84,but you can install it through homebrew
1725.52,3.279,pretty easily
1727.36,3.28,just if you don't have homebrew
1728.799,4.081,installed you look up homebrew
1730.64,4.24,installation you just it's a simple easy
1732.88,5.679,download and then you can install
1734.88,6.56,anything with a brew install for example
1738.559,4.801,redis and then it'll basically install
1741.44,4.0,redis under the hood
1743.36,3.919,in your system
1745.44,3.44,in a directory called uh the brew
1747.279,3.76,services
1748.88,5.519,so then you hit start and stop restart
1751.039,4.801,it from from that position
1754.399,2.961,jumping back up to this you'll notice
1755.84,2.959,that it worked after a minute so that's
1757.36,3.6,awesome so let's see if it runs again
1758.799,5.12,after another minute i just cleared the
1760.96,4.319,terminal there with command k
1763.919,3.76,but like i was saying about redis i've
1765.279,5.201,already installed it with brew install
1767.679,5.36,redis and you can install
1770.48,3.679,it yourself if you don't already have it
1773.039,2.401,there are a couple different ways to
1774.159,3.841,install redis but it should always
1775.44,6.32,connect the same way
1778.0,5.12,uh since i'm starting a new project here
1781.76,2.24,i just want to make sure my redis is
1783.12,1.58,clear
1784.0,2.32,so um
1784.7,5.859,[Music]
1786.32,4.239,oops there's a command line
1790.96,1.92,command
1791.919,2.24,that
1792.88,4.24,allows you to connect to the redis
1794.159,5.12,client and then we want to clear all our
1797.12,4.159,our redis with a uh
1799.279,5.841,it's a similar um
1801.279,5.12,language to like a sql where you can uh
1805.12,4.08,basically
1806.399,4.64,this is like a drop table and then we
1809.2,4.24,just cleared everything out of our redis
1811.039,3.841,we got a fresh start
1813.44,3.2,and you'll see it ran again after a
1814.88,2.96,minute so let's just
1816.64,2.56,we could stop that we could leave it
1817.84,3.439,running whatever i'm just going to stop
1819.2,3.599,it but we know our crontab refresh is
1821.279,3.12,working every minute with our fetch
1822.799,4.0,github
1824.399,3.921,okay i have redis installed
1826.799,2.961,and um
1828.32,3.28,if you're not familiar with redis it's
1829.76,4.08,just a key value store so it's an
1831.6,3.6,in-memory database
1833.84,2.719,my sql is a little bit different because
1835.2,3.68,it's on disk
1836.559,5.441,but redis is just
1838.88,5.279,memory so it's not persistent and that
1842.0,4.48,means if your system shuts off
1844.159,4.801,you lose all your ram so
1846.48,4.799,it's not a
1848.96,4.0,fault tolerant database it's not a
1851.279,2.801,durable database
1852.96,3.36,and
1854.08,4.0,the upside is though that it's really
1856.32,2.959,fast
1858.08,2.959,it's kind of like an object in
1859.279,3.841,javascript you just
1861.039,3.841,if you have the key it's
1863.12,3.76,constant time access you just pull it
1864.88,4.08,out of your redis store and then you can
1866.88,3.76,serve it up
1868.96,5.28,in our case
1870.64,3.6,jumping back over to these um
1874.399,4.561,these job uh json that we got from
1877.12,4.64,github
1878.96,5.28,you can see every job has a uuid
1881.76,3.919,which is a guaranteed unique id because
1884.24,3.52,it has so many characters and it's
1885.679,5.041,random characters so it'll be guaranteed
1887.76,2.96,unique every time
1891.039,4.081,every job has one of these ids
1893.039,4.801,so that's a natural candidate to use as
1895.12,2.72,a redis key
1899.279,2.88,i'm thinking within redis our key is
1900.799,2.72,going to be this id
1902.159,4.4,and our value is just going to be the
1903.519,4.321,whole job object
1906.559,3.201,so it would be a string version of this
1907.84,3.439,that we can then pull out
1909.76,3.039,we know it's already json so we can just
1911.279,2.961,stringify it and then when we pull it
1912.799,4.401,out we'll just parse it into a
1914.24,2.96,javascript object
1918.72,4.959,now the slightly tricky part of this is
1920.96,4.319,okay how do we access redis through
1923.679,4.161,our node
1925.279,3.841,um worker right because we have all the
1927.84,2.48,jobs here
1929.12,2.48,right now we're just logging them and
1930.32,3.839,throwing them away but we want to put
1931.6,4.48,them in redis
1934.159,4.24,and the answer to that is there's a node
1936.08,3.68,client library to access
1938.399,2.801,and connect to
1939.76,3.6,and uh
1941.2,4.079,do all the redis actions so it's an
1943.36,3.52,interface that node uses
1945.279,4.081,called the client
1946.88,3.76,that's a library that will do everything
1949.36,5.039,you need to do in redis and you can do
1950.64,3.759,it through node with this library
1955.2,2.479,so i'm just going to search for node
1956.32,3.28,redis
1957.679,5.48,and then we will
1959.6,3.559,install it
1963.36,3.439,just like the same way as before
1971.039,3.041,and i'm gonna do exactly like i said
1973.039,3.601,before
1974.08,4.079,what the getting started docs say i know
1976.64,4.72,this is going to be better if we
1978.159,5.281,promisify this library because you can
1981.36,4.4,see right now that we have all the redis
1983.44,3.68,commands here like set is setting a key
1985.76,2.72,and then there's one called get which
1987.12,4.24,will retrieve that key just think of it
1988.48,5.12,like an object so if you put in key a
1991.36,3.12,and then the val is
1993.6,4.319,one
1994.48,7.28,then you do client.get you'll retrieve
1997.919,8.081,that one from the a key
2001.76,5.44,set and get functions are async so it's
2006.0,3.6,not going to be in line with your
2007.2,3.839,javascript code and that's just the name
2009.6,3.36,of the game because
2011.039,3.041,redis is not in javascript so there's no
2012.96,2.959,way to know
2014.08,4.0,when its response comes back
2015.919,3.201,programmatically in line it's it's going
2018.08,2.479,to wait
2019.12,3.12,redis could be over network so it's
2020.559,3.521,going to take an indeterminate amount of
2022.24,3.2,time to serve the request and then
2024.08,4.0,that's going to come back to the
2025.44,2.64,function call
2028.24,3.2,in
2029.279,4.481,this format so this is the standard
2031.44,5.76,callback format and node error and then
2033.76,5.2,data replies is going to be the response
2037.2,2.64,now you can just ignore all of that
2038.96,2.959,because
2039.84,3.52,we're going to promisify this library
2041.919,4.64,with the
2043.36,6.16,promisify util in node which will
2046.559,6.401,convert callback functions into promises
2049.52,4.96,that we could use await or then
2052.96,4.0,promise chaining with
2054.48,3.76,and so on
2056.96,3.04,let me just
2058.24,3.76,do this i'm just literally copy pasting
2060.0,4.639,it from the docs and
2062.0,5.44,get it async is the example which is
2064.639,4.881,converting that client.get function
2067.44,4.0,to a promise
2069.52,5.28,i'm going to put this below the
2071.44,4.479,client variable declaration so it works
2074.8,2.319,and
2075.919,3.841,i can tell you now that we're also going
2077.119,4.8,to need a set async
2079.76,3.76,we were thinking of setting each job as
2081.919,4.72,its own
2083.52,5.359,item in redis right
2086.639,5.44,which would be fine if we were ever
2088.879,3.2,querying for those keys
2092.48,4.24,but we're not we're
2095.28,3.2,in the mvp
2096.72,3.119,gonna just get all the jobs serving back
2098.48,4.8,to the client and then we'll let the
2099.839,6.961,client handle pagination or any kind of
2103.28,3.52,showing and hiding of these jobs
2107.839,3.121,so until we do that
2111.44,4.639,or rather until we decide we want to
2113.28,5.68,optimize this query on the server we
2116.079,4.481,could actually just set the
2118.96,3.36,response from github
2120.56,4.64,as the value of a single key it'll be a
2122.32,3.6,huge text blob and we just serve up to
2125.2,3.12,the
2125.92,2.4,front end
2128.48,3.52,and the only reason we're doing this is
2130.16,3.52,because of
2132.0,3.28,performance we don't want to
2133.68,4.88,have to wait for the api to respond
2135.28,5.44,every time we uh serve a client request
2138.56,4.24,so redis is only a buffer that's an
2140.72,3.44,intermediary holding this data that
2142.8,2.799,we're only fetching once every hour
2144.16,3.76,because the jobs aren't refreshing that
2145.599,2.321,often
2148.24,3.28,so that's a long-winded way of saying
2149.52,4.8,that
2151.52,5.12,once we create these this all jobs um
2154.32,4.56,array
2156.64,4.24,we actually are just gonna throw the
2158.88,4.8,whole thing under one key and we'll call
2160.88,2.8,that key github
2170.32,2.96,also
2171.52,2.78,let's let's
2173.28,2.96,hold on to this um
2174.3,4.9,[Music]
2176.24,4.48,let's hold on to this um
2179.2,3.52,get function in our head because we're
2180.72,4.24,gonna we're not gonna be pulling out of
2182.72,4.48,our redis until we're in the api layer
2184.96,4.96,which is serving the um
2187.2,6.24,the jobs request
2189.92,3.52,man i have kind of a stuffy nose
2196.64,4.76,okay let's do the set async
2201.76,5.04,and this takes a value github
2204.56,4.4,or a key rather github then a value will
2206.8,3.92,be our all jobs we might need to
2208.96,5.399,stringify that
2210.72,3.639,but we'll test it out
2224.32,2.799,okay
2226.0,4.0,let's run
2227.119,4.161,node worker tasks
2230.0,3.44,that's github
2231.28,4.64,and uh
2233.44,4.48,let's see if that works
2235.92,4.0,we can test it like this get
2237.92,5.12,github like that
2239.92,5.12,we still have our redis cli open there
2243.04,4.88,okay so far
2245.04,5.52,nothing happened that's not a good sign
2247.92,2.64,and here's why
2251.28,3.36,let's call our function just as a test
2253.04,3.92,i'm gonna take that out
2254.64,4.56,okay
2256.96,2.24,okay
2260.56,3.76,i hope this uh sniffly nose hasn't been
2262.56,3.84,annoying you guys too much it's actually
2264.32,4.96,annoying me and i hope it's not super
2266.4,5.199,loud on the microphone
2269.28,4.16,okay the get command
2271.599,4.881,contains the argument
2273.44,3.04,of type object
2277.04,3.28,okay i didn't like that at all
2280.48,4.24,um i'm not i'm not using get so i don't
2283.76,4.64,know
2284.72,3.68,what it's talking about here but um
2291.119,6.841,okay i know now set
2293.76,4.2,and then okay let's try that
2301.839,5.76,okay
2303.44,6.48,set contains argument of type object
2307.599,5.881,and as we expected
2309.92,3.56,this is like an array
2316.0,5.079,i think this is gonna work
2317.839,3.24,to be honest
2326.0,2.8,nice
2327.119,3.681,okay github
2328.8,3.6,there it is
2330.8,2.96,radis is working
2332.4,5.28,our
2333.76,3.92,fetch worker is is totally great
2337.839,4.961,we'll leave these logs in just so we
2339.359,4.961,have that telemetry that observability
2342.8,4.48,but
2344.32,2.96,everything is working
2347.839,2.401,oops
2352.72,3.0,okay
2356.0,4.079,just make sure that's still working with
2357.119,2.96,our crown tab here
2361.76,2.319,oops
2364.72,4.44,so we're supposed to remind me to take
2366.0,3.16,that out
2369.359,3.361,leave that running
2370.64,2.959,and we'll jump over to
2372.72,2.08,our
2373.599,3.361,next piece
2374.8,4.48,if we look at our plan
2376.96,5.119,api
2379.28,5.04,so let's just review this
2382.079,3.201,oh actually so we've got this api part
2384.32,2.32,done
2385.28,3.2,we still need this
2386.64,3.6,we still need this
2388.48,3.92,and then we'll improve our front end
2390.24,5.879,last
2392.4,3.719,so filter algorithm
2396.24,4.08,all right let's look at what's in our
2397.76,2.56,store here
2400.56,2.98,so we're getting jobs back
2402.72,2.32,and um
2403.54,3.819,[Music]
2405.04,4.96,like i said we
2407.359,3.841,we want to start with a really simple
2410.0,5.04,algorithm
2411.2,6.639,that is just filtering out by position
2415.04,6.16,so just taking like eyeballing this
2417.839,3.361,i can see that in the title
2421.68,4.72,we can gain a few insights into what
2424.4,3.439,kind of job
2426.4,3.28,it is right
2427.839,3.201,if we see a senior
2429.68,4.88,in the title we know it's not going to
2431.04,3.52,be a junior developer job
2434.88,3.6,if we see manager in the title we know
2437.04,3.76,it's not going to be a junior developer
2438.48,2.32,job
2441.44,5.84,another common thing we might see is
2443.119,6.0,like a senior abbreviated as sr
2447.28,2.799,i didn't see it in there but i know
2449.119,4.641,that's
2450.079,7.601,it's done so
2453.76,6.72,maybe if we see that word sr dot at all
2457.68,2.8,then we um
2460.96,3.119,we want to filter it out
2465.68,5.04,so this is our set in redis so we're
2467.44,3.28,gonna want our filter before that
2473.28,3.039,that's all pages
2478.319,3.0,filter
2482.4,5.12,you can always factor this out to a
2483.599,6.161,function later but for now let's um
2487.52,4.48,let's do it this way
2489.76,2.24,okay
2493.359,3.441,new array junior jobs
2496.88,3.68,it's going to be fill a
2498.319,4.0,subset of all jobs
2500.56,3.279,and we're going to filter based on a few
2502.319,4.52,different parameters
2503.839,5.041,looking at each job
2506.839,3.401,okay we're going to use one super
2508.88,3.52,important thing here and that is the
2510.24,4.4,string that includes function and we're
2512.4,4.959,going to use that on job title
2514.64,4.719,so if the job title includes
2517.359,5.321,or rather
2519.359,3.321,stop siri
2522.96,5.119,okay let's do it this way actually job
2524.4,5.919,title equals job title to lower case
2528.079,3.361,it's important
2530.319,4.241,i think the example we saw in the
2531.44,4.96,terminal was in all caps so we want to
2534.56,3.759,reduce that kind of
2536.4,3.679,variation by just lowercasing the whole
2538.319,3.121,title
2540.079,2.721,we also don't have to keep accessing the
2541.44,4.639,object if we just store it in a variable
2542.8,5.84,so this is this is for one job
2546.079,2.561,and um
2549.119,2.96,we're going through 392 so we're gonna
2551.119,3.041,have to go through each one of those
2552.079,3.441,jobs real fast
2554.16,3.12,that's part of the reason too why we're
2555.52,3.68,doing this cron method is because if we
2557.28,3.68,fetch the jobs on every front end
2559.2,3.04,request we'd have to do this whole
2560.96,3.68,filter thing every time and it's going
2562.24,3.68,to be the same logic so
2564.64,3.679,in general when you're doing the same
2565.92,4.88,logic for every client request that's
2568.319,4.961,definitely a good case for caching or
2570.8,4.48,even database denormalization so
2573.28,3.2,replicating data in your store that's a
2575.28,4.559,commonly
2576.48,4.639,a common read pattern rather
2579.839,2.961,all right we could be more curious about
2581.119,4.48,this but let's just make it super clear
2582.8,5.44,and have a default case let is junior
2585.599,2.641,equals true
2588.56,4.24,then there's going to be our logic
2591.839,2.561,then
2592.8,4.319,we're gonna just return the result is
2594.4,4.4,junior okay
2597.119,4.321,now this is gonna be our main algorithm
2598.8,2.64,logic here
2604.079,4.721,okay so if um
2607.04,4.4,job title
2608.8,2.64,includes
2612.4,3.84,senior
2614.64,4.6,we gotta remember we changed it to lower
2616.24,3.0,case
2620.079,3.52,or
2621.28,4.24,job title
2623.599,3.281,includes
2625.52,3.599,manager
2626.88,2.239,or
2629.599,6.0,job title includes sr dot senior
2633.2,4.08,or another one i'm gonna
2635.599,3.681,and i thought about this before
2637.28,3.2,i'm gonna put in is architect because
2639.28,4.4,that is
2640.48,5.04,generally a more senior role as well
2643.68,3.04,that you're not gonna be able to do as a
2645.52,2.799,junior developer that's something you
2646.72,4.24,have to gain a little skill from then
2648.319,3.841,you can design whole systems and
2650.96,3.44,you may or may not be the one
2652.16,3.439,implementing them as well
2654.4,2.88,but here's all the cases we want to
2655.599,4.401,filter out
2657.28,6.559,if any of these are true
2660.0,3.839,is junior equals false
2666.96,4.08,okay so this is the most clear we could
2668.64,3.76,way we could do it but
2671.04,2.799,i'm actually going to cut this part out
2672.4,4.56,and then
2673.839,5.601,we'll do return false
2676.96,4.639,otherwise
2679.44,5.76,we don't actually need else just
2681.599,3.601,if that didn't happen return true
2688.839,3.401,okay now
2690.2,4.04,[Music]
2692.24,5.68,we could test in our in our code how
2694.24,6.72,many get actually filtered out by this
2697.92,5.36,by um console logging
2700.96,4.879,filtered down to
2703.28,4.0,junior jobs
2705.839,4.48,okay
2707.28,3.039,and we do uh
2711.839,2.961,move this one up here
2715.76,4.079,actually i think
2717.119,4.401,yeah we'll leave that in
2719.839,3.201,make sure we're adding junior jobs in
2721.52,3.599,here only
2723.04,5.68,consolidate success okay
2725.119,4.72,just that's bothering me okay restart
2728.72,2.8,oops
2729.839,3.76,restart
2731.52,3.92,clean slate
2733.599,4.401,we'll get this extra log we'll see how
2735.44,4.96,much damage our filter does
2738.0,5.119,and then we will
2740.4,6.32,still set that in redis and then we can
2743.119,6.081,make sure it's still in there
2746.72,2.48,please work
2751.68,3.52,okay
2753.2,3.2,nice
2755.2,4.08,cool so
2756.4,5.6,if we're filtering out okay we went down
2759.28,4.16,from 392 all the way to 245 so we're
2762.0,3.76,filtering out
2763.44,5.12,almost uh one third of the jobs just
2765.76,2.8,with these words
2769.04,4.48,which i think is already making our app
2771.04,4.48,useful to some degree obviously the more
2773.52,3.76,complex we make this algorithm we could
2775.52,4.559,search through the
2777.28,4.64,job.description
2780.079,3.601,look for years of experience
2781.92,4.72,there's definitely more
2783.68,5.04,more titles we can include here
2786.64,3.679,but that would depend like what we see
2788.72,2.48,in the json
2790.319,2.641,um
2791.2,3.28,we can kind of pluck words out of there
2792.96,3.44,be like oh yeah this was obviously a
2794.48,3.92,senior term too and then add it to this
2796.4,5.0,list but for now i think it's a good
2798.4,3.0,start
2804.72,3.44,okay
2806.72,3.44,let's see
2808.16,4.159,back in our planning
2810.16,4.88,we just did our filter algorithm or very
2812.319,5.201,basic version node work is done so this
2815.04,4.96,whole section is done
2817.52,4.0,redis is done
2820.0,3.44,api
2821.52,5.839,and then we'll we'll finish up with our
2823.44,5.84,front end and then finally deploy
2827.359,3.041,okay
2829.28,3.36,so
2830.4,4.48,let's actually just close everything
2832.64,4.8,open up api
2834.88,5.28,index.js
2837.44,5.72,just want a super simple express app
2840.16,3.0,express
2850.8,3.279,again same thing i said before
2853.04,5.16,uh
2854.079,4.121,just do that npm install
2860.72,6.32,and then from there
2862.96,4.08,you take the most basic example
2870.079,5.76,make my port 3001 because i know my
2872.4,3.439,front end is running on 3000.
2877.68,3.679,get a little bit of extra space here
2883.92,4.56,and
2884.839,4.681,um okay and then this
2888.48,2.32,route
2889.52,3.839,we don't need a slash we just need a
2890.8,4.88,route called jobs
2893.359,2.321,okay
2895.76,3.48,i love this part
2901.04,4.319,okay our express install went through
2902.88,2.479,over here
2905.44,5.6,let's do um let's just run a node on api
2908.319,2.721,index.js
2912.319,4.641,sample app listening on port 3001
2915.119,6.801,and then if i curl which is just sending
2916.96,7.28,a request to something on the port 3001
2921.92,4.639,slash jobs get the hello world back
2924.24,2.319,sweet
2926.64,2.56,okay this is going to be the simplest
2928.0,3.599,api ever
2929.2,4.08,and we just want to use that
2931.599,4.321,redis
2933.28,4.16,library we already installed
2935.92,4.48,and we're going to use the get which we
2937.44,2.96,already commented out
2940.88,2.88,and we already know which key we're
2941.92,3.76,gonna get because we only set one so
2943.76,3.599,that really simplifies it
2945.68,3.36,uh so we need to copy actually all this
2947.359,4.24,code and delete this because we don't
2949.04,2.559,need it here
2952.88,3.6,get the redis client get another
2954.24,3.92,instance of that here
2956.48,3.28,and then
2958.16,3.12,do the get async and this is where the
2959.76,3.92,async part is really going to come in
2961.28,2.4,handy
2964.16,4.88,to convert this route to an async
2967.04,4.48,function
2969.04,3.36,let me do jobs here
2971.52,3.68,wait
2972.4,2.8,get async
2975.76,5.4,github
2977.359,3.801,just hardcode that in
2985.359,5.121,now let's remember we stringified it so
2987.52,2.96,json parse
2992.72,2.399,and i'm going to actually undo this
2993.839,3.201,because we are just going to have to
2995.119,4.801,re-stringify it when we send it to our
2997.04,4.48,client but um in the meantime
2999.92,3.52,just to
3001.52,4.079,see the length and or rather see that
3003.44,4.56,the length matches our
3005.599,6.201,our length that we put in let's parse it
3008.0,3.8,and then let's do dot lake
3014.16,2.24,okay
3017.68,2.08,so
3018.559,3.601,it's kind of a lot that we did without
3019.76,5.04,testing it let's restart our server
3022.16,4.72,do the same curl
3024.8,3.36,oh man okay 245.
3026.88,3.36,i don't remember if that's how many we
3028.16,5.84,put in we're definitely getting a list
3030.24,3.76,of 245 which is a good sign
3038.0,3.76,now let's just try sending this back and
3039.44,4.72,see if we get that full uh stringified
3041.76,2.4,object
3046.24,3.76,that's exactly what we want and it's
3047.52,2.48,that easy
3053.68,2.879,so that's already done
3056.88,2.64,so i don't know how long it's been guys
3058.24,3.44,but
3059.52,4.64,with this simple of an api we can
3061.68,2.48,literally
3064.8,3.279,we've literally been able to create all
3066.24,4.0,this like in such a short amount of time
3068.079,4.24,we have a data feed
3070.24,3.92,and you can replicate like before before
3072.319,3.441,i go further
3074.16,3.36,you can replicate this
3075.76,3.76,in any
3077.52,5.12,this is like 90 applications if you have
3079.52,5.36,a data feed you have storage you have a
3082.64,4.0,worker that's doing some async task on
3084.88,4.56,an interval
3086.64,4.56,uh it's called batch processing
3089.44,2.48,you have an api that's called by front
3091.2,3.2,end
3091.92,5.919,this is like 90 of crud applications
3094.4,3.439,let's create read upload delete
3098.0,3.599,in this case we're only really reading
3099.92,3.199,from the front end but the backend is
3101.599,3.76,doing some more complex stuff including
3103.119,4.24,an algorithm
3105.359,4.0,the pieces that we're using are used in
3107.359,4.321,some way in almost every
3109.359,6.24,large scale application so doing this as
3111.68,3.919,an mvp is like a really good exercise
3116.319,4.24,all right let's push on
3119.28,4.16,i might be getting a little bit tired
3120.559,4.641,but let's keep it going
3123.44,3.6,okay
3125.2,5.2,so we have our api
3127.04,4.799,uh running let's keep this running
3130.4,3.36,all right let's just restart this so we
3131.839,3.28,have the uh log that we know we're
3133.76,3.44,listening
3135.119,4.72,and um i'm gonna go back into our client
3137.2,2.639,folder
3140.559,3.681,okay
3141.68,5.12,so we're back in our app
3144.24,4.16,close that we're back in our app
3146.8,4.039,function which we we mentioned we're
3148.4,6.56,going to put the state
3150.839,7.161,in let's pull this back up
3154.96,4.56,so make sure it's still running all good
3158.0,4.0,to call our api programmatically the
3159.52,5.12,same way we're doing with curl here
3162.0,4.16,we just need to call this url
3164.64,4.32,with a function that we're going to make
3166.16,2.8,called fetch jobs
3175.2,2.96,all it's going to do is use the browser
3176.8,3.519,version of fetch which we don't need to
3178.16,4.72,import because it's built into browsers
3180.319,2.561,like chrome
3183.04,3.76,let's um instead of hard coding
3185.119,5.921,do a
3186.8,4.24,job api url constant
3191.359,4.48,it'll just be exactly what we have over
3193.04,2.799,here
3200.24,3.839,since this is async we can use in a
3201.68,5.6,weight a weight
3204.079,4.801,const jobs equals weight
3207.28,5.6,of course this will be in json so we
3208.88,4.0,have to uh convert it to json
3212.96,4.159,let's do that call this res call this
3215.28,3.44,json goes await
3217.119,3.281,as that json
3218.72,4.92,and before going further let's just log
3220.4,3.24,that out
3223.92,4.24,okay
3225.52,4.0,how do we call this in our client
3228.16,3.76,to find my number used i know i'm
3229.52,2.4,getting there
3232.079,5.28,okay if you've seen my past videos i
3234.079,5.201,talked about react hooks
3237.359,3.121,these are replacing all react class
3239.28,3.36,components
3240.48,4.16,now we just have functional components
3242.64,4.32,and we've seen hooks for
3244.64,5.479,use reducer use state and all that kind
3246.96,3.159,of stuff
3250.48,4.16,since this app is just a very simple
3252.72,4.16,state it's a list of jobs i don't feel
3254.64,3.84,like i need to use a reducer
3256.88,3.76,and i know exactly the shape of these
3258.48,5.119,jobs as well so i don't need to do any
3260.64,4.88,reducer like manipulation and it's also
3263.599,3.441,very hierarchical and shallow
3265.52,3.52,application
3267.04,4.319,meaning i just want to pass down these
3269.04,6.16,jobs one level to my job's
3271.359,3.841,view component from this app state
3276.16,4.88,i started talking about hooks and we've
3278.799,4.32,used the used state hook a lot
3281.04,3.44,in my past videos but we're gonna use
3283.119,4.96,one that we haven't used too much yet
3284.48,5.44,here which is called use effect
3288.079,5.04,and that's basically uh replacing the
3289.92,5.919,component did mount or component did
3293.119,5.121,update function from past versions of
3295.839,2.401,react
3302.96,3.76,so i'm going to use it here react i use
3305.28,2.799,effect
3306.72,3.28,and then
3308.079,3.04,this function actually takes a anonymous
3310.0,3.119,function
3311.119,4.801,in which i can do some
3313.119,5.601,function calls some async function calls
3315.92,5.679,as well as a second argument which is
3318.72,5.359,the
3321.599,4.321,basically hooks that i want to watch
3324.079,4.561,to update but if i pass in an empty
3325.92,5.84,array this react i use effect will act
3328.64,4.88,exactly like a component did mount
3331.76,3.2,all right in inside here just gonna
3333.52,4.079,fetch jobs
3334.96,2.639,and um
3338.559,3.361,i also want to think about how i'm gonna
3339.839,4.321,store those jobs so um
3341.92,3.679,let's also do a used state hook
3344.16,3.12,jobs
3345.599,4.0,this is never jobs a lot so let me just
3347.28,6.079,do job list
3349.599,3.76,was react dot use state
3354.079,2.961,and
3355.44,3.28,update jobs
3357.04,4.0,react i use state and then i'll
3358.72,4.399,initialize this to an empty list
3361.04,3.6,which i'm actually going to pass in here
3363.119,4.881,so when i do that that should actually
3364.64,5.439,clear out all my um
3368.0,3.68,chops okay good because i'm initializing
3370.079,4.161,it to an empty list
3371.68,4.48,okay in here i'm fetching jobs
3374.24,4.079,console.json
3376.16,4.88,see what happens here
3378.319,3.76,fail to fetch ah right
3381.04,2.48,this is one thing you're going to
3382.079,3.04,definitely run into if you're writing
3383.52,4.16,express apps and you're pretty new it's
3385.119,3.841,the access control allow origin
3387.68,3.36,so this is something you have to set in
3388.96,4.8,your server if you're accessing
3391.04,6.4,endpoints from a different base url it's
3393.76,4.88,called cross origin resource sharing
3397.44,3.119,and
3398.64,4.479,you basically have to set a server
3400.559,4.0,header in your api that allows requests
3403.119,2.641,from the url
3404.559,3.201,that is
3405.76,4.16,the origin
3407.76,5.2,so recall that our react app's running
3409.92,7.52,on localhost 3000 as we can see here
3412.96,4.48,so all i have to do is set a um header
3417.76,3.359,header
3419.68,2.72,uh
3421.119,4.321,i think it's like
3422.4,3.04,just literally that but
3425.76,3.92,let me just uh let me just copy
3427.52,5.16,something to so i make sure doing it
3429.68,3.0,right
3433.119,4.72,chorus res header express
3439.2,4.32,yeah here it is
3441.44,4.399,that's all i need
3443.52,3.76,press header access control origin but
3445.839,3.041,if i do the star that makes it not
3447.28,4.799,protected so i just want to make this
3448.88,5.52,http localhost
3452.079,4.161,3000
3454.4,3.84,okay
3456.24,4.4,now this will
3458.24,4.64,i think i'm 92 percent sure it's gonna
3460.64,2.24,work
3465.52,4.64,all right
3467.44,2.72,i type it wrong
3470.48,2.319,huh
3473.599,3.441,i didn't restart my server that's why
3477.28,3.92,i was the eight percent me not
3478.559,2.641,restarting it
3483.839,4.96,wow nice guys there we go
3486.4,5.12,that's all our jobs
3488.799,2.721,beautiful okay
3491.68,2.72,we're getting close
3494.64,5.199,okay fetch jobs is um
3497.52,5.52,it's working
3499.839,6.401,i think what we still need is a um
3503.04,5.92,callback to to update these jobs
3506.24,5.839,so let's just do this
3508.96,5.76,update callback
3512.079,4.641,as we know when we use a used state hook
3514.72,3.76,the second variable
3516.72,2.56,that we destructure from the use state
3518.48,2.319,hook
3519.28,4.16,is a function
3520.799,5.28,in which we can pass a argument
3523.44,4.48,that is the new value of our state
3526.079,4.081,for job list
3527.92,4.32,so if i pass it in here like this update
3530.16,4.72,callback and then i pass the json
3532.24,6.079,directly into this
3534.88,7.199,i'm actually just setting the value
3538.319,7.601,of job list to this json which is as we
3542.079,7.361,can see over here an array of uh size
3545.92,6.8,245 containing our jobs
3549.44,4.96,okay so i got update callback
3552.72,3.119,job list
3554.4,3.12,i didn't even have to do
3555.839,3.681,anything else it's already rendering all
3557.52,4.72,the jobs
3559.52,5.2,that are from github
3562.24,4.4,that's pretty cool
3564.72,3.44,hey guys i'm back with a new shirt let's
3566.64,3.199,finish up this front end and then get
3568.16,3.52,this app deployed
3569.839,3.441,i've pulled up another plan board here
3571.68,3.28,just to make it a little bit more clear
3573.28,3.36,what we want to do with the front end
3574.96,3.28,like i said before we always want to
3576.64,2.719,have a plan before we just jump into
3578.24,2.24,coding
3579.359,2.48,and um
3580.48,3.68,the first thing i'm going to draw out is
3581.839,4.72,just the current way the app looks which
3584.16,5.6,is just the title and then uh the list
3586.559,3.201,of all our jobs here
3590.559,4.481,right now our jobs only have the title
3593.359,5.48,and the company name but we're
3595.04,7.039,definitely gonna want also to have the
3598.839,5.081,location so title
3602.079,3.76,company
3603.92,3.12,we're definitely going to want location
3605.839,2.0,as well as
3607.04,3.68,the
3607.839,4.801,time posted
3610.72,5.2,and i think the best format for time is
3612.64,6.32,how long ago so today one day ago two
3615.92,3.04,days ago etc
3619.04,4.4,now this is in the list view and
3621.76,3.839,we gotta think about too what is going
3623.44,5.119,to happen when we click on a job
3625.599,5.361,and in that case i want to build a
3628.559,4.881,detail view modal
3630.96,4.24,also known as a dialogue or a pop-up
3633.44,4.72,that will show more details about the
3635.2,3.76,job uh which will include
3638.16,4.199,the
3638.96,3.399,company logo
3642.48,4.8,description
3644.64,5.76,as well as the
3647.28,3.12,apply link
3650.88,4.8,and that could also be a button if we
3652.559,5.121,decide to make it like that
3655.68,3.76,okay so these are the main things we
3657.68,4.159,still need to
3659.44,5.28,excuse me these are the main things we
3661.839,4.801,want in our front end the good news is
3664.72,4.32,since we already have the json
3666.64,4.88,we just have to pull it out
3669.04,4.4,of the json of each job and create a
3671.52,3.839,little bit extra functionality to make
3673.44,3.919,this modal animate
3675.359,4.081,luckily this is pretty easy with
3677.359,3.601,material ui and in fact the main reason
3679.44,3.52,i wanted to use it for this project
3680.96,3.839,because you get the modal for free with
3682.96,4.24,all the um
3684.799,6.481,animations and stuff like that
3687.2,5.44,so let's just jump back over to our um
3691.28,3.76,front end here
3692.64,3.52,and i'm gonna pull open
3695.04,4.799,the
3696.16,3.679,jobs component
3701.359,4.161,here i have variant h1
3703.599,4.24,but i think this title is definitely a
3705.52,4.64,little bit too big i don't think it
3707.839,4.561,i think that's pretty obvious and i'm
3710.16,6.56,going to switch this up to
3712.4,6.719,still using a h1 html under the hood but
3716.72,4.8,the variant will actually make it an h4
3719.119,4.48,stylistically so that's a pretty cool
3721.52,7.44,trick if you want to maintain the uh
3723.599,5.361,benefits of having h1 for seo and so on
3731.76,5.359,diving into the job itself
3733.92,5.28,let's actually log out what a single job
3737.119,3.761,is going to look like just so
3739.2,3.119,we know what we're working with and
3740.88,3.76,instead of doing that here in the job
3742.319,4.561,component i'm going to do it in jobs
3744.64,5.36,and we could just look at what the first
3746.88,8.76,job looks like
3750.0,5.64,so i'm going to use jobs 0 for that
3755.839,3.28,then we'll open the console
3759.28,2.64,and
3760.48,5.119,see that
3761.92,3.679,we have the fields we can use here
3766.24,7.76,so i said we wanted to add location and
3769.2,6.96,time posted to our list view
3774.0,4.319,uh we could pretty easily just pull out
3776.16,3.919,location
3778.319,5.52,in our job component like the way we've
3780.079,3.76,been doing with the other ones
3790.799,4.401,and there it goes
3792.88,3.679,this is looking a little bit
3795.2,3.839,let's say
3796.559,4.641,disorganized but let's worry about that
3799.039,3.52,in just a moment um
3801.2,4.48,for now i'm just going to throw these
3802.559,6.321,all in a div which is going to be
3805.68,5.679,floating to the left of our box
3808.88,3.6,and instead of space
3811.359,3.76,uh
3812.48,7.119,around i want to change this
3815.119,4.48,css to space between
3822.96,3.52,it'll make sense more in a minute why
3824.64,3.04,i'm doing that
3826.48,5.52,finally
3827.68,6.72,in another div let's do the um
3832.0,6.92,created date which i believe is over
3834.4,4.52,here in our json as well
3839.839,4.96,created underscore at
3843.44,3.76,and i'm just kind of using these
3844.799,3.601,typography elements interchangeably as
3847.2,3.919,divs
3848.4,5.04,so later on we can change the size of
3851.119,5.841,these different things
3853.44,3.52,okay so created at
3859.839,3.841,let's just see if the spacing looks
3861.68,3.919,alright there
3863.68,4.56,now that i see this here i think the
3865.599,4.641,date doesn't actually look too bad
3868.24,3.44,as long as we make it a little bit
3870.24,3.76,shorter so
3871.68,5.439,let's just split it by space
3874.0,7.52,and then take the um
3877.119,6.881,the first three words so let's take o24
3881.52,5.599,and then join that by a space
3884.0,6.559,so all i'm doing here is
3887.119,6.24,taking sunday june knife out
3890.559,5.76,of this longer string
3893.359,6.801,i meant to do 0 to 3. there we go so we
3896.319,6.72,get index 0 1 and 2.
3900.16,5.679,all right looking at our page
3903.039,4.401,it deserves a little bit of padding
3905.839,4.161,just it's pushed up against the side
3907.44,4.0,here so let's add that quickly and then
3910.0,4.079,keep going
3911.44,3.25,let's give body a
3914.079,3.701,margin
3914.69,3.09,[Music]
3918.24,4.92,top and bottom zero left and right 40.
3923.76,3.839,okay
3925.44,4.639,top and bottom
3927.599,2.48,20.
3934.799,4.24,all right and then within job maybe we
3936.72,6.879,give a little padding
3939.039,4.56,uh top and bottom left and right ten
3943.839,3.681,okay
3944.72,4.879,pretty good
3947.52,4.799,now inside job
3949.599,5.361,we'll actually add some hierarchy
3952.319,6.04,style hierarchy to our
3954.96,3.399,job title
3965.839,3.441,let's do h5
3970.28,4.96,h6
3972.0,3.24,on this
3982.4,5.28,and so on we can just keep
3985.599,3.121,updating editing this
3987.68,2.399,um
3988.72,4.92,i think i'm actually going to flip these
3990.079,3.561,around h6h5
3994.4,3.6,but you get the point you can just keep
3996.0,4.16,tweaking it
3998.0,3.2,okay let's add that pagination thing i
4000.16,2.879,mentioned
4001.2,3.2,it's gonna be kind of a fake pagination
4003.039,4.56,you're supposed to do it on the server
4004.4,5.36,to not load all your results at once
4007.599,3.921,but this is a good stop gap we start
4009.76,4.4,just with the client implementation and
4011.52,5.68,then later if we want to improve the
4014.16,4.72,performance we could do the server
4017.2,5.28,side too
4018.88,5.12,but long story short we have over 200
4022.48,4.079,results we want these on more than one
4024.0,4.88,page so they're more navigable
4026.559,4.641,so to solve this i
4028.88,4.479,opened a material ui page for the
4031.2,5.119,stepper component and i really like this
4033.359,5.361,one down here called the
4036.319,4.24,mobile stepper progress
4038.72,4.079,so you could click through it like this
4040.559,4.0,it fills up kind of a progress bar and
4042.799,4.04,it says mobile but i like it so i'm just
4044.559,5.361,gonna pull it over
4046.839,5.72,um let's see let's just pull over
4049.92,4.8,everything here
4052.559,3.441,just in case we need it and then paste
4054.72,3.52,it right into
4056.0,5.039,our jobs component
4058.24,2.799,and um
4061.28,4.799,we could use the word step here
4064.16,4.08,interchangeably with page and i'm
4066.079,4.161,putting this state in jobs because it's
4068.24,4.4,more of a
4070.24,4.879,view state rather than an actual data
4072.64,4.88,based state so
4075.119,4.081,all our logic concerning our view is
4077.52,2.96,going to actually be in jobs and not in
4079.2,3.28,the app
4080.48,3.76,file
4082.48,3.52,okay so
4084.24,3.28,since
4086.0,3.68,these each have their own function
4087.52,4.4,handle next set uh
4089.68,3.919,oh sorry handle next handle back i'm
4091.92,3.84,just going to copy these directly over
4093.599,2.161,to
4097.279,4.08,paste those right in function inside a
4099.279,3.56,function
4101.359,4.641,and
4102.839,5.96,um all right finally i'm going to just
4106.0,5.92,put this whole thing below our
4108.799,5.92,uh jobs map
4111.92,5.68,and um let's see if by pasting it
4114.719,5.761,directly in we we
4117.6,4.4,need to do anything else
4120.48,2.719,just going to make sure that's formatted
4122.0,3.44,correctly
4123.199,4.721,saved it
4125.44,7.319,and um
4127.92,4.839,let's just take this out classes
4138.719,3.801,direction rtl
4148.239,5.361,okay let's see how theme is being used
4150.319,3.281,because this is kind of a um
4154.799,2.4,darn
4158.719,3.841,all right i don't know why that would
4159.759,4.241,change from left to right but um
4162.56,2.799,it might be a mobile implementation
4164.0,4.96,specific thing
4165.359,5.201,so let's just take this and
4168.96,3.68,hard code it as
4170.56,6.08,right and we'll hard code this one as
4172.64,4.0,left and see if we run in any problems
4180.239,4.721,okay save that
4182.159,5.281,and can't find
4184.96,3.52,module
4187.44,3.759,oh
4188.48,6.16,i forgot about this material ui icons is
4191.199,4.801,a separate library so we have to also
4194.64,3.68,install that
4196.0,5.8,in our client
4198.32,3.48,yarn add
4202.4,4.08,material ui icons
4214.4,3.2,now while that's installing let's think
4215.84,4.319,about
4217.6,4.88,how else we want to use our pages
4220.159,2.321,um
4223.12,5.76,if we want to artificially construct
4224.96,5.52,these pages from a larger list
4228.88,2.88,then we basically just want to break
4230.48,3.679,things into
4231.76,5.12,a slice depending on
4234.159,4.401,the number of results we want to show at
4236.88,3.839,a given time
4238.56,2.159,so
4241.52,4.8,let's think of it as a moving window of
4243.84,2.48,50.
4248.88,5.359,so if step equals 1
4252.0,3.28,or let's say step equals 0 then we want
4254.239,3.361,to show
4255.28,4.64,0 through 49
4257.6,4.16,step equals 1
4259.92,4.56,show 50
4261.76,7.32,through 100
4264.48,4.6,and so on or maybe 50-99
4269.199,4.401,okay
4270.239,5.521,so since our icon's finished let's see
4273.6,4.72,if that worked we got to go all the way
4275.76,3.6,to the bottom and yes it is here
4278.32,4.0,next
4279.36,4.08,and back okay
4282.32,2.96,okay
4283.44,3.52,so let's make this more dynamic steps is
4285.28,4.64,hard coded as six
4286.96,4.88,if we want 50 per page um
4289.92,3.759,we're going to have to do our
4291.84,2.8,well
4293.679,2.801,since we're going to use this in a
4294.64,2.72,couple different places let's get our uh
4296.48,4.88,job
4297.36,6.799,length or num jobs equals jobs.like just
4301.36,5.92,for uh better abstraction
4304.159,5.441,steps will be num jobs
4307.28,5.04,uh
4309.6,2.72,divided by
4312.84,4.76,50. and then we'll math floor that
4319.92,5.04,or let's actually math seal that because
4323.92,2.08,it'll be
4324.96,4.08,minimum
4326.0,4.48,um one page could have you know only one
4329.04,4.56,job on it
4330.48,5.44,so we want minimum
4333.6,2.32,okay
4336.239,4.161,so that seems about right it seems like
4338.159,4.881,we have about four pages just by the
4340.4,4.56,amount of times i click that
4343.04,4.24,and um
4344.96,4.64,let's add a little more detail to right
4347.28,3.6,above this mobile stepper that just says
4349.6,4.16,and i'm just making it a different now
4350.88,5.76,but we can change it um
4353.76,5.12,page
4356.64,2.24,uh
4359.12,4.88,active step
4361.679,2.321,of
4365.36,6.04,num jobs
4368.4,3.0,okay
4376.719,2.881,um not
4381.44,5.2,okay let's let's let's factor this out
4383.84,2.8,num pages
4388.4,5.68,num pages equals this and then we can
4391.199,4.321,also use this
4394.08,4.88,where
4395.52,4.4,we are
4398.96,4.08,oh
4399.92,6.72,computers lagging again
4403.04,3.6,numb pages like that
4406.96,4.4,yeah i'm feeling pretty confident about
4408.4,5.6,that um
4411.36,3.6,see if it worked if we go to the bottom
4414.0,2.719,my
4414.96,4.759,wrist is getting real tired of scrolling
4416.719,3.0,here
4429.04,4.48,all right and then
4431.679,4.081,one thing i actually meant to do earlier
4433.52,5.24,too is
4435.76,3.0,um
4459.28,5.68,okay going all the way down
4462.0,2.96,okay oh five
4466.4,4.64,oh back one
4469.12,2.96,two three
4471.04,3.28,four
4472.08,4.4,five okay so the display number we want
4474.32,4.0,to actually be
4476.48,4.239,uh active step plus one because we're
4478.32,4.8,zero index and we're going up to
4480.719,4.0,um
4483.12,4.48,for
4484.719,5.44,yeah so this will this will work
4487.6,7.0,on pages minus one because the index is
4490.159,4.441,actually one less than the true value
4498.4,2.319,one
4501.12,2.4,two
4502.48,3.28,three
4503.52,2.24,four
4506.8,5.12,five okay
4508.719,5.52,we'll just leave it as num pages
4511.92,2.319,all right
4514.88,4.96,one other thing that i meant to add
4516.48,7.679,earlier is uh the total number of jobs
4519.84,7.04,at the top right under the title
4524.159,5.921,so let's do a
4526.88,3.2,variant h6
4531.04,4.4,and
4532.159,6.761,put in the total number of jobs here
4535.44,3.48,num jobs
4543.92,3.52,245 cool
4547.92,3.36,getting very close to being done with
4549.52,5.04,the front end here um
4551.28,5.84,oh cancel that uh
4554.56,4.08,okay now let's implement the actual
4557.12,3.84,pagination
4558.64,2.32,um
4561.12,3.52,and we could do that by just creating a
4562.88,5.2,slice that we're gonna map over instead
4564.64,3.44,of the list of all jobs
4569.36,6.08,uh jobs on page
4572.32,6.399,which is just jobs slice
4575.44,3.279,okay let's think about how to do
4578.84,4.68,this first number is going to be
4585.199,3.761,okay um
4587.12,4.84,yeah
4588.96,3.0,so
4594.56,4.88,active step let's keep in mind is our
4597.04,4.32,page that we're on now
4599.44,3.12,so the lower bound is going to be active
4601.36,3.04,step
4602.56,4.24,times 50
4604.4,8.08,and the upper bound is going to be
4606.8,5.68,active step times 50 plus 50.
4614.08,8.04,now all we're gonna map is
4617.36,4.76,uh jobs on page not the full list
4625.92,4.16,and um now we only have 50. so much more
4628.8,2.879,navigable
4630.08,4.0,in terms of what's being rendered and
4631.679,5.841,then if we go to the next page
4634.08,5.92,it updates next page updates
4637.52,2.48,sweet
4640.159,6.0,all right that is our pagination done
4643.6,7.079,uh now all we need left
4646.159,4.52,is this pop-out modal
4652.8,3.28,and then our front end will be
4657.84,4.399,all we need left is the pop out modal
4659.679,3.52,and our front end will be totally done
4662.239,3.041,uh
4663.199,3.441,so what i want to do is click on this
4665.28,5.04,and then it'll give me a more detailed
4666.64,5.2,view as well as a link where i can apply
4670.32,4.96,so the first thing i want to do is add a
4671.84,6.72,hover state to this job div
4675.28,6.24,with a hover sudo class and css
4678.56,5.44,and then i'll just make cursor
4681.52,2.48,pointer
4684.719,4.48,pointer
4686.32,6.16,and i could also make the
4689.199,5.921,colors a
4692.48,5.04,a gray color just so it's very clear
4695.12,6.48,that we are hovering over this page
4697.52,7.679,or over the the job that i'm indicating
4701.6,5.44,so that that doesn't look great but it's
4705.199,4.081,uh okay for now let's just make this a
4707.04,3.92,little bit of a darker gray than
4709.28,4.72,dark gray
4710.96,3.04,all sixes here
4719.12,5.52,all right so that looks fine
4722.239,2.401,um
4724.88,6.88,okay so there's our hover state now on
4729.12,2.64,on click
4733.04,3.04,we're gonna want to
4738.4,4.16,push that job into
4740.88,4.0,the modal state
4742.56,5.52,because we want to know which job
4744.88,6.319,specifically to display in the modal we
4748.08,5.2,also want to set a modal open flag
4751.199,3.921,to
4753.28,3.2,let the app know to show the modal
4755.12,2.559,itself
4756.48,4.56,i think this is going to make a lot more
4757.679,3.361,sense when i actually read it out
4761.6,2.639,so um
4765.04,4.08,i'm gonna add it to
4766.96,2.16,the
4769.36,4.48,let me think about this
4771.6,4.72,yeah i'm just gonna add it to the bottom
4773.84,4.319,of jobs below my mobile stepper and i'm
4776.32,4.32,going to pull another component from
4778.159,4.321,material ui to do that
4780.64,3.28,and you might have guessed it it's going
4782.48,4.0,to be a dialog
4783.92,2.56,component
4787.92,6.08,so if you go under feedback
4790.48,3.52,there's uh dialogues
4797.6,3.599,and i kind of already know the one i
4799.76,5.72,want because i
4801.199,4.281,there's a lot of them
4806.0,3.04,and it's going to be the
4810.32,3.2,slide in alert
4817.6,4.72,i just think this one looks pretty cool
4820.32,3.52,because you click it and then it
4822.32,3.44,oh
4823.84,4.24,wait that didn't slide in where's the
4825.76,2.32,slide
4831.6,3.36,okay so you can see there it kind of
4833.199,3.681,slid up and in
4834.96,4.96,my computer is going slow but
4836.88,3.04,uh it'll look cool
4842.239,7.281,okay so we have to import a bunch of
4844.719,6.96,these components for this one to work
4849.52,5.44,in a perfect world you would
4851.679,4.721,make this modal its own component
4854.96,5.44,and
4856.4,6.96,i think i will do that actually
4860.4,2.96,call it job model
4867.12,3.24,dot js
4882.719,3.121,let's bring it react
4886.0,6.8,export default
4889.36,3.44,function job modal
4893.36,3.839,and our prop is going to be called job
4897.36,4.4,returning jsx
4899.76,6.0,and
4901.76,4.0,importing everything i just copied
4911.76,4.64,also there's some forward ref business
4914.719,4.48,going on here but
4916.4,5.44,we'll just trust that works
4919.199,2.641,like the
4922.159,4.961,material ui docs say it does
4925.84,5.76,and uh
4927.12,6.8,let's bring all of this in
4931.6,2.32,to
4938.159,3.0,here
4950.719,5.201,i am going to delete these though
4953.92,4.08,or rather i'm going to move these into
4955.92,4.0,our parent component because that's
4958.0,4.639,where we want to manage
4959.92,2.719,the state from
4968.56,4.119,it's going to go in the jobs component
4979.679,5.641,um let's
4981.199,4.121,consolidate this down
4991.36,5.76,this is for pagination
4994.239,2.881,and then modal
4998.4,3.52,consolidate this down too
5005.04,4.88,uh okay
5006.719,3.201,now we want to import
5010.0,3.32,job model
5022.239,4.321,then uh
5023.92,4.88,put this at the top here actually
5026.56,3.679,job modal open
5028.8,3.919,is open
5030.239,4.721,job is
5032.719,2.241,okay
5035.12,4.64,now this is where we have to define our
5036.639,3.121,actual modal state
5040.159,8.161,um active modal active uh no selected
5044.8,3.52,job let's do selected job
5054.4,3.839,so let's do just one more state
5065.28,3.52,okay
5066.32,2.48,state
5069.12,5.119,starting out it'll be an empty object
5071.84,5.12,default state
5074.239,2.721,and um
5080.719,2.641,select job will
5082.4,4.799,occur
5083.36,3.839,when we click on a job
5087.52,4.159,on click
5088.96,5.279,let's set some more room there
5091.679,2.56,select
5097.12,3.76,select job
5099.679,3.52,job
5100.88,4.16,like that so there's a callback in the
5103.199,3.761,on click function
5105.04,4.32,that will run when we click
5106.96,5.6,and it's going to set
5109.36,5.04,uh the selected job to whatever job we
5112.56,4.0,click
5114.4,6.4,good start and then that selected job is
5116.56,4.24,being passed in to job model
5122.0,7.52,um let's just rename this to be extra
5124.8,4.72,clear destructure job and open
5132.8,2.24,and
5136.239,4.161,if there's no job title we know this
5138.159,4.321,hasn't been set yet so we just return
5140.4,4.72,nothing
5142.48,4.56,that's just protecting against a empty
5145.12,4.24,object
5147.04,2.32,and
5150.32,3.24,let's see
5154.48,4.719,oh yeah we also gotta
5156.48,4.719,pass in our uh oh well no we don't need
5159.199,3.52,this because this is happening one level
5161.199,3.281,up
5162.719,3.761,right
5164.48,4.64,and um
5166.48,4.32,that also reminds me we have to
5169.12,6.36,not only select the job but set the
5170.8,4.68,model to open as well
5182.719,3.041,and i'll click open
5193.199,3.921,and then handle close is going to happen
5195.04,3.679,here
5197.12,2.8,and
5198.719,2.801,like
5199.92,4.16,no
5201.52,4.32,and all
5204.08,4.76,close
5205.84,3.0,okay
5216.159,3.841,pull that out
5218.239,4.241,and um
5220.0,3.84,okay let's see what errors we're getting
5222.48,3.92,i'm sure this isn't going to work out of
5223.84,2.56,the gate but
5234.4,3.799,just got a typo there
5242.719,3.601,okay
5243.6,5.96,so if i click
5246.32,3.24,what happens
5298.48,3.44,all right
5305.76,6.0,okay we actually have to pass down
5308.8,2.96,this function
5312.96,4.16,like that and then we open job
5318.32,5.52,and
5320.0,3.84,we do that on click here
5325.36,2.96,because it wasn't running
5328.4,4.64,we need to we needed to put it on the on
5330.4,2.64,the child
5333.28,4.399,oh
5334.88,4.88,nice
5337.679,4.641,nice
5339.76,5.12,got it down
5342.32,2.56,all right
5346.32,4.08,so title
5348.239,3.601,now we can start putting in our
5350.4,3.52,our variables
5351.84,4.24,this job title
5353.92,4.319,um
5356.08,4.4,instead of just having that there maybe
5358.239,4.721,we also put the
5360.48,2.48,logo
5363.36,2.879,of the company
5371.679,2.241,so
5374.08,3.8,yeah let's make this fancy
5378.159,4.161,do a image source
5384.639,2.481,company
5388.639,3.881,job company logo
5394.239,2.641,and um
5401.44,6.4,detail logo
5404.08,3.76,in here we will do
5408.08,4.4,detail
5410.0,2.48,logo
5412.88,6.359,make it pretty small 30 pixels
5415.84,3.399,float right
5420.0,6.159,now back over here
5422.0,4.159,we of course want the company
5428.56,4.24,and um
5430.48,4.0,in the content
5432.8,4.32,we definitely want the
5434.48,2.64,description
5441.12,4.32,okay one tricky thing though you'll
5442.719,2.721,notice that the
5445.76,4.64,description is in html it's an html
5448.48,5.759,string
5450.4,3.839,so a trick with react is um
5454.32,3.6,if you want to actually render html from
5456.239,3.361,a string it's considered dangerous
5457.92,3.84,because you can put in script tags and
5459.6,3.599,execute script on someone else's
5461.76,3.76,browser
5463.199,4.48,so if you want to allow this as the
5465.52,7.28,developer you have to use
5467.679,5.121,the dangerously set html inner html
5472.88,4.24,attribute like that
5474.88,4.96,and then you
5477.12,4.64,pass in an object with uh
5479.84,4.879,the key html
5481.76,5.439,equals whatever you want your html
5484.719,4.721,string to be
5487.199,3.681,and that'll do the trick but
5489.44,5.36,it's
5490.88,3.92,again dangerous so use it sparingly
5496.88,4.16,as for the
5498.719,4.121,buttons at the bottom
5501.04,4.48,let's change this one to
5502.84,5.0,apply and
5505.52,4.96,this will just be a link to
5507.84,6.48,the original job posting for now
5510.48,3.84,so we'll wrap this in an anchor tag
5514.96,6.08,a
5516.84,5.28,href uh wrap it in anchor tag
5521.04,3.199,of
5522.12,5.72,job.url which is the link to the
5524.239,3.601,original job you see here
5528.719,3.841,closing anchor tag goes on the other
5530.719,5.121,side of the button maybe we don't
5532.56,5.119,actually want this button to close
5535.84,2.879,the modal
5537.679,4.0,and then i'm just going to save
5538.719,2.96,everything we just did
5544.8,3.359,now i'm opening it again
5551.76,5.52,we do have an error but it's looking
5554.639,2.641,pretty good
5559.28,5.6,and
5561.84,5.2,i'm wondering if the
5564.88,3.279,the reason for this is that i just have
5567.04,3.44,to
5568.159,5.961,use the dangerously set inner html
5570.48,3.64,directly on this
5574.56,5.599,let's see if that works
5577.04,6.119,changing this to a self-closing uh
5580.159,3.0,tag
5589.6,3.76,and uh one thing i want to do also is
5591.6,4.32,put a break between the
5593.36,4.48,the title here and the company
5595.92,3.84,because they were both on the same line
5597.84,6.0,actually let's just do it like this put
5599.76,4.08,in a little hyphen to separate them
5614.239,3.321,when i open
5619.199,2.241,click
5622.8,2.879,okay awesome
5627.36,3.76,and uh
5628.639,3.281,if i click apply it'll take me to
5631.12,2.4,the
5631.92,4.719,company
5633.52,5.28,or the rather the original job posting
5636.639,4.401,which we may want to make a little more
5638.8,3.52,complicated down the road but for now
5641.04,3.199,it's good
5642.32,3.76,uh
5644.239,3.281,one more thing i want to do is make this
5646.08,5.92,link a
5647.52,4.48,target blank so it'll open in a new tab
5652.8,5.52,underscore blank so that'll open this
5655.52,4.639,link in a new tab
5658.32,3.919,all right as far as the modal goes i
5660.159,5.52,think
5662.239,4.241,we're pretty we're pretty much good
5665.679,3.04,so
5666.48,4.239,for now i mean that could be obviously
5668.719,5.121,we could add a little more pizzazz to
5670.719,3.121,this front end if we
5674.32,5.919,you know continue improving it over time
5677.28,5.12,but for now i mean it's very functional
5680.239,5.361,it does everything we wanted to do i can
5682.4,4.56,click on different jobs and get um
5685.6,2.88,get a different
5686.96,4.8,you know listing
5688.48,3.28,this opens and closes
5692.96,4.32,and
5694.719,5.121,these are all working with the logo
5697.28,4.72,and i can scroll it looks pretty good it
5699.84,4.48,looks pretty good
5702.0,2.32,so
5704.4,5.12,i want to say our front end is done
5707.84,3.76,all right guys we're so close to being
5709.52,3.52,done we literally just have to deploy
5711.6,4.0,our app and
5713.04,4.88,will be home free a lot of people are
5715.6,4.0,afraid of deployment but
5717.92,3.84,it's not that bad if you break it down
5719.6,4.48,into steps when i think about what we
5721.76,5.68,need it's going to be a domain
5724.08,5.92,pointing to a virtual private server
5727.44,5.52,which is hosting nginx now nginx is
5730.0,5.36,called a reverse proxy it connects your
5732.96,4.32,server to the public internet and
5735.36,3.279,provides like protection between those
5737.28,3.2,requests
5738.639,4.641,the other thing we're going to need is a
5740.48,4.48,process manager on our server after we
5743.28,3.12,install our dependencies that we have in
5744.96,4.0,our local environment so we're going to
5746.4,4.56,need the same things redis
5748.96,3.44,we're going to need node.js and then
5750.96,3.679,we're just going to need to send over
5752.4,3.839,all our files so they can actually run
5754.639,4.08,on our server in the same way they're
5756.239,4.161,running locally so let's do it i've
5758.719,3.361,pulled up a bunch of docs here we're
5760.4,4.08,going to need it's just going to be a
5762.08,4.32,lot of copy and pasting for server
5764.48,3.679,configurations and i'll put all these
5766.4,3.759,links in the description
5768.159,4.161,so like i mentioned first uh we need a
5770.159,4.0,domain i already bought one on google
5772.32,3.359,domains but you can buy a domain a ton
5774.159,3.761,of different places i just like google
5775.679,5.281,because the interface and it's because
5777.92,3.92,where my uh other domains are
5780.96,2.56,so
5781.84,4.0,i've opened my domain i already bought
5783.52,4.24,it a normal.com domain is going to be
5785.84,4.48,about 14 a year
5787.76,5.52,and the first thing we need to do is use
5790.32,5.12,the digital ocean name servers so that
5793.28,3.6,domain can be directed over to our
5795.44,3.84,server
5796.88,4.96,so you'll see that i have clicked on my
5799.28,4.48,domain i've opened the dns tab and then
5801.84,5.68,there's a name servers tab and i've
5803.76,5.28,clicked use custom name servers
5807.52,4.24,now i'm going to put that on pause and
5809.04,4.56,jump over to the digital ocean dashboard
5811.76,3.919,you can make a digitalocean account for
5813.6,4.079,free and it'll give you this dashboard
5815.679,3.761,where you can create projects which have
5817.679,3.601,resources inside of them
5819.44,3.6,a project is basically just a folder for
5821.28,3.919,a bunch of resources including domains
5823.04,3.76,and virtual servers and then all this
5825.199,3.201,stuff you see down here so i'm just
5826.8,3.6,going to create a new project and call
5828.4,5.12,it um entry level
5830.4,4.0,software jobs e lsj
5833.52,3.28,and
5834.4,3.759,it's a web application
5836.8,3.28,so i'm just going to create that and
5838.159,3.441,then like i said it's just a folder
5840.08,3.52,we're going to start with no resources
5841.6,5.599,so i'm going to skip that step for now
5843.6,6.079,but right away we're going to create a
5847.199,2.48,domain
5851.6,3.44,and the domain is going to be the one
5853.28,3.52,that we bought entry level software
5855.04,3.679,jobs.com
5856.8,4.879,so i'm just going to put that here
5858.719,2.96,and then add it
5863.679,4.641,and you'll see that
5866.32,4.64,i have the digital ocean name servers
5868.32,4.799,here so it's ns1 2 and 3. so i'm just
5870.96,3.84,going to copy this by clicking it and
5873.119,3.12,enter it here and we need all three of
5874.8,4.0,them so i'm just going to
5876.239,5.201,expand this out make this one two
5878.8,4.24,and then make this one three
5881.44,3.199,now when you change the name servers it
5883.04,3.199,could take a
5884.639,3.441,a little while to actually update it
5886.239,3.601,says up to 24 hours
5888.08,3.28,a lot of time for me it's instant but
5889.84,3.6,it's not always the case so you might
5891.36,3.12,have to wait and we'll see what happens
5893.44,2.719,here
5894.48,3.44,so next thing i'm going to do is
5896.159,3.841,actually
5897.92,4.56,create a
5900.0,4.96,droplet which is our vps virtual private
5902.48,3.679,server you can do this on any cloud
5904.96,3.279,provider
5906.159,3.04,other common ones are aws or google
5908.239,2.241,cloud
5909.199,4.081,but um
5910.48,4.0,on aws this is called an ec2
5913.28,3.6,and then i'm not sure what it's called
5914.48,5.199,in google cloud maybe just a vps but on
5916.88,4.56,do it's called a droplet which is just a
5919.679,3.201,server
5921.44,3.279,so what you have to do is choose your
5922.88,4.08,operating system i'm choosing ubuntu
5924.719,3.281,linux 1804
5926.96,2.48,and
5928.0,3.76,you can choose the size of your server
5929.44,5.04,you could always upgrade it later
5931.76,4.879,which requires a server restart
5934.48,5.199,so i'm just going to pick the 15 a month
5936.639,5.681,which has three gigabytes of ram and 60
5939.679,4.96,gigabyte of storage
5942.32,4.399,and then um moving down you could choose
5944.639,4.161,your data center where is your server
5946.719,3.841,physically located and then moving down
5948.8,3.52,you could do private networking's useful
5950.56,2.88,if you have you know multiple servers
5952.32,4.799,talking to each other but the most
5953.44,4.799,important part is here at your ssh keys
5957.119,2.801,you're probably going to want to do a
5958.239,3.92,new ssh key but i already have mine
5959.92,4.319,saved here you definitely need this step
5962.159,4.56,because you need it to actually get into
5964.239,3.841,your server to connect to it otherwise
5966.719,4.241,there's no way to get into it so you
5968.08,4.72,definitely need a ssh key and then uh
5970.96,3.92,feel free to look up a tutorial to set
5972.8,4.0,that up i'm not going to do it here but
5974.88,3.359,it's pretty easy to do
5976.8,2.879,and then i'm just going to call a
5978.239,3.44,hostname master because we're only going
5979.679,5.201,to have one server with all our services
5981.679,3.201,and then finally create this
5988.88,4.88,so this server is now being created it
5991.679,4.401,doesn't take too long and i'm going to
5993.76,5.52,go back into my domain and add an a
5996.08,6.0,record for at which is just the root
5999.28,4.48,domain and i want it to direct to our
6002.08,3.599,master server
6003.76,4.32,so i'm just going to create that record
6005.679,5.361,and that is step one in linking our
6008.08,2.96,domain to our server
6012.48,3.759,now uh once this finishes which it looks
6014.8,4.48,like it just did we got the green light
6016.239,5.121,here i'm going to copy the ipv4 address
6019.28,5.76,that's the ip address and i'm just going
6021.36,7.44,to ssh directly into this server
6025.04,7.76,by doing root at ip address just like
6028.8,6.08,that ssh root at ip address
6032.8,3.68,and it looks like it wasn't completely
6034.88,3.2,finished loading so i'm just going to
6036.48,5.199,try it one more time
6038.08,3.599,and now we type in yes
6042.159,3.681,and there we go so you can see our
6044.0,3.679,operating system here and now we have a
6045.84,3.6,command line in our server so we're
6047.679,4.48,actually in our server
6049.44,3.6,through a secure shell that's ssh so i'm
6052.159,4.161,just going to clear this out with
6053.04,5.679,command k and it's important to
6056.32,4.319,look at the command prompt to know where
6058.719,3.841,we actually are we don't want to be
6060.639,3.841,installing things on our local machine
6062.56,3.76,that we think we're doing on our server
6064.48,3.52,so always keep an eye on this i'm rude
6066.32,3.12,at master master being the name of our
6068.0,3.92,server
6069.44,4.56,all right so as i mentioned we have to
6071.92,4.239,install nginx to actually talk to the
6074.0,4.719,public internet and uh if we have a
6076.159,6.401,domain we also want to install an ssl
6078.719,6.4,certificate which gives us the https
6082.56,4.48,secure connection and that sounds
6085.119,4.08,complicated but it's really easy if you
6087.04,4.48,use the tool like certbot i have the
6089.199,5.92,documentation open here
6091.52,6.639,all you do is um you choose your
6095.119,5.681,software on your system and as you'll
6098.159,4.721,recall we used 1804
6100.8,4.56,and it'll give you a a series of
6102.88,4.56,commands to just enter into your
6105.36,3.92,server and it'll install pretty much
6107.44,3.84,everything you need so i'm just going to
6109.28,4.32,run these commands
6111.28,4.48,and a few of them require me to
6113.6,3.2,hit yes so i'm just going to do them one
6115.76,2.8,at a time
6116.8,3.439,make sure each one works while
6118.56,3.28,periodically clearing out my console
6120.239,3.361,with command k
6121.84,4.879,just to give us more space so there's
6123.6,3.119,one where i have to hit yes
6129.36,4.68,and let's just keep going through these
6136.88,3.6,so the nice thing about this certbot is
6138.639,3.921,usually you have to install nginx on its
6140.48,4.639,own but this will install our nginx and
6142.56,4.32,our certificate our certificate
6145.119,3.361,all at the same time
6146.88,3.759,and then we just have to update our
6148.48,4.719,nginx config and we'll be already
6150.639,6.08,serving our application to the uh to the
6153.199,3.52,public internet through our domain
6159.199,4.121,okay last command here
6165.04,3.0,yes
6177.679,2.321,all right
6180.88,4.64,okay i'm going to copy this
6182.719,5.681,sudo sir bot nginx command which is
6185.52,4.08,what actually runs the uh installation
6188.4,2.64,and then i'm going to enter that in and
6189.6,3.44,it'll take us through a series of
6191.04,3.679,prompts to actually install this so i'm
6193.04,3.52,going to put an email
6194.719,3.601,and then agree
6196.56,3.52,no
6198.32,3.68,now we need our actual domain we got to
6200.08,5.96,make sure we spell it right here entry
6202.0,4.04,level software jobs.com
6215.92,4.719,an important thing to take note of here
6217.6,5.039,is where it deployed our certificate so
6220.639,4.0,it deployed our certificate in sites
6222.639,3.681,enabled slash default which is a config
6224.639,4.08,file that we later have to edit if we
6226.32,5.2,want to make any changes to our domain
6228.719,5.601,configuration so um we're going to open
6231.52,6.08,that later to update the config but just
6234.32,3.28,keep in mind that location
6237.84,4.72,okay congratulations it was successful
6240.56,4.32,so let's test that and see if our name
6242.56,4.72,servers have propagated yet by going to
6244.88,4.72,the domain and that's exactly what we
6247.28,5.28,want to see welcome to nginx so this is
6249.6,4.079,a non-configured nginx but it is running
6252.56,2.639,and we're
6253.679,5.241,connected to our server from the public
6255.199,3.721,internet so that's great
6260.239,3.92,so we're done with sirbot and then like
6262.239,3.761,i mentioned we want to next edit our
6264.159,3.441,configuration file which is at that
6266.0,5.28,location etc
6267.6,5.68,nginx sites available
6271.28,4.959,uh default and i'm going to open this
6273.28,5.2,with the vim text editor by typing in vi
6276.239,3.761,and then the file location
6278.48,3.92,now vim is pretty cool if you haven't
6280.0,4.719,used it but it's basically installed on
6282.4,4.4,all unix operating systems that is linux
6284.719,4.161,and mac os and it gives us a text editor
6286.8,4.399,right in the console so what i'm doing
6288.88,5.12,here is i'm scrolling down to the second
6291.199,5.04,server block which is actually
6294.0,5.119,indicated by this server bracket
6296.239,4.641,notation and i'm going to look in here
6299.119,4.881,and i can see my
6300.88,6.0,url is defined here and being forwarded
6304.0,5.52,to uh basically port 80.
6306.88,4.48,so um within this location block i'm
6309.52,2.88,just going to completely delete what's
6311.36,2.16,in here
6312.4,4.0,that is
6313.52,5.199,inside the location block and then i'm
6316.4,3.6,going to put a new config in that is
6318.719,3.761,just pretty much something you have to
6320.0,5.199,copy and paste to do port forwarding to
6322.48,5.36,a local port on your machine so i'm
6325.199,3.92,going to copy this location here and i
6327.84,2.48,will put this link in the description
6329.119,3.841,where i'm getting this from but this is
6330.32,4.64,just a standard configuration for port
6332.96,3.679,forwarding so i'm just going to paste it
6334.96,3.12,right in
6336.639,4.641,we have that and then the other thing we
6338.08,6.0,need is to put this outside of our
6341.28,6.56,server block which is actually the port
6344.08,6.32,that we're forwarding to port 80.
6347.84,4.08,so sorry i messed that one up actually
6350.4,2.96,undo
6351.92,3.44,um go in
6353.36,3.2,to make a little space
6355.36,2.96,and then
6356.56,4.24,i'm gonna paste that in there so we're
6358.32,4.96,forwarding localhost 5000 to port 80.
6360.8,5.12,that's what this upstream is doing
6363.28,5.04,so i'm going to save this with colon
6365.92,4.239,escape colon wq
6368.32,4.48,and that saves the file and then i'm
6370.159,5.121,going to do sudum sudo system control
6372.8,4.48,restart nginx
6375.28,3.12,and that just restarts our nginx no
6377.28,4.399,errors
6378.4,4.56,um okay so that's pretty good
6381.679,4.401,um
6382.96,5.679,now let's keep moving and install our
6386.08,4.639,dependencies on our machine
6388.639,4.08,so
6390.719,4.561,i'm going over to this other tutorial
6392.719,4.881,how to set up node.js on ubuntu link in
6395.28,4.399,description and i have to install
6397.6,4.88,actually the node.js version that we
6399.679,5.121,need which is at least six to run uh
6402.48,4.159,create react app build so i'm changing
6404.8,3.76,directory into the home directory that's
6406.639,2.801,the squiggly line then i'm curling this
6408.56,2.72,file
6409.44,5.12,now i'm just running the script that i
6411.28,7.28,received from this file uh curl making a
6414.56,5.119,request to download some dot s h file
6418.56,2.559,which
6419.679,3.841,includes basically some setup
6421.119,4.321,configuration for installing node.js
6423.52,4.4,clearing the terminal and then actually
6425.44,3.52,installing node.js through apt-get which
6427.92,4.48,is
6428.96,5.36,a linux equivalent of homebrew that's
6432.4,2.96,for installing just pretty much any
6434.32,3.6,software
6435.36,5.52,okay that worked and now
6437.92,6.64,i want to install this build essential
6440.88,4.64,file which is or rather module which is
6444.56,3.36,a
6445.52,4.56,helps us run certain npm packages so it
6447.92,3.6,just makes sure we have compatibility
6450.08,4.32,with every um
6451.52,4.88,npm package that we want to use
6454.4,4.64,okay next let's actually test out that
6456.4,5.68,our port forwarding is working by
6459.04,4.56,creating a test file called hello.js so
6462.08,4.559,i'm going to do that with them here
6463.6,5.36,hello.js and then insert this uh
6466.639,5.921,code and i just want to actually change
6468.96,6.88,that to 5000 which is what we set up our
6472.56,4.4,port forwarding to as you might recall
6475.84,4.879,and then i'm just going to save that
6476.96,5.84,with escape wq and then run it with node
6480.719,3.92,so node hello js
6482.8,3.04,and it's running so let's see if that is
6484.639,3.441,actually
6485.84,3.68,being forwarded correctly and it is so
6488.08,3.119,that's great
6489.52,3.36,okay just scrolling down this page and
6491.199,4.561,i'm going to stop that server the next
6492.88,4.88,thing we need to do is install pm2 our
6495.76,4.56,process manager which allows us to run
6497.76,4.879,all our services our api front end and
6500.32,4.24,worker at the same time without us being
6502.639,3.761,actively on the server so it'll run them
6504.56,3.28,restart them capture logs and do a lot
6506.4,3.759,of stuff that's
6507.84,4.64,pretty cool for actually managing our
6510.159,4.96,server processes so i'm just going to do
6512.48,4.239,oh no we don't have npm installed
6515.119,4.56,so of course um
6516.719,6.721,you know no tutorial is perfect so
6519.679,3.761,let's just install npm as well
6525.679,3.841,it normally does that when i install
6527.52,4.56,node but i guess i'm using a different
6529.52,5.28,uh set of commands this time to to do
6532.08,6.159,this so hopefully this just um
6534.8,5.6,doesn't give us any problems later
6538.239,4.721,and uh let's see if that worked
6540.4,8.0,okay sweet so let's do the and the same
6542.96,5.44,command as before npm install gpm2 oops
6550.88,4.4,okay and then to run our react app we
6552.719,5.841,all we need to npm install g another
6555.28,3.28,dependency called serve
6559.679,5.44,okay so we got those two done
6562.08,7.36,and let's just test pm2 with our hello
6565.119,5.281,js file so let's do pm2 start lljs
6569.44,3.92,and
6570.4,4.88,we'll see our pm2 daemon is spawned so
6573.36,3.839,now we can see our pm2 processes with
6575.28,3.2,pm2 ps
6577.199,3.761,and
6578.48,4.159,there's a status cpu and memory which is
6580.96,4.56,pretty cool that we get those stats in a
6582.639,4.08,dashboard and then if i refresh my page
6585.52,4.8,the app is still running in the
6586.719,3.601,background so that's great
6590.88,3.6,so if you remember the steps we outlined
6592.88,3.759,at the beginning the next thing we need
6594.48,4.719,to do is actually get our files onto
6596.639,4.241,this server and once we do that we
6599.199,3.201,should be pretty much done so i'm going
6600.88,4.64,to open up a second
6602.4,4.64,command window here and this is
6605.52,3.84,you'll see in the command prompt my
6607.04,5.28,local machine so what we want to do is
6609.36,5.68,send through the files that we made in
6612.32,4.399,local development before we do that i'm
6615.04,4.4,going to open up this
6616.719,4.96,uh set of files and make one critical
6619.44,5.759,change that will allow us to access our
6621.679,5.52,api on our local server
6625.199,5.281,and that is to basically change this to
6627.199,3.281,just a relative path
6630.8,5.12,so i'm changing this to just slash jobs
6634.239,4.161,and actually i want to change it to be a
6635.92,4.319,little more clear to be slash api
6638.4,3.6,jobs now that means we also have to
6640.239,4.241,change our api route which shouldn't be
6642.0,3.92,a problem slash api slash jobs and we
6644.48,4.159,have to make one change in our package
6645.92,5.36,json and that's adding a proxy config
6648.639,4.161,which allows this to still work on local
6651.28,4.48,development this doesn't affect anything
6652.8,7.28,on production so um
6655.76,5.28,proxying all api routes to a
6660.08,1.76,target
6661.04,2.159,of
6661.84,2.319,localhost
6663.199,3.281,sorry
6664.159,6.56,need the double quotes there http
6666.48,5.119,localhost uh 3001 was our api server i
6670.719,2.96,believe
6671.599,4.321,and i'll save that and again that just
6673.679,4.641,helps us you know still develop in the
6675.92,5.52,same way but we need to make one config
6678.32,5.04,change for the production server as well
6681.44,4.96,so that was our change in um in our
6683.36,5.04,files and as i mentioned i'm going to go
6686.4,5.04,actually back into that nginx config
6688.4,4.719,file etc engine x
6691.44,4.159,sites available
6693.119,5.281,default and i have to add one
6695.599,4.08,additional location block just for the
6698.4,3.199,api
6699.679,5.44,route because basically what this is
6701.599,6.161,doing is appending the relative path to
6705.119,6.08,the end of our url and nginx needs to
6707.76,5.52,know to direct this to actually port um
6711.199,5.201,3001
6713.28,4.959,on when it's being run by the browser so
6716.4,3.839,it's just basically a different port
6718.239,2.88,forwarding for a different path
6720.239,3.041,and
6721.119,4.321,the way we do that is by
6723.28,3.04,getting a proxy pass
6725.44,3.199,to
6726.32,5.2,http localhost
6728.639,4.401,3001. semicolon is important i forget
6731.52,4.32,that a lot so
6733.04,7.119,escape wq to save and then system
6735.84,4.319,control restart nginx
6740.32,3.68,all right so we're about to send through
6741.92,3.36,our files to our production server i'm
6744.0,3.119,going to change into my client and then
6745.28,4.0,i'm going to do an npm run build to
6747.119,5.681,create a production build of my react
6749.28,4.959,app that we we just built
6752.8,4.56,this includes everything from our
6754.239,5.281,package.json and also our minified
6757.36,3.839,version of our javascript files and our
6759.52,4.079,bundle js
6761.199,3.44,now we can see that we have a build
6763.599,2.161,folder
6764.639,2.641,and
6765.76,3.28,we send this through the same way that
6767.28,4.16,we actually ssh in
6769.04,5.119,with a command called scp
6771.44,4.719,and then i'm going to put in an r flag
6774.159,4.721,for recursive so it'll send anything
6776.159,3.52,recursively within the build folder
6778.88,3.44,to
6779.679,4.641,our uh server url i'm just going to copy
6782.32,4.0,that again from here
6784.32,4.56,by going to master
6786.32,4.319,oops that's not good
6788.88,5.68,okay no it hasn't been destroyed false
6790.639,7.6,alarm uh copy the ipv4 and then do the
6794.56,5.039,same syntax root at our ipv address and
6798.239,3.44,then uh
6799.599,4.721,i need to put in a colon and then the
6801.679,4.801,home directory so where are we sending
6804.32,3.2,it to on our server and we just want to
6806.48,3.6,make sure it's going to the home
6807.52,2.56,directory
6810.159,3.681,okay so that's sent through all our
6811.679,4.641,files from the build folder and now when
6813.84,4.399,i ls inside of our server you'll see the
6816.32,3.12,build folder is there
6818.239,2.561,so that's great
6819.44,2.96,so um
6820.8,4.16,let's start this up we're not gonna have
6822.4,4.56,any data running yet because we don't
6824.96,3.84,have our workers started on our server
6826.96,4.719,but um let's
6828.8,4.399,start this up by pm2 stop hello this was
6831.679,5.681,our test server we know it works and
6833.199,4.161,then we'll do pm2 delete hello
6837.84,5.759,and now i'm going to do a special kind
6839.36,6.08,of syntax to actually serve our build
6843.599,4.321,folder publicly and that's going to
6845.44,4.159,combine the serve package we downloaded
6847.92,4.799,with the pm2
6849.599,4.321,process manager so i'm going to do pm2
6852.719,2.081,start
6853.92,4.08,serv
6854.8,5.359,dash dash s build
6858.0,4.8,this is just saying use the serve
6860.159,5.281,package and run this command dash s
6862.8,6.48,build under serve it's
6865.44,6.32,the same as pm2 starting uh just running
6869.28,4.879,this command serve as build and in fact
6871.76,4.399,let's try this first serve as build to
6874.159,4.161,see if our application is going to be
6876.159,4.241,served
6878.32,4.72,so it says serving local and network to
6880.4,3.68,the port we're forwarding to and there
6883.04,2.96,it is
6884.08,3.92,already uh we can see it's kind of
6886.0,4.56,working here's our domain and then
6888.0,5.36,here's our front end with no data but
6890.56,6.4,like i just typed we're going to
6893.36,5.12,run this in pm2 with pm2 start serve as
6896.96,3.84,build
6898.48,4.719,and you'll see it created under a name
6900.8,4.08,serve that's probably not the best but
6903.199,3.92,we can keep that in mind this is running
6904.88,3.92,under the process serve and it's online
6907.119,3.52,and then when i refresh it's still
6908.8,4.24,running so that's cool
6910.639,4.96,now we have our front end running so we
6913.04,5.52,have to send through our worker and our
6915.599,4.961,api files so i'm going to clear that out
6918.56,4.0,this is our local machine again change
6920.56,5.679,directory out to our home directory and
6922.56,5.679,then we want to send through a cpr
6926.239,3.761,let's see api
6928.239,3.92,and i'm just going to hit up a few times
6930.0,4.32,to get this command back i'll send
6932.159,4.801,through the api folder
6934.32,6.24,to our home directory then i'll send
6936.96,3.6,through the worker folder
6941.36,5.92,then i'll also send through package.json
6943.679,6.401,to get our dependencies namely express
6947.28,5.839,and the redis client
6950.08,5.44,so back over in our vps i'm you going to
6953.119,6.641,need to install redis so i'm just going
6955.52,6.56,to do sudo apt-get install redis
6959.76,2.32,yes
6965.679,3.361,and we can test whether that installed
6967.119,3.921,by doing redis cli as we did on local
6969.04,4.639,and it seems to work so exit
6971.04,4.4,and now that we have all our files here
6973.679,3.92,let's just check that we do
6975.44,4.88,let's do npm install to get those
6977.599,2.721,dependencies
6982.719,3.361,and
6983.599,5.52,now let's start our worker
6986.08,5.44,or rather let's start our api bm2
6989.119,3.681,uh start api
6991.52,2.24,index.js
6992.8,3.76,i'll do
6993.76,5.28,name api
6996.56,6.119,and then we'll also start our worker
6999.04,3.639,pm2 start
7003.84,6.96,index.js name worker
7008.08,4.559,okay everything seems to be running
7010.8,4.72,but how are we sure that our work is
7012.639,5.04,working well let's do pm2 logs
7015.52,4.56,worker just to see if those
7017.679,4.161,logs that we set with the console logs
7020.08,3.36,that actually give us the indication
7021.84,4.0,workers working
7023.44,4.159,are actually going to run so
7025.84,4.319,you'll remember that we did a cron for
7027.599,3.921,every minute so let's see if those logs
7030.159,3.121,are actually going to run after a minute
7031.52,3.599,so we just got to wait and see if that
7033.28,4.0,happens and then once that happens our
7035.119,4.161,redis will be loaded so
7037.28,5.52,in theory we should be able to refresh
7039.28,4.959,our page and then see all the jobs there
7042.8,4.319,but right now we just gotta wait the
7044.239,4.561,suspense is is kind of killing me here
7047.119,3.52,uh i feel like it's been longer than a
7048.8,4.0,minute i don't know if it's gonna work
7050.639,6.161,or not
7052.8,4.0,but i actually have faith okay
7057.36,2.48,there we go
7061.199,4.0,come on worker you can do it
7066.32,4.72,okay it says success okay
7068.719,4.241,and uh so now our reddish should be full
7071.04,4.4,if i refresh
7072.96,4.56,there's all our jobs amazing so we have
7075.44,4.239,a deployed application everything looks
7077.52,3.28,just as it did on local if i click into
7079.679,2.241,these jobs
7080.8,3.359,let's see
7081.92,4.239,uh it works there's our description logo
7084.159,4.161,and everything and then if i click apply
7086.159,3.601,it'll take us to that position
7088.32,3.6,so that's pretty cool guys we just
7089.76,3.6,deployed our whole app and it didn't
7091.92,3.44,even take that long i feel like that was
7093.36,3.759,around 30 minutes or so
7095.36,4.879,all right guys that's it we basically
7097.119,5.281,built a whole production application in
7100.239,3.761,less than 100 minutes and we got it
7102.4,3.319,deployed and now it's running on the
7104.0,3.36,public internet at
7105.719,2.52,entrylevelsoftwarejobs.com so go check
7107.36,3.92,it out
7108.239,4.4,but um i'm thinking next there's a few
7111.28,3.76,critical things we have to do before
7112.639,4.48,we're ready for like a full production
7115.04,3.679,launch so to speak this was just our
7117.119,4.0,base framework that we're building more
7118.719,4.161,features off of but at minimum i think
7121.119,4.161,we need a few more data feeds and we
7122.88,4.799,need to make our algorithm a lot more
7125.28,4.72,robust prevent it from breaking on
7127.679,4.081,errors as well as filtering down those
7130.0,3.119,jobs a lot more because if we get in
7131.76,3.76,five feeds we're just gonna have a huge
7133.119,4.721,amount of jobs and we really wanna make
7135.52,3.679,sure those are entry level jobs so i'm
7137.84,2.799,thinking that we
7139.199,2.721,parse through the description and look
7140.639,3.04,for like three to five years of
7141.92,3.279,experience and take those out i think
7143.679,3.841,anything less than three years would
7145.199,3.92,qualify as an entry-level job so
7147.52,3.36,again we're gonna have to keep working
7149.119,3.6,on the algorithm and then otherwise
7150.88,4.08,we're gonna want to add a little bit of
7152.719,4.241,monitoring logging different things like
7154.96,4.08,that but that can all come later our mvp
7156.96,4.159,is done and our base of our application
7159.04,4.0,is done so that's pretty cool so anyway
7161.119,3.841,hope you learned something um let me
7163.04,5.44,know if you have any questions and i
7164.96,3.52,will talk to you guys soon
