[Music] Zig a high performance system programming language often labeled as a Next Generation alternative to C it was created by Andrew Kelly in 2016 and has quickly evolved into one of the most desired new languages in the world like C it's minimal extremely fast and allows for low-level memory control but instead of managing memory directly in the language with functions like Malik and free the zig standard Library ships allocators to provide a consistent interface for memory management Zig is not a memory safe language like rust or go but it doesn't have any hidden memory allocations making the code far more explicit and portable because allocators can be easily swapped out in the code to Target different architectures like x86 arm webassembly and bare metal in addition Zig has no hidden control flow if it looks like a function and quacks like a function it's a function there's no operator overloading and it doesn't even have exceptions if a function can fail it needs to return an explicit error value the language also has a unique comp time keyword that makes it trivial to run Kodak compile time instead of runtime no preprocessor or macros are necessary and finally Zig can integrate well into a c or C plus plus code base and supports cross compilation out of the box with llvm although divorce paperwork has been filed to get started install Zig then create a new project with the zignet exe command in the main file first to import the standard library then Define a main function notice how the function returns a type of void with an exclamation point that exclamation point means that the function might return an error declare a mutable variable with the VAR keyword followed by a type like you wait to represent a single byte then assign and modify its value later or use cons to Define an immutable variable that cannot be changed we can also bundle multiple variables together into a struct then access them on that namespace with DOT notation now things start to get more interesting when memory management comes into play when initializing an array of integers we can allocate it to a slice of memory in the Heap using the built-in page allocator from the standard Library what's so cool about this is that we could swap it out with other allocators to use different memory management strategies now when we're done with this memory we need to set it free otherwise we could have a memory leak the defer keyword allows us to put that code right right next to the allocation itself and will automatically de-initialize the list when it goes out of scope now as we operate on the list the try keyword provides explicit error handling if this line fails it will automatically catch and return the error you can't just ignore it and that will make your code more reliable and speaking of reliability Zig has a built-in testing framework use the test keyword to evaluate code outside of the main program then use the zig test command to run it and finally build an executable with the zig build command and choose a build mode to optimize for Speed size or safety this has been the zig programming language in 100 seconds hit the like button if you want to see more short videos like this thanks for watching and I will see you in the next one [Music] 